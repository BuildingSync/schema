/**
 * MappingFrame.java
 *
 * This file was generated by MapForce 2016r2.
 *
 * YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
 * OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
 *
 * Refer to the MapForce Documentation for further details.
 * http://www.altova.com/mapforce
 */


package com.mapforce;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.border.*;

import com.altova.types.*;


public class MappingFrame extends JFrame implements com.altova.TraceTarget {
	
	JPanel			contentPane;
	TitledBorder	titledBorder1;
	Box 		jHeader = new Box(BoxLayout.X_AXIS);
	Box		jHeaderInfo = new Box(BoxLayout.Y_AXIS);
	Box 		jButtonPane = new Box(BoxLayout.X_AXIS);
	JScrollPane	jScrollPaneStructures	= new JScrollPane();
	JPanel		jPanelStructures		= new JPanel();
	JLabel		jIconLabel				= new JLabel();
	JLabel		jInfoLabel1				= new JLabel();
	JLabel		jInfoLabel2				= new JLabel();
	JLabel		jInfoLabel3				= new JLabel();
	JButton		jStartButton			= new JButton();
	JPanel		jPanel1					= new JPanel();
	JScrollPane	jTraceScrollPane		= new JScrollPane();
	JTextArea	jTraceTextArea			= new JTextArea();


	JLabel jCTS_Evaluation_FileLabel0 = new JLabel();
	JTextField jCTS_Evaluation_FileTextField0 = new JTextField();

	JLabel jGeneral_MeasuresLabel1 = new JLabel();
	JTextField jGeneral_MeasuresTextField1 = new JTextField();

	JLabel jCTS_Evaluation_FileLabel2 = new JLabel();
	JTextField jCTS_Evaluation_FileTextField2 = new JTextField();

	JLabel jDetailed_MeasuresLabel3 = new JLabel();
	JTextField jDetailed_MeasuresTextField3 = new JTextField();

	JLabel jCTS_Evaluation_FileLabel4 = new JLabel();
	JTextField jCTS_Evaluation_FileTextField4 = new JTextField();

	JLabel jBuildingSync2Label5 = new JLabel();
	JTextField jBuildingSync2TextField5 = new JTextField();


	public MappingFrame() {
		enableEvents(AWTEvent.WINDOW_EVENT_MASK);
		try {
			jbInit();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	private void jbInit() throws Exception {
		jInfoLabel1.setText("THIS APPLICATION WAS GENERATED BY MapForce 2016r2");
		jInfoLabel2.setForeground(Color.blue);
		jInfoLabel2.setText("http://www.altova.com/mapforce");
		jInfoLabel3.setText("Please check the input and output files, and press the Start button...");
		jHeaderInfo.add(jInfoLabel1,0);
		jHeaderInfo.add(jInfoLabel2,1);
		jHeaderInfo.add(jInfoLabel3,2);
		
		jIconLabel.setIcon(new ImageIcon(MappingFrame.class.getResource("mapforce.png")));
		jIconLabel.setText("");
				
		jHeader.add(jIconLabel);
		jHeader.add(Box.createHorizontalStrut(15));
		jHeader.add(jHeaderInfo);
		jHeader.add(Box.createGlue());
		
		jStartButton.setFont(new java.awt.Font("Dialog", 0, 11));
		jStartButton.setText("Start");
		jStartButton.addActionListener(new MappingFrame_jStartButton_actionAdapter(this));
		jButtonPane.add(Box.createHorizontalStrut(5));
		jButtonPane.add(jStartButton);
		jButtonPane.add(Box.createGlue());
				
		jScrollPaneStructures.setBorder(BorderFactory.createLineBorder(Color.black));
		jScrollPaneStructures.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
		jScrollPaneStructures.setAutoscrolls(true);
		jPanelStructures.setLayout(null);
		fillScrollPane();
		jScrollPaneStructures.getViewport().add(jPanelStructures, null);
		
		jTraceTextArea.setBackground(Color.white);
		jTraceTextArea.setForeground(Color.black);
		jTraceTextArea.setToolTipText("");
		jTraceTextArea.setText("");
		jTraceTextArea.setRows(20);
		
		jTraceScrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
		jTraceScrollPane.setViewportBorder(null);
		jTraceScrollPane.setAutoscrolls(true);
		jTraceScrollPane.setBorder(BorderFactory.createLineBorder(Color.black));
		jTraceScrollPane.setDebugGraphicsOptions(0);
		jTraceScrollPane.setToolTipText("");
		jTraceScrollPane.setVerifyInputWhenFocusTarget(true);
		jTraceScrollPane.getViewport().add(jTraceTextArea, null);
		jTraceScrollPane.setPreferredSize(new Dimension(0, 200));
				
		contentPane = (JPanel)this.getContentPane();
		titledBorder1 = new TitledBorder("");
		contentPane.setLayout(new BoxLayout(contentPane, BoxLayout.Y_AXIS));
		this.setSize(new Dimension(603, 511));
		this.setTitle("Mapforce Application");
		contentPane.add(jHeader, 0);
		contentPane.add(jScrollPaneStructures, 1);
		contentPane.add(jButtonPane, 2);
		contentPane.add(jTraceScrollPane, 3);
	}

	protected void fillScrollPane() {

		jCTS_Evaluation_FileLabel0.setText("Source instance of CTS Evaluation File.xsd:");
		jCTS_Evaluation_FileLabel0.setBounds(new Rectangle(15, 10, 438, 23));
		jPanelStructures.add(jCTS_Evaluation_FileLabel0, null);
		jCTS_Evaluation_FileTextField0.setText("CTS Evaluation File.xlsx");
		jCTS_Evaluation_FileTextField0.setBounds(new Rectangle(15, 35, 438, 23));
		jCTS_Evaluation_FileTextField0.setEditable(false);
		jPanelStructures.add(jCTS_Evaluation_FileTextField0, null);

		jGeneral_MeasuresLabel1.setText("Instance of General Measures file:");
		jGeneral_MeasuresLabel1.setBounds(new Rectangle(15, 60, 438, 23));
		jPanelStructures.add(jGeneral_MeasuresLabel1, null);
		jGeneral_MeasuresTextField1.setText("Text file.csv");
		jGeneral_MeasuresTextField1.setBounds(new Rectangle(15, 85, 438, 23));
		jGeneral_MeasuresTextField1.setEditable(false);
		jPanelStructures.add(jGeneral_MeasuresTextField1, null);

		jCTS_Evaluation_FileLabel2.setText("Source instance of CTS Evaluation File.xsd:");
		jCTS_Evaluation_FileLabel2.setBounds(new Rectangle(15, 110, 438, 23));
		jPanelStructures.add(jCTS_Evaluation_FileLabel2, null);
		jCTS_Evaluation_FileTextField2.setText("CTS Evaluation File.xlsx");
		jCTS_Evaluation_FileTextField2.setBounds(new Rectangle(15, 135, 438, 23));
		jCTS_Evaluation_FileTextField2.setEditable(false);
		jPanelStructures.add(jCTS_Evaluation_FileTextField2, null);

		jDetailed_MeasuresLabel3.setText("Instance of Detailed Measures file:");
		jDetailed_MeasuresLabel3.setBounds(new Rectangle(15, 160, 438, 23));
		jPanelStructures.add(jDetailed_MeasuresLabel3, null);
		jDetailed_MeasuresTextField3.setText("Text file.csv");
		jDetailed_MeasuresTextField3.setBounds(new Rectangle(15, 185, 438, 23));
		jDetailed_MeasuresTextField3.setEditable(false);
		jPanelStructures.add(jDetailed_MeasuresTextField3, null);

		jCTS_Evaluation_FileLabel4.setText("Source instance of CTS Evaluation File.xsd:");
		jCTS_Evaluation_FileLabel4.setBounds(new Rectangle(15, 210, 438, 23));
		jPanelStructures.add(jCTS_Evaluation_FileLabel4, null);
		jCTS_Evaluation_FileTextField4.setText("CTS Evaluation File.xlsx");
		jCTS_Evaluation_FileTextField4.setBounds(new Rectangle(15, 235, 438, 23));
		jCTS_Evaluation_FileTextField4.setEditable(false);
		jPanelStructures.add(jCTS_Evaluation_FileTextField4, null);

		jBuildingSync2Label5.setText("Instance of BuildingSync.xsd:");
		jBuildingSync2Label5.setBounds(new Rectangle(15, 260, 438, 23));
		jPanelStructures.add(jBuildingSync2Label5, null);
		jBuildingSync2TextField5.setText("../BS Schemas/cts.xml");
		jBuildingSync2TextField5.setBounds(new Rectangle(15, 285, 438, 23));
		jBuildingSync2TextField5.setEditable(false);
		jPanelStructures.add(jBuildingSync2TextField5, null);

		jPanelStructures.setLayout(null);
		jPanelStructures.setPreferredSize(new Dimension(285, 500));
		jPanelStructures.setSize(new Dimension(285, 500));
		jPanelStructures.setMinimumSize(new Dimension(285, 500));
		jPanelStructures.setMaximumSize(new Dimension(285, 500));
	}

	protected void processWindowEvent(WindowEvent e) {
		super.processWindowEvent(e);
		if (e.getID() == WindowEvent.WINDOW_CLOSING) {
			System.exit(0);
		}
	}

    void jStartButton_actionPerformed(ActionEvent e) {
		if (e.getSource().equals(jStartButton)) {
			jStartButton.setEnabled(false);
			jTraceTextArea.removeAll();
			jTraceTextArea.append("Started...\n");
			com.altova.TraceTarget ttc = this;


			try {

			MappingMapToGeneral_Measures MappingMapToGeneral_MeasuresObject = new MappingMapToGeneral_Measures();




			MappingMapToGeneral_MeasuresObject.registerTraceTarget(ttc);
	

			// run mapping
			//
			// you have different options to provide mapping input and output:
			//
			// files using file names (available for XML, text, and Excel):
			//   com.altova.io.FileInput(String filename)
			//   com.altova.io.FileOutput(String filename)
			//
			// streams (available for XML, text, and Excel):
			//   com.altova.io.StreamInput(java.io.InputStream stream)
			//   com.altova.io.StreamOutput(java.io.OutputStream stream)
			//
			// strings (available for XML and text):
			//   com.altova.io.StringInput(String xmlcontent)
			//   com.altova.io.StringOutput()	(call getContent() after run() to get StringBuffer with content)
			//
			// Java IO reader/writer (available for XML and text):
			//   com.altova.io.ReaderInput(java.io.Reader reader)
			//   com.altova.io.WriterOutput(java.io.Writer writer)
			//
			// DOM documents (for XML only):
			//   com.altova.io.DocumentInput(org.w3c.dom.Document document)
			//   com.altova.io.DocumentOutput(org.w3c.dom.Document document)
			// 
			// By default, run will close all inputs and outputs. If you do not want this,
			// call the following function:
			// MappingMapToGeneral_MeasuresObject.setCloseObjectsAfterRun(false);

			{
				com.altova.io.Input CTS_Evaluation_FileSource = com.altova.io.StreamInput.createInput("CTS Evaluation File.xlsx");

				MappingMapToGeneral_MeasuresObject.run(
						CTS_Evaluation_FileSource);


			}


			MappingMapToDetailed_Measures MappingMapToDetailed_MeasuresObject = new MappingMapToDetailed_Measures();




			MappingMapToDetailed_MeasuresObject.registerTraceTarget(ttc);
	

			// run mapping
			//
			// you have different options to provide mapping input and output:
			//
			// files using file names (available for XML, text, and Excel):
			//   com.altova.io.FileInput(String filename)
			//   com.altova.io.FileOutput(String filename)
			//
			// streams (available for XML, text, and Excel):
			//   com.altova.io.StreamInput(java.io.InputStream stream)
			//   com.altova.io.StreamOutput(java.io.OutputStream stream)
			//
			// strings (available for XML and text):
			//   com.altova.io.StringInput(String xmlcontent)
			//   com.altova.io.StringOutput()	(call getContent() after run() to get StringBuffer with content)
			//
			// Java IO reader/writer (available for XML and text):
			//   com.altova.io.ReaderInput(java.io.Reader reader)
			//   com.altova.io.WriterOutput(java.io.Writer writer)
			//
			// DOM documents (for XML only):
			//   com.altova.io.DocumentInput(org.w3c.dom.Document document)
			//   com.altova.io.DocumentOutput(org.w3c.dom.Document document)
			// 
			// By default, run will close all inputs and outputs. If you do not want this,
			// call the following function:
			// MappingMapToDetailed_MeasuresObject.setCloseObjectsAfterRun(false);

			{
				com.altova.io.Input CTS_Evaluation_FileSource = com.altova.io.StreamInput.createInput("CTS Evaluation File.xlsx");

				MappingMapToDetailed_MeasuresObject.run(
						CTS_Evaluation_FileSource);


			}


			MappingMapToBuildingSync MappingMapToBuildingSyncObject = new MappingMapToBuildingSync();




			MappingMapToBuildingSyncObject.registerTraceTarget(ttc);
	

			// run mapping
			//
			// you have different options to provide mapping input and output:
			//
			// files using file names (available for XML, text, and Excel):
			//   com.altova.io.FileInput(String filename)
			//   com.altova.io.FileOutput(String filename)
			//
			// streams (available for XML, text, and Excel):
			//   com.altova.io.StreamInput(java.io.InputStream stream)
			//   com.altova.io.StreamOutput(java.io.OutputStream stream)
			//
			// strings (available for XML and text):
			//   com.altova.io.StringInput(String xmlcontent)
			//   com.altova.io.StringOutput()	(call getContent() after run() to get StringBuffer with content)
			//
			// Java IO reader/writer (available for XML and text):
			//   com.altova.io.ReaderInput(java.io.Reader reader)
			//   com.altova.io.WriterOutput(java.io.Writer writer)
			//
			// DOM documents (for XML only):
			//   com.altova.io.DocumentInput(org.w3c.dom.Document document)
			//   com.altova.io.DocumentOutput(org.w3c.dom.Document document)
			// 
			// By default, run will close all inputs and outputs. If you do not want this,
			// call the following function:
			// MappingMapToBuildingSyncObject.setCloseObjectsAfterRun(false);

			{
				com.altova.io.Input CTS_Evaluation_FileSource = com.altova.io.StreamInput.createInput("CTS Evaluation File.xlsx");

				MappingMapToBuildingSyncObject.run(
						CTS_Evaluation_FileSource);


			}



				jTraceTextArea.append("Finished\n");
			} catch (Exception ex) {
				jTraceTextArea.append("ERROR: " + ex.getMessage());
			}

			jStartButton.setEnabled(true);
		}
    }


	public void writeTrace(String info) {
		jTraceTextArea.append(info);
	}
}

class MappingFrame_jStartButton_actionAdapter
	implements java.awt.event.ActionListener {
	MappingFrame adaptee;

	MappingFrame_jStartButton_actionAdapter(MappingFrame adaptee) {
		this.adaptee = adaptee;
	}

	public void actionPerformed(ActionEvent e) {
		adaptee.jStartButton_actionPerformed(e);
	}
}

