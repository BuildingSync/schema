/**
 * MappingMapToBuildingSync.java
 *
 * This file was generated by MapForce 2016r2.
 *
 * YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
 * OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
 *
 * Refer to the MapForce Documentation for further details.
 * http://www.altova.com/mapforce
 */
package com.mapforce;
import com.altova.mapforce.*;
import com.altova.types.*;
import com.altova.xml.*;
import com.altova.text.tablelike.*;
import com.altova.text.*;
import com.altova.text.edi.*;
import java.util.*;

public class MappingMapToBuildingSync extends com.altova.TraceProvider 
{
	private boolean runDoesCloseAll = true;
	public void setCloseObjectsAfterRun(boolean c) {runDoesCloseAll = c;}
	public boolean getCloseObjectsAfterRun() {return runDoesCloseAll;}

	
	static class main implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_CTS_Evaluation_File_Instance;
	
		public main(com.altova.mapforce.IMFNode var1_CTS_Evaluation_File_Instance)
		{
			this.var1_CTS_Evaluation_File_Instance = var1_CTS_Evaluation_File_Instance;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 2;
			Object current;
			main closure;
			IEnumerator var2_Workbook;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			com.altova.mapforce.IEnumerable var5_Cell;
			IEnumerator var6_filter;
			java.lang.String var7_cast;
			com.altova.mapforce.IEnumerable var8_r;
			public Enumerator(main closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_2() throws Exception {
				state = 3;				
				var2_Workbook = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Workbook", ""), closure.var1_CTS_Evaluation_File_Instance)).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var2_Workbook.moveNext()) {state = 4; return false; }
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var2_Workbook.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var2_Workbook != null ) { var2_Workbook.close(); var2_Workbook = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq2_CoreAny((new seq1_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq2_CoreAny((new seq3_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				var5_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current()))));
				var6_filter = (var5_Cell).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var6_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq2_CoreAny((new seq4_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 9; return false; }
				var7_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())));
				var8_r = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current()))));
				current = com.altova.functions.Core.resultDocument(var7_cast, "UTF-8", com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Audits", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq5_join(var7_cast, var5_Cell, var8_r)))));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var2_Workbook != null ) { var2_Workbook.close(); var2_Workbook = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq1_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq1_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq1_map closure;
			IEnumerator var2_Name;
			public Enumerator(seq1_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_Name = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_Name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_Name.current()))), "Evaluation Upload Template");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq2_CoreAny implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_sequence;
	
		public seq2_CoreAny(com.altova.mapforce.IEnumerable var1_sequence)
		{
			this.var1_sequence = var1_sequence;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq2_CoreAny closure;
			IEnumerator var2_enum;
			public Enumerator(seq2_CoreAny closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_enum = (closure.var1_sequence).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_enum.moveNext()) {state = 3; return false; }
				if (!(((Boolean)(var2_enum.current())))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = com.altova.CoreTypes.parseBoolean("false");
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var2_enum != null ) { var2_enum.close(); var2_enum = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_enum != null ) { var2_enum.close(); var2_enum = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq3_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq3_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq3_map closure;
			IEnumerator var2_r;
			public Enumerator(seq3_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(4L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq4_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq4_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq4_map closure;
			IEnumerator var2_n;
			public Enumerator(seq4_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(3L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq5_join implements IEnumerable
	{
		java.lang.String var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq5_join(java.lang.String var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq5_join closure;
			com.altova.mapforce.IMFNode var4_create_element_qname;
			java.lang.String var5_cast;
			java.lang.String var6_concat;
			java.lang.String var7_concat;
			com.altova.mapforce.IEnumerable var8_if_is_filename_with_wildcard;
			com.altova.mapforce.IEnumerable var9_if_is_filename_with_wildcard;
			public Enumerator(seq5_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("xsi:schemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), com.altova.functions.Core.box("http://nrel.gov/schemas/bedes-auc/2014 file:///C:/Users/Robert/Documents/GitHub/BuildingSync/schema/BuildingSync.xsd"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Core.exists(closure.var3_shared))) {state = 0; return false; }
				var4_create_element_qname = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Error Messages"));
				var5_cast = com.altova.CoreTypes.integerToString(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var3_shared)))));
				var6_concat = com.altova.functions.Core.concat("Detailed", var5_cast);
				var7_concat = com.altova.functions.Core.concat("General", var5_cast);
				var8_if_is_filename_with_wildcard = new com.altova.functions.Core.SequenceCache((new seq6_if_is_filename_with_wildcard(var6_concat)));
				var9_if_is_filename_with_wildcard = new com.altova.functions.Core.SequenceCache((new seq7_if_is_filename_with_wildcard(var7_concat)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Audit", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq8_seq_(closure.var1_shared, var4_create_element_qname, closure.var2_shared, var8_if_is_filename_with_wildcard, var9_if_is_filename_with_wildcard)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq6_if_is_filename_with_wildcard implements IEnumerable
	{
		java.lang.String var1_shared;
	
		public seq6_if_is_filename_with_wildcard(java.lang.String var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq6_if_is_filename_with_wildcard closure;
			IEnumerator var2_resolve_filename;
			com.altova.mapforce.IMFNode var4_instance;
			com.altova.mapforce.IMFNode var3_instance;
			public Enumerator(seq6_if_is_filename_with_wildcard closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.mapforce.core.is_filename_with_wildcard.eval(closure.var1_shared))) {state = 2; return false; }
				var2_resolve_filename = (com.altova.functions.Core.resolveFilename(closure.var1_shared)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				{
							com.altova.text.tablelike.csv.Table doc = new com.altova.text.tablelike.csv.Table(com.mapforce.Text_file2.Text_file2_TypeInfo.binder.getTypes()[com.mapforce.Text_file2.Text_file2_TypeInfo._altova_ti_altova_RowsType],0);							
			
			doc.getFormat().setAssumeFirstRowAsHeaders( false );
			doc.getFormat().setFieldDelimiter( ',' );
			doc.getFormat().setRemoveEmpty( true );
			doc.getFormat().setQuoteCharacter( '\"' );
							doc.setEncoding("UTF-8", false, false );
							com.altova.io.Input file = com.altova.io.StreamInput.createInput(closure.var1_shared);
							doc.parse(file);
							file.close();
							var4_instance = new com.altova.text.TableAsMFNodeAdapter(doc, file.getFilename());
				}
				current = var4_instance;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var2_resolve_filename.moveNext()) {state = 4; return false; }
				{
							com.altova.text.tablelike.csv.Table doc = new com.altova.text.tablelike.csv.Table(com.mapforce.Text_file2.Text_file2_TypeInfo.binder.getTypes()[com.mapforce.Text_file2.Text_file2_TypeInfo._altova_ti_altova_RowsType],0);							
			
			doc.getFormat().setAssumeFirstRowAsHeaders( false );
			doc.getFormat().setFieldDelimiter( ',' );
			doc.getFormat().setRemoveEmpty( true );
			doc.getFormat().setQuoteCharacter( '\"' );
							doc.setEncoding("UTF-8", false, false );
							com.altova.io.Input file = com.altova.io.StreamInput.createInput(((java.lang.String)(var2_resolve_filename.current())));
							doc.parse(file);
							file.close();
							var3_instance = new com.altova.text.TableAsMFNodeAdapter(doc, file.getFilename());
				}
				current = var3_instance;
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var2_resolve_filename != null ) { var2_resolve_filename.close(); var2_resolve_filename = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_resolve_filename != null ) { var2_resolve_filename.close(); var2_resolve_filename = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq7_if_is_filename_with_wildcard implements IEnumerable
	{
		java.lang.String var1_shared;
	
		public seq7_if_is_filename_with_wildcard(java.lang.String var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq7_if_is_filename_with_wildcard closure;
			IEnumerator var2_resolve_filename;
			com.altova.mapforce.IMFNode var4_instance;
			com.altova.mapforce.IMFNode var3_instance;
			public Enumerator(seq7_if_is_filename_with_wildcard closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.mapforce.core.is_filename_with_wildcard.eval(closure.var1_shared))) {state = 2; return false; }
				var2_resolve_filename = (com.altova.functions.Core.resolveFilename(closure.var1_shared)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				{
							com.altova.text.tablelike.csv.Table doc = new com.altova.text.tablelike.csv.Table(com.mapforce.Text_file.Text_file_TypeInfo.binder.getTypes()[com.mapforce.Text_file.Text_file_TypeInfo._altova_ti_altova_RowsType],0);							
			
			doc.getFormat().setAssumeFirstRowAsHeaders( false );
			doc.getFormat().setFieldDelimiter( ',' );
			doc.getFormat().setRemoveEmpty( true );
			doc.getFormat().setQuoteCharacter( '\"' );
							doc.setEncoding("UTF-8", false, false );
							com.altova.io.Input file = com.altova.io.StreamInput.createInput(closure.var1_shared);
							doc.parse(file);
							file.close();
							var4_instance = new com.altova.text.TableAsMFNodeAdapter(doc, file.getFilename());
				}
				current = var4_instance;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var2_resolve_filename.moveNext()) {state = 4; return false; }
				{
							com.altova.text.tablelike.csv.Table doc = new com.altova.text.tablelike.csv.Table(com.mapforce.Text_file.Text_file_TypeInfo.binder.getTypes()[com.mapforce.Text_file.Text_file_TypeInfo._altova_ti_altova_RowsType],0);							
			
			doc.getFormat().setAssumeFirstRowAsHeaders( false );
			doc.getFormat().setFieldDelimiter( ',' );
			doc.getFormat().setRemoveEmpty( true );
			doc.getFormat().setQuoteCharacter( '\"' );
							doc.setEncoding("UTF-8", false, false );
							com.altova.io.Input file = com.altova.io.StreamInput.createInput(((java.lang.String)(var2_resolve_filename.current())));
							doc.parse(file);
							file.close();
							var3_instance = new com.altova.text.TableAsMFNodeAdapter(doc, file.getFilename());
				}
				current = var3_instance;
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var2_resolve_filename != null ) { var2_resolve_filename.close(); var2_resolve_filename = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_resolve_filename != null ) { var2_resolve_filename.close(); var2_resolve_filename = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq8_seq_ implements IEnumerable
	{
		java.lang.String var1_shared;
		com.altova.mapforce.IMFNode var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
		com.altova.mapforce.IEnumerable var5_shared;
	
		public seq8_seq_(java.lang.String var1_shared, com.altova.mapforce.IMFNode var2_shared, com.altova.mapforce.IEnumerable var3_shared, com.altova.mapforce.IEnumerable var4_shared, com.altova.mapforce.IEnumerable var5_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq8_seq_ closure;
			public Enumerator(seq8_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Sites", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Site", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Facilities", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Facility", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq9_join(closure.var1_shared, closure.var3_shared)))))))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Measures", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq15_join(closure.var4_shared, closure.var5_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Report", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq22_join(closure.var3_shared, closure.var4_shared, closure.var5_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq43_join(closure.var2_shared, closure.var3_shared, closure.var4_shared, closure.var5_shared)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq9_join implements IEnumerable
	{
		java.lang.String var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq9_join(java.lang.String var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq9_join closure;
			IEnumerator var3_filter;
			public Enumerator(seq9_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq2_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("Facility", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PremisesName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(closure.var1_shared));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FederalBuilding", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq11_map(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreas", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorArea", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq13_join(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq10_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq10_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq10_map closure;
			IEnumerator var2_n;
			public Enumerator(seq10_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(1L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq11_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq11_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq11_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq11_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq2_CoreAny((new seq12_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Agency", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq12_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq12_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq12_map closure;
			IEnumerator var2_n;
			public Enumerator(seq12_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(2L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq13_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq13_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq13_join closure;
			IEnumerator var2_filter;
			public Enumerator(seq13_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Gross"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var2_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq2_CoreAny((new seq14_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 3; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter.current())))), new java.math.BigDecimal("1000")))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq14_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq14_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq14_map closure;
			IEnumerator var2_n;
			public Enumerator(seq14_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(7L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq15_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq15_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq15_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			IEnumerator var8_shared;
			java.math.BigInteger var5_cast;
			IEnumerator var9_filter;
			IEnumerator var6_generate_sequence;
			boolean var7_greater;
			java.math.BigInteger var10_cast;
			IEnumerator var11_generate_sequence;
			boolean var12_greater;
			public Enumerator(seq15_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements("Rows", ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 9;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var8_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!(com.altova.functions.Core.exists(com.altova.functions.Core.filterElements("Number of Measures", ((com.altova.mapforce.IMFNode)(var4_filter.current())))))) {state = 4; return false; }
				var5_cast = com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements("Number of Measures", ((com.altova.mapforce.IMFNode)(var4_filter.current()))))));
				var6_generate_sequence = (com.altova.functions.Core.generateSequence(com.altova.CoreTypes.decimalToInteger(new java.math.BigDecimal("1")), var5_cast)).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var6_generate_sequence.moveNext()) {state = 7; return false; }
				var7_greater = com.altova.functions.Core.greater(com.altova.CoreTypes.integerToDecimal(var5_cast), new java.math.BigDecimal("0"));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Measure", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq16_join(((java.math.BigInteger)(var6_generate_sequence.current())), var7_greater, ((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_generate_sequence != null ) { var6_generate_sequence.close(); var6_generate_sequence = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var8_shared.moveNext()) {state = 10; return false; }
				var9_filter = (com.altova.functions.Core.filterElements("Rows", ((com.altova.mapforce.IMFNode)(var8_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var9_filter.moveNext()) {state = 12; return false; }
				if (!(com.altova.functions.Core.exists(com.altova.functions.Core.filterElements("Number of Measures", ((com.altova.mapforce.IMFNode)(var9_filter.current())))))) {state = 11; return false; }
				var10_cast = com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements("Number of Measures", ((com.altova.mapforce.IMFNode)(var9_filter.current()))))));
				var11_generate_sequence = (com.altova.functions.Core.generateSequence(com.altova.CoreTypes.decimalToInteger(new java.math.BigDecimal("1")), var10_cast)).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var11_generate_sequence.moveNext()) {state = 14; return false; }
				var12_greater = com.altova.functions.Core.greater(com.altova.CoreTypes.integerToDecimal(var10_cast), new java.math.BigDecimal("0"));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Measure", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq19_join(((java.math.BigInteger)(var11_generate_sequence.current())), var12_greater, ((com.altova.mapforce.IMFNode)(var9_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var11_generate_sequence != null ) { var11_generate_sequence.close(); var11_generate_sequence = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_generate_sequence != null ) { var6_generate_sequence.close(); var6_generate_sequence = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var11_generate_sequence != null ) { var11_generate_sequence.close(); var11_generate_sequence = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq16_join implements IEnumerable
	{
		java.math.BigInteger var1_current;
		boolean var2_shared;
		com.altova.mapforce.IMFNode var3_current;
	
		public seq16_join(java.math.BigInteger var1_current, boolean var2_shared, com.altova.mapforce.IMFNode var3_current)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_current = var3_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq16_join closure;
			com.altova.mapforce.IEnumerable var4_filter_elements_nodename;
			com.altova.mapforce.IEnumerable var5_vmf1_inputtoresult;
			com.altova.mapforce.IEnumerable var6_filter_elements_nodename;
			com.altova.mapforce.IEnumerable var7_vmf2_inputtoresult;
			com.altova.mapforce.IEnumerable var8_filter_elements_nodename;
			com.altova.mapforce.IEnumerable var9_vmf3_inputtoresult;
			public Enumerator(seq16_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 8;				
				if (!(closure.var2_shared)) {state = 8; return false; }
				var4_filter_elements_nodename = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements("Label", closure.var3_current));
				if (!(com.altova.functions.Core.exists(var4_filter_elements_nodename))) {state = 8; return false; }
				var5_vmf1_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf1_inputtoresult.eval(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var4_filter_elements_nodename))));
				if (!(com.altova.functions.Core.exists(var5_vmf1_inputtoresult))) {state = 8; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("Measure", com.altova.CoreTypes.decimalToString(com.altova.functions.Core.add(com.altova.CoreTypes.integerToDecimal(closure.var1_current), com.altova.CoreTypes.parseDecimal((java.lang.String)com.altova.functions.Core.first(var5_vmf1_inputtoresult)))))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 15;				
				if (!(closure.var2_shared)) {state = 15; return false; }
				var6_filter_elements_nodename = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements("Label", closure.var3_current));
				if (!(com.altova.functions.Core.exists(var6_filter_elements_nodename))) {state = 15; return false; }
				var7_vmf2_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf2_inputtoresult.eval(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var6_filter_elements_nodename))));
				if (!(com.altova.functions.Core.exists(var7_vmf2_inputtoresult))) {state = 15; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("SystemCategoryAffected", "http://nrel.gov/schemas/bedes-auc/2014"), var7_vmf2_inputtoresult);
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 16;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TechnologyCategories", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq17_cond_filter_elements_nodename(closure.var2_shared, closure.var3_current)));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 0;				
				if (!(closure.var2_shared)) {state = 0; return false; }
				var8_filter_elements_nodename = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements("Label", closure.var3_current));
				if (!(com.altova.functions.Core.exists(var8_filter_elements_nodename))) {state = 0; return false; }
				var9_vmf3_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf3_inputtoresult.eval(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var8_filter_elements_nodename))));
				if (!(com.altova.functions.Core.exists(var9_vmf3_inputtoresult))) {state = 0; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("LongDescription", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.concat((java.lang.String)com.altova.functions.Core.first(var9_vmf3_inputtoresult), com.altova.CoreTypes.integerToString(closure.var1_current))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq17_cond_filter_elements_nodename implements IEnumerable
	{
		boolean var1_shared;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq17_cond_filter_elements_nodename(boolean var1_shared, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_shared = var1_shared;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq17_cond_filter_elements_nodename closure;
			com.altova.mapforce.IEnumerable var3_filter_elements_nodename;
			public Enumerator(seq17_cond_filter_elements_nodename closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(closure.var1_shared)) {state = 0; return false; }
				var3_filter_elements_nodename = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements("Label", closure.var2_current));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TechnologyCategory", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq18_join(var3_filter_elements_nodename)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq18_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq18_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq18_join closure;
			com.altova.mapforce.IEnumerable var2_vmf1_inputtoresult;
			com.altova.mapforce.IEnumerable var3_vmf1_inputtoresult;
			com.altova.mapforce.IEnumerable var4_vmf1_inputtoresult;
			com.altova.mapforce.IEnumerable var5_vmf1_inputtoresult;
			com.altova.mapforce.IEnumerable var6_vmf1_inputtoresult;
			com.altova.mapforce.IEnumerable var7_vmf1_inputtoresult;
			com.altova.mapforce.IEnumerable var8_vmf1_inputtoresult;
			com.altova.mapforce.IEnumerable var9_vmf1_inputtoresult;
			com.altova.mapforce.IEnumerable var10_vmf1_inputtoresult;
			com.altova.mapforce.IEnumerable var11_vmf1_inputtoresult;
			com.altova.mapforce.IEnumerable var12_vmf1_inputtoresult;
			com.altova.mapforce.IEnumerable var13_vmf1_inputtoresult;
			com.altova.mapforce.IEnumerable var14_vmf1_inputtoresult;
			com.altova.mapforce.IEnumerable var15_vmf1_inputtoresult;
			com.altova.mapforce.IEnumerable var16_vmf1_inputtoresult;
			com.altova.mapforce.IEnumerable var17_vmf1_inputtoresult;
			com.altova.mapforce.IEnumerable var18_vmf1_inputtoresult;
			com.altova.mapforce.IEnumerable var19_vmf1_inputtoresult;
			com.altova.mapforce.IEnumerable var20_vmf1_inputtoresult;
			com.altova.mapforce.IEnumerable var21_vmf1_inputtoresult;
			public Enumerator(seq18_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 36:	if (moveNext_36()) return true; break;
					case 43:	if (moveNext_43()) return true; break;
					case 50:	if (moveNext_50()) return true; break;
					case 57:	if (moveNext_57()) return true; break;
					case 64:	if (moveNext_64()) return true; break;
					case 71:	if (moveNext_71()) return true; break;
					case 78:	if (moveNext_78()) return true; break;
					case 85:	if (moveNext_85()) return true; break;
					case 92:	if (moveNext_92()) return true; break;
					case 99:	if (moveNext_99()) return true; break;
					case 106:	if (moveNext_106()) return true; break;
					case 113:	if (moveNext_113()) return true; break;
					case 120:	if (moveNext_120()) return true; break;
					case 127:	if (moveNext_127()) return true; break;
					case 134:	if (moveNext_134()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 8;				
				if (!(com.altova.functions.Core.exists(closure.var1_shared))) {state = 8; return false; }
				var2_vmf1_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf1_inputtoresult.eval(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var1_shared))));
				if (!(com.altova.functions.Core.exists(var2_vmf1_inputtoresult))) {state = 8; return false; }
				if (!(com.altova.functions.Core.equal((java.lang.String)com.altova.functions.Core.first(var2_vmf1_inputtoresult), "1000"))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("BoilerPlantImprovements", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Other"))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 15;				
				if (!(com.altova.functions.Core.exists(closure.var1_shared))) {state = 15; return false; }
				var3_vmf1_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf1_inputtoresult.eval(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var1_shared))));
				if (!(com.altova.functions.Core.exists(var3_vmf1_inputtoresult))) {state = 15; return false; }
				if (!(com.altova.functions.Core.equal((java.lang.String)com.altova.functions.Core.first(var3_vmf1_inputtoresult), "2000"))) {state = 15; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ChillerPlantImprovements", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Other"))));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 22;				
				if (!(com.altova.functions.Core.exists(closure.var1_shared))) {state = 22; return false; }
				var4_vmf1_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf1_inputtoresult.eval(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var1_shared))));
				if (!(com.altova.functions.Core.exists(var4_vmf1_inputtoresult))) {state = 22; return false; }
				if (!(com.altova.functions.Core.equal((java.lang.String)com.altova.functions.Core.first(var4_vmf1_inputtoresult), "3000"))) {state = 22; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("BuildingAutomationSystems", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Other"))));
				pos++;
				return true;
			}
			private boolean moveNext_22() throws Exception {
				state = 29;				
				if (!(com.altova.functions.Core.exists(closure.var1_shared))) {state = 29; return false; }
				var5_vmf1_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf1_inputtoresult.eval(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var1_shared))));
				if (!(com.altova.functions.Core.exists(var5_vmf1_inputtoresult))) {state = 29; return false; }
				if (!(com.altova.functions.Core.equal((java.lang.String)com.altova.functions.Core.first(var5_vmf1_inputtoresult), "4000"))) {state = 29; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OtherHVAC", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Other"))));
				pos++;
				return true;
			}
			private boolean moveNext_29() throws Exception {
				state = 36;				
				if (!(com.altova.functions.Core.exists(closure.var1_shared))) {state = 36; return false; }
				var6_vmf1_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf1_inputtoresult.eval(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var1_shared))));
				if (!(com.altova.functions.Core.exists(var6_vmf1_inputtoresult))) {state = 36; return false; }
				if (!(com.altova.functions.Core.equal((java.lang.String)com.altova.functions.Core.first(var6_vmf1_inputtoresult), "5000"))) {state = 36; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("LightingImprovements", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Other"))));
				pos++;
				return true;
			}
			private boolean moveNext_36() throws Exception {
				state = 43;				
				if (!(com.altova.functions.Core.exists(closure.var1_shared))) {state = 43; return false; }
				var7_vmf1_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf1_inputtoresult.eval(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var1_shared))));
				if (!(com.altova.functions.Core.exists(var7_vmf1_inputtoresult))) {state = 43; return false; }
				if (!(com.altova.functions.Core.equal((java.lang.String)com.altova.functions.Core.first(var7_vmf1_inputtoresult), "6000"))) {state = 43; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("BuildingEnvelopeModifications", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Other"))));
				pos++;
				return true;
			}
			private boolean moveNext_43() throws Exception {
				state = 50;				
				if (!(com.altova.functions.Core.exists(closure.var1_shared))) {state = 50; return false; }
				var8_vmf1_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf1_inputtoresult.eval(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var1_shared))));
				if (!(com.altova.functions.Core.exists(var8_vmf1_inputtoresult))) {state = 50; return false; }
				if (!(com.altova.functions.Core.equal((java.lang.String)com.altova.functions.Core.first(var8_vmf1_inputtoresult), "7000"))) {state = 50; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ChilledWaterHotWaterAndSteamDistributionSystems", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Other"))));
				pos++;
				return true;
			}
			private boolean moveNext_50() throws Exception {
				state = 57;				
				if (!(com.altova.functions.Core.exists(closure.var1_shared))) {state = 57; return false; }
				var9_vmf1_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf1_inputtoresult.eval(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var1_shared))));
				if (!(com.altova.functions.Core.exists(var9_vmf1_inputtoresult))) {state = 57; return false; }
				if (!(com.altova.functions.Core.equal((java.lang.String)com.altova.functions.Core.first(var9_vmf1_inputtoresult), "8000"))) {state = 57; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ElectricMotorsAndDrives", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Other"))));
				pos++;
				return true;
			}
			private boolean moveNext_57() throws Exception {
				state = 64;				
				if (!(com.altova.functions.Core.exists(closure.var1_shared))) {state = 64; return false; }
				var10_vmf1_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf1_inputtoresult.eval(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var1_shared))));
				if (!(com.altova.functions.Core.exists(var10_vmf1_inputtoresult))) {state = 64; return false; }
				if (!(com.altova.functions.Core.equal((java.lang.String)com.altova.functions.Core.first(var10_vmf1_inputtoresult), "9000"))) {state = 64; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Refrigeration", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Other"))));
				pos++;
				return true;
			}
			private boolean moveNext_64() throws Exception {
				state = 71;				
				if (!(com.altova.functions.Core.exists(closure.var1_shared))) {state = 71; return false; }
				var11_vmf1_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf1_inputtoresult.eval(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var1_shared))));
				if (!(com.altova.functions.Core.exists(var11_vmf1_inputtoresult))) {state = 71; return false; }
				if (!(com.altova.functions.Core.equal((java.lang.String)com.altova.functions.Core.first(var11_vmf1_inputtoresult), "10000"))) {state = 71; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("DistributedGeneration", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Other"))));
				pos++;
				return true;
			}
			private boolean moveNext_71() throws Exception {
				state = 78;				
				if (!(com.altova.functions.Core.exists(closure.var1_shared))) {state = 78; return false; }
				var12_vmf1_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf1_inputtoresult.eval(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var1_shared))));
				if (!(com.altova.functions.Core.exists(var12_vmf1_inputtoresult))) {state = 78; return false; }
				if (!(com.altova.functions.Core.equal((java.lang.String)com.altova.functions.Core.first(var12_vmf1_inputtoresult), "11000"))) {state = 78; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RenewableEnergySystems", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Other"))));
				pos++;
				return true;
			}
			private boolean moveNext_78() throws Exception {
				state = 85;				
				if (!(com.altova.functions.Core.exists(closure.var1_shared))) {state = 85; return false; }
				var13_vmf1_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf1_inputtoresult.eval(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var1_shared))));
				if (!(com.altova.functions.Core.exists(var13_vmf1_inputtoresult))) {state = 85; return false; }
				if (!(com.altova.functions.Core.equal((java.lang.String)com.altova.functions.Core.first(var13_vmf1_inputtoresult), "12000"))) {state = 85; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EnergyDistributionSystems", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Other"))));
				pos++;
				return true;
			}
			private boolean moveNext_85() throws Exception {
				state = 92;				
				if (!(com.altova.functions.Core.exists(closure.var1_shared))) {state = 92; return false; }
				var14_vmf1_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf1_inputtoresult.eval(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var1_shared))));
				if (!(com.altova.functions.Core.exists(var14_vmf1_inputtoresult))) {state = 92; return false; }
				if (!(com.altova.functions.Core.equal((java.lang.String)com.altova.functions.Core.first(var14_vmf1_inputtoresult), "13000"))) {state = 92; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("WaterAndSewerConservationSystems", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Other"))));
				pos++;
				return true;
			}
			private boolean moveNext_92() throws Exception {
				state = 99;				
				if (!(com.altova.functions.Core.exists(closure.var1_shared))) {state = 99; return false; }
				var15_vmf1_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf1_inputtoresult.eval(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var1_shared))));
				if (!(com.altova.functions.Core.exists(var15_vmf1_inputtoresult))) {state = 99; return false; }
				if (!(com.altova.functions.Core.equal((java.lang.String)com.altova.functions.Core.first(var15_vmf1_inputtoresult), "14000"))) {state = 99; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ElectricalPeakShavingLoadShifting", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Other"))));
				pos++;
				return true;
			}
			private boolean moveNext_99() throws Exception {
				state = 106;				
				if (!(com.altova.functions.Core.exists(closure.var1_shared))) {state = 106; return false; }
				var16_vmf1_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf1_inputtoresult.eval(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var1_shared))));
				if (!(com.altova.functions.Core.exists(var16_vmf1_inputtoresult))) {state = 106; return false; }
				if (!(com.altova.functions.Core.equal((java.lang.String)com.altova.functions.Core.first(var16_vmf1_inputtoresult), "15000"))) {state = 106; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EnergyCostReductionThroughRateAdjustments", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Other"))));
				pos++;
				return true;
			}
			private boolean moveNext_106() throws Exception {
				state = 113;				
				if (!(com.altova.functions.Core.exists(closure.var1_shared))) {state = 113; return false; }
				var17_vmf1_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf1_inputtoresult.eval(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var1_shared))));
				if (!(com.altova.functions.Core.exists(var17_vmf1_inputtoresult))) {state = 113; return false; }
				if (!(com.altova.functions.Core.equal((java.lang.String)com.altova.functions.Core.first(var17_vmf1_inputtoresult), "16000"))) {state = 113; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EnergyRelatedProcessImprovements", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Other"))));
				pos++;
				return true;
			}
			private boolean moveNext_113() throws Exception {
				state = 120;				
				if (!(com.altova.functions.Core.exists(closure.var1_shared))) {state = 120; return false; }
				var18_vmf1_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf1_inputtoresult.eval(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var1_shared))));
				if (!(com.altova.functions.Core.exists(var18_vmf1_inputtoresult))) {state = 120; return false; }
				if (!(com.altova.functions.Core.equal((java.lang.String)com.altova.functions.Core.first(var18_vmf1_inputtoresult), "17000"))) {state = 120; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AdvancedMeteringSystems", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Other"))));
				pos++;
				return true;
			}
			private boolean moveNext_120() throws Exception {
				state = 127;				
				if (!(com.altova.functions.Core.exists(closure.var1_shared))) {state = 127; return false; }
				var19_vmf1_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf1_inputtoresult.eval(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var1_shared))));
				if (!(com.altova.functions.Core.exists(var19_vmf1_inputtoresult))) {state = 127; return false; }
				if (!(com.altova.functions.Core.equal((java.lang.String)com.altova.functions.Core.first(var19_vmf1_inputtoresult), "18000"))) {state = 127; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PlugLoadReductions", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Other"))));
				pos++;
				return true;
			}
			private boolean moveNext_127() throws Exception {
				state = 134;				
				if (!(com.altova.functions.Core.exists(closure.var1_shared))) {state = 134; return false; }
				var20_vmf1_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf1_inputtoresult.eval(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var1_shared))));
				if (!(com.altova.functions.Core.exists(var20_vmf1_inputtoresult))) {state = 134; return false; }
				if (!(com.altova.functions.Core.equal((java.lang.String)com.altova.functions.Core.first(var20_vmf1_inputtoresult), "20000"))) {state = 134; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FutureOtherECMs", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Other"))));
				pos++;
				return true;
			}
			private boolean moveNext_134() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Core.exists(closure.var1_shared))) {state = 0; return false; }
				var21_vmf1_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf1_inputtoresult.eval(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var1_shared))));
				if (!(com.altova.functions.Core.exists(var21_vmf1_inputtoresult))) {state = 0; return false; }
				if (!(com.altova.functions.Core.equal((java.lang.String)com.altova.functions.Core.first(var21_vmf1_inputtoresult), "19000"))) {state = 0; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Uncategorized", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Other"))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq19_join implements IEnumerable
	{
		java.math.BigInteger var1_current;
		boolean var2_shared;
		com.altova.mapforce.IMFNode var3_current;
	
		public seq19_join(java.math.BigInteger var1_current, boolean var2_shared, com.altova.mapforce.IMFNode var3_current)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_current = var3_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq19_join closure;
			com.altova.mapforce.IEnumerable var4_filter_elements_nodename;
			com.altova.mapforce.IEnumerable var5_vmf4_inputtoresult;
			com.altova.mapforce.IEnumerable var6_filter_elements_nodename;
			com.altova.mapforce.IEnumerable var7_vmf5_inputtoresult;
			com.altova.mapforce.IEnumerable var8_filter_elements_nodename;
			java.lang.String var9_cast;
			com.altova.mapforce.IEnumerable var10_vmf7_inputtoresult;
			public Enumerator(seq19_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 8;				
				if (!(closure.var2_shared)) {state = 8; return false; }
				var4_filter_elements_nodename = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements("Label", closure.var3_current));
				if (!(com.altova.functions.Core.exists(var4_filter_elements_nodename))) {state = 8; return false; }
				var5_vmf4_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf4_inputtoresult.eval(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var4_filter_elements_nodename))));
				if (!(com.altova.functions.Core.exists(var5_vmf4_inputtoresult))) {state = 8; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("Measure", com.altova.CoreTypes.decimalToString(com.altova.functions.Core.add(com.altova.CoreTypes.parseDecimal((java.lang.String)com.altova.functions.Core.first(var5_vmf4_inputtoresult)), com.altova.CoreTypes.integerToDecimal(closure.var1_current))))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 15;				
				if (!(closure.var2_shared)) {state = 15; return false; }
				var6_filter_elements_nodename = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements("Label", closure.var3_current));
				if (!(com.altova.functions.Core.exists(var6_filter_elements_nodename))) {state = 15; return false; }
				var7_vmf5_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf5_inputtoresult.eval(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var6_filter_elements_nodename))));
				if (!(com.altova.functions.Core.exists(var7_vmf5_inputtoresult))) {state = 15; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("SystemCategoryAffected", "http://nrel.gov/schemas/bedes-auc/2014"), var7_vmf5_inputtoresult);
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 16;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TechnologyCategories", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq20_cond_filter_elements_nodename(closure.var2_shared, closure.var3_current)));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 0;				
				if (!(closure.var2_shared)) {state = 0; return false; }
				var8_filter_elements_nodename = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements("Label", closure.var3_current));
				if (!(com.altova.functions.Core.exists(var8_filter_elements_nodename))) {state = 0; return false; }
				var9_cast = com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var8_filter_elements_nodename));
				var10_vmf7_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf7_inputtoresult.eval(var9_cast));
				if (!(com.altova.functions.Core.exists(var10_vmf7_inputtoresult))) {state = 0; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("LongDescription", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat((java.lang.String)com.altova.functions.Core.first(var10_vmf7_inputtoresult), ": "), var9_cast), " #"), com.altova.CoreTypes.integerToString(closure.var1_current))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq20_cond_filter_elements_nodename implements IEnumerable
	{
		boolean var1_shared;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq20_cond_filter_elements_nodename(boolean var1_shared, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_shared = var1_shared;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq20_cond_filter_elements_nodename closure;
			com.altova.mapforce.IEnumerable var3_filter_elements_nodename;
			java.lang.String var4_cast;
			com.altova.mapforce.IEnumerable var5_vmf6_inputtoresult;
			com.altova.mapforce.IEnumerable var6_vmf4_inputtoresult;
			public Enumerator(seq20_cond_filter_elements_nodename closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(closure.var1_shared)) {state = 0; return false; }
				var3_filter_elements_nodename = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements("Label", closure.var2_current));
				if (!(com.altova.functions.Core.exists(var3_filter_elements_nodename))) {state = 0; return false; }
				var4_cast = com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var3_filter_elements_nodename));
				var5_vmf6_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf6_inputtoresult.eval(var4_cast));
				if (!(com.altova.functions.Core.exists(var5_vmf6_inputtoresult))) {state = 0; return false; }
				var6_vmf4_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf4_inputtoresult.eval(var4_cast));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TechnologyCategory", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq21_join(var5_vmf6_inputtoresult, var6_vmf4_inputtoresult)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq21_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq21_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq21_join closure;
			java.lang.String var3_first;
			java.lang.String var4_first;
			java.lang.String var5_first;
			java.lang.String var6_first;
			java.lang.String var7_first;
			java.lang.String var8_first;
			java.lang.String var9_first;
			java.lang.String var10_first;
			java.lang.String var11_first;
			java.lang.String var12_first;
			java.lang.String var13_first;
			java.lang.String var14_first;
			java.lang.String var15_first;
			java.lang.String var16_first;
			java.lang.String var17_first;
			java.lang.String var18_first;
			java.lang.String var19_first;
			java.lang.String var20_first;
			public Enumerator(seq21_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 36:	if (moveNext_36()) return true; break;
					case 41:	if (moveNext_41()) return true; break;
					case 46:	if (moveNext_46()) return true; break;
					case 51:	if (moveNext_51()) return true; break;
					case 56:	if (moveNext_56()) return true; break;
					case 61:	if (moveNext_61()) return true; break;
					case 66:	if (moveNext_66()) return true; break;
					case 71:	if (moveNext_71()) return true; break;
					case 76:	if (moveNext_76()) return true; break;
					case 81:	if (moveNext_81()) return true; break;
					case 86:	if (moveNext_86()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 6;				
				if (!(com.altova.functions.Core.exists(closure.var2_shared))) {state = 6; return false; }
				var3_first = (java.lang.String)com.altova.functions.Core.first(closure.var2_shared);
				if (!(com.altova.functions.Core.logicalAnd(com.altova.functions.Core.equalOrGreater(var3_first, "21000"), com.altova.functions.Core.equalOrLess(var3_first, "28000")))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("BoilerPlantImprovements", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 11;				
				if (!(com.altova.functions.Core.exists(closure.var2_shared))) {state = 11; return false; }
				var4_first = (java.lang.String)com.altova.functions.Core.first(closure.var2_shared);
				if (!(com.altova.functions.Core.logicalAnd(com.altova.functions.Core.equalOrGreater(var4_first, "29000"), com.altova.functions.Core.equalOrLess(var4_first, "31000")))) {state = 11; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ChillerPlantImprovements", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 16;				
				if (!(com.altova.functions.Core.exists(closure.var2_shared))) {state = 16; return false; }
				var5_first = (java.lang.String)com.altova.functions.Core.first(closure.var2_shared);
				if (!(com.altova.functions.Core.logicalAnd(com.altova.functions.Core.equalOrGreater(var5_first, "32000"), com.altova.functions.Core.equalOrLess(var5_first, "42000")))) {state = 16; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("BuildingAutomationSystems", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 21;				
				if (!(com.altova.functions.Core.exists(closure.var2_shared))) {state = 21; return false; }
				var6_first = (java.lang.String)com.altova.functions.Core.first(closure.var2_shared);
				if (!(com.altova.functions.Core.logicalAnd(com.altova.functions.Core.equalOrGreater(var6_first, "43000"), com.altova.functions.Core.equalOrLess(var6_first, "64000")))) {state = 21; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OtherHVAC", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_21() throws Exception {
				state = 26;				
				if (!(com.altova.functions.Core.exists(closure.var2_shared))) {state = 26; return false; }
				var7_first = (java.lang.String)com.altova.functions.Core.first(closure.var2_shared);
				if (!(com.altova.functions.Core.logicalAnd(com.altova.functions.Core.equalOrGreater(var7_first, "65000"), com.altova.functions.Core.equalOrLess(var7_first, "75000")))) {state = 26; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("LightingImprovements", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_26() throws Exception {
				state = 31;				
				if (!(com.altova.functions.Core.exists(closure.var2_shared))) {state = 31; return false; }
				var8_first = (java.lang.String)com.altova.functions.Core.first(closure.var2_shared);
				if (!(com.altova.functions.Core.logicalAnd(com.altova.functions.Core.equalOrGreater(var8_first, "76000"), com.altova.functions.Core.equalOrLess(var8_first, "91000")))) {state = 31; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("BuildingEnvelopeModifications", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_31() throws Exception {
				state = 36;				
				if (!(com.altova.functions.Core.exists(closure.var2_shared))) {state = 36; return false; }
				var9_first = (java.lang.String)com.altova.functions.Core.first(closure.var2_shared);
				if (!(com.altova.functions.Core.logicalAnd(com.altova.functions.Core.equalOrGreater(var9_first, "92000"), com.altova.functions.Core.equalOrLess(var9_first, "102000")))) {state = 36; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ChilledWaterHotWaterAndSteamDistributionSystems", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_36() throws Exception {
				state = 41;				
				if (!(com.altova.functions.Core.exists(closure.var2_shared))) {state = 41; return false; }
				var10_first = (java.lang.String)com.altova.functions.Core.first(closure.var2_shared);
				if (!(com.altova.functions.Core.logicalAnd(com.altova.functions.Core.equalOrGreater(var10_first, "103000"), com.altova.functions.Core.equalOrLess(var10_first, "104000")))) {state = 41; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ElectricMotorsAndDrives", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_41() throws Exception {
				state = 46;				
				if (!(com.altova.functions.Core.exists(closure.var2_shared))) {state = 46; return false; }
				var11_first = (java.lang.String)com.altova.functions.Core.first(closure.var2_shared);
				if (!(com.altova.functions.Core.logicalAnd(com.altova.functions.Core.equalOrGreater(var11_first, "105000"), com.altova.functions.Core.equalOrLess(var11_first, "105000")))) {state = 46; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Refrigeration", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_46() throws Exception {
				state = 51;				
				if (!(com.altova.functions.Core.exists(closure.var2_shared))) {state = 51; return false; }
				var12_first = (java.lang.String)com.altova.functions.Core.first(closure.var2_shared);
				if (!(com.altova.functions.Core.logicalAnd(com.altova.functions.Core.equalOrGreater(var12_first, "106000"), com.altova.functions.Core.equalOrLess(var12_first, "108000")))) {state = 51; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("DistributedGeneration", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_51() throws Exception {
				state = 56;				
				if (!(com.altova.functions.Core.exists(closure.var2_shared))) {state = 56; return false; }
				var13_first = (java.lang.String)com.altova.functions.Core.first(closure.var2_shared);
				if (!(com.altova.functions.Core.logicalAnd(com.altova.functions.Core.equalOrGreater(var13_first, "109000"), com.altova.functions.Core.equalOrLess(var13_first, "116000")))) {state = 56; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RenewableEnergySystems", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_56() throws Exception {
				state = 61;				
				if (!(com.altova.functions.Core.exists(closure.var2_shared))) {state = 61; return false; }
				var14_first = (java.lang.String)com.altova.functions.Core.first(closure.var2_shared);
				if (!(com.altova.functions.Core.logicalAnd(com.altova.functions.Core.equalOrGreater(var14_first, "117000"), com.altova.functions.Core.equalOrLess(var14_first, "120000")))) {state = 61; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EnergyDistributionSystems", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_61() throws Exception {
				state = 66;				
				if (!(com.altova.functions.Core.exists(closure.var2_shared))) {state = 66; return false; }
				var15_first = (java.lang.String)com.altova.functions.Core.first(closure.var2_shared);
				if (!(com.altova.functions.Core.logicalAnd(com.altova.functions.Core.equalOrGreater(var15_first, "121000"), com.altova.functions.Core.equalOrLess(var15_first, "124000")))) {state = 66; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("WaterAndSewerConservationSystems", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_66() throws Exception {
				state = 71;				
				if (!(com.altova.functions.Core.exists(closure.var2_shared))) {state = 71; return false; }
				var16_first = (java.lang.String)com.altova.functions.Core.first(closure.var2_shared);
				if (!(com.altova.functions.Core.logicalAnd(com.altova.functions.Core.equalOrGreater(var16_first, "125000"), com.altova.functions.Core.equalOrLess(var16_first, "126000")))) {state = 71; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ElectricalPeakShavingLoadShifting", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_71() throws Exception {
				state = 76;				
				if (!(com.altova.functions.Core.exists(closure.var2_shared))) {state = 76; return false; }
				var17_first = (java.lang.String)com.altova.functions.Core.first(closure.var2_shared);
				if (!(com.altova.functions.Core.logicalAnd(com.altova.functions.Core.equalOrGreater(var17_first, "127000"), com.altova.functions.Core.equalOrLess(var17_first, "129000")))) {state = 76; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EnergyCostReductionThroughRateAdjustments", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_76() throws Exception {
				state = 81;				
				if (!(com.altova.functions.Core.exists(closure.var2_shared))) {state = 81; return false; }
				var18_first = (java.lang.String)com.altova.functions.Core.first(closure.var2_shared);
				if (!(com.altova.functions.Core.logicalAnd(com.altova.functions.Core.equalOrGreater(var18_first, "130000"), com.altova.functions.Core.equalOrLess(var18_first, "133000")))) {state = 81; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EnergyRelatedProcessImprovements", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_81() throws Exception {
				state = 86;				
				if (!(com.altova.functions.Core.exists(closure.var2_shared))) {state = 86; return false; }
				var19_first = (java.lang.String)com.altova.functions.Core.first(closure.var2_shared);
				if (!(com.altova.functions.Core.logicalAnd(com.altova.functions.Core.equalOrGreater(var19_first, "134000"), com.altova.functions.Core.equalOrLess(var19_first, "139000")))) {state = 86; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PlugLoadReductions", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_86() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Core.exists(closure.var2_shared))) {state = 0; return false; }
				var20_first = (java.lang.String)com.altova.functions.Core.first(closure.var2_shared);
				if (!(com.altova.functions.Core.logicalAnd(com.altova.functions.Core.equalOrGreater(var20_first, "140000"), com.altova.functions.Core.equalOrLess(var20_first, "144000")))) {state = 0; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FutureOtherECMs", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureName", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var1_shared)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq22_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq22_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq22_join closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			public Enumerator(seq22_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Scenarios", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq23_map(closure.var1_shared, closure.var2_shared, closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var4_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq2_CoreAny((new seq36_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 3; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AuditDate", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.dateToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq2_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RetrocommissioningAudit", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.booleanToString(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current()))), "Y"))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 0;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq38_seq_(closure.var1_shared)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq23_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq23_map(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq23_map closure;
			IEnumerator var4_filter;
			public Enumerator(seq23_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var4_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq2_CoreAny((new seq24_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Scenario", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq25_seq_(((com.altova.mapforce.IMFNode)(var4_filter.current())), closure.var1_shared, closure.var2_shared, closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq24_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq24_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq24_map closure;
			IEnumerator var2_n;
			public Enumerator(seq24_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(4L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq25_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
	
		public seq25_seq_(com.altova.mapforce.IMFNode var1_cur_Cell, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared, com.altova.mapforce.IEnumerable var4_shared)
		{
			this.var1_cur_Cell = var1_cur_Cell;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq25_seq_ closure;
			public Enumerator(seq25_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ScenarioName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_cur_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ScenarioType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PackageOfMeasures", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq26_join(closure.var2_shared, closure.var3_shared, closure.var4_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq26_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq26_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq26_join closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			IEnumerator var9_filter;
			public Enumerator(seq26_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureIDs", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq27_join(closure.var2_shared, closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var4_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq2_CoreAny((new seq30_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 3; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualSavingsSiteEnergy", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq2_CoreAny((new seq31_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualSavingsCost", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.decimalToInteger(com.altova.functions.Core.round(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var6_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var6_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq2_CoreAny((new seq32_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 9; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualWaterSavings", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))), new java.math.BigDecimal("1000")))));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				var7_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var7_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq2_CoreAny((new seq33_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualWaterCostSavings", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var7_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				var8_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var8_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq2_CoreAny((new seq34_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PackageFirstCost", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				var9_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 18;				
				if (!var9_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq2_CoreAny((new seq35_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 18; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OMCostAnnualSavings", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var9_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_19() throws Exception {
				state = 0;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq27_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq27_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq27_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			IEnumerator var7_shared;
			java.math.BigInteger var5_cast;
			IEnumerator var8_filter;
			IEnumerator var6_generate_sequence;
			java.math.BigInteger var9_cast;
			IEnumerator var10_generate_sequence;
			public Enumerator(seq27_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements("Rows", ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 9;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var7_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!(com.altova.functions.Core.exists(com.altova.functions.Core.filterElements("Number of Measures", ((com.altova.mapforce.IMFNode)(var4_filter.current())))))) {state = 4; return false; }
				var5_cast = com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements("Number of Measures", ((com.altova.mapforce.IMFNode)(var4_filter.current()))))));
				var6_generate_sequence = (com.altova.functions.Core.generateSequence(com.altova.CoreTypes.decimalToInteger(new java.math.BigDecimal("1")), var5_cast)).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var6_generate_sequence.moveNext()) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureID", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq28_cond_filter_elements_nodename(var5_cast, ((java.math.BigInteger)(var6_generate_sequence.current())), ((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_generate_sequence != null ) { var6_generate_sequence.close(); var6_generate_sequence = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var7_shared.moveNext()) {state = 10; return false; }
				var8_filter = (com.altova.functions.Core.filterElements("Rows", ((com.altova.mapforce.IMFNode)(var7_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var7_shared != null ) { var7_shared.close(); var7_shared = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var8_filter.moveNext()) {state = 12; return false; }
				if (!(com.altova.functions.Core.exists(com.altova.functions.Core.filterElements("Number of Measures", ((com.altova.mapforce.IMFNode)(var8_filter.current())))))) {state = 11; return false; }
				var9_cast = com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements("Number of Measures", ((com.altova.mapforce.IMFNode)(var8_filter.current()))))));
				var10_generate_sequence = (com.altova.functions.Core.generateSequence(com.altova.CoreTypes.decimalToInteger(new java.math.BigDecimal("1")), var9_cast)).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var10_generate_sequence.moveNext()) {state = 14; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureID", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq29_cond_filter_elements_nodename(var9_cast, ((java.math.BigInteger)(var10_generate_sequence.current())), ((com.altova.mapforce.IMFNode)(var8_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var10_generate_sequence != null ) { var10_generate_sequence.close(); var10_generate_sequence = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_generate_sequence != null ) { var6_generate_sequence.close(); var6_generate_sequence = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var10_generate_sequence != null ) { var10_generate_sequence.close(); var10_generate_sequence = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_shared != null ) { var7_shared.close(); var7_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq28_cond_filter_elements_nodename implements IEnumerable
	{
		java.math.BigInteger var1_shared;
		java.math.BigInteger var2_current;
		com.altova.mapforce.IMFNode var3_current;
	
		public seq28_cond_filter_elements_nodename(java.math.BigInteger var1_shared, java.math.BigInteger var2_current, com.altova.mapforce.IMFNode var3_current)
		{
			this.var1_shared = var1_shared;
			this.var2_current = var2_current;
			this.var3_current = var3_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq28_cond_filter_elements_nodename closure;
			com.altova.mapforce.IEnumerable var4_filter_elements_nodename;
			com.altova.mapforce.IEnumerable var5_vmf1_inputtoresult;
			public Enumerator(seq28_cond_filter_elements_nodename closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.integerToDecimal(closure.var1_shared), new java.math.BigDecimal("0")))) {state = 0; return false; }
				var4_filter_elements_nodename = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements("Label", closure.var3_current));
				if (!(com.altova.functions.Core.exists(var4_filter_elements_nodename))) {state = 0; return false; }
				var5_vmf1_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf1_inputtoresult.eval(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var4_filter_elements_nodename))));
				if (!(com.altova.functions.Core.exists(var5_vmf1_inputtoresult))) {state = 0; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("Measure", com.altova.CoreTypes.decimalToString(com.altova.functions.Core.add(com.altova.CoreTypes.integerToDecimal(closure.var2_current), com.altova.CoreTypes.parseDecimal((java.lang.String)com.altova.functions.Core.first(var5_vmf1_inputtoresult)))))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq29_cond_filter_elements_nodename implements IEnumerable
	{
		java.math.BigInteger var1_shared;
		java.math.BigInteger var2_current;
		com.altova.mapforce.IMFNode var3_current;
	
		public seq29_cond_filter_elements_nodename(java.math.BigInteger var1_shared, java.math.BigInteger var2_current, com.altova.mapforce.IMFNode var3_current)
		{
			this.var1_shared = var1_shared;
			this.var2_current = var2_current;
			this.var3_current = var3_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq29_cond_filter_elements_nodename closure;
			com.altova.mapforce.IEnumerable var4_filter_elements_nodename;
			com.altova.mapforce.IEnumerable var5_vmf4_inputtoresult;
			public Enumerator(seq29_cond_filter_elements_nodename closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.integerToDecimal(closure.var1_shared), new java.math.BigDecimal("0")))) {state = 0; return false; }
				var4_filter_elements_nodename = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements("Label", closure.var3_current));
				if (!(com.altova.functions.Core.exists(var4_filter_elements_nodename))) {state = 0; return false; }
				var5_vmf4_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf4_inputtoresult.eval(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(var4_filter_elements_nodename))));
				if (!(com.altova.functions.Core.exists(var5_vmf4_inputtoresult))) {state = 0; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("Measure", com.altova.CoreTypes.decimalToString(com.altova.functions.Core.add(com.altova.CoreTypes.parseDecimal((java.lang.String)com.altova.functions.Core.first(var5_vmf4_inputtoresult)), com.altova.CoreTypes.integerToDecimal(closure.var2_current))))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq30_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq30_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq30_map closure;
			IEnumerator var2_n;
			public Enumerator(seq30_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(9L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq31_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq31_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq31_map closure;
			IEnumerator var2_n;
			public Enumerator(seq31_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(10L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq32_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq32_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq32_map closure;
			IEnumerator var2_n;
			public Enumerator(seq32_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(11L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq33_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq33_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq33_map closure;
			IEnumerator var2_n;
			public Enumerator(seq33_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(12L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq34_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq34_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq34_map closure;
			IEnumerator var2_n;
			public Enumerator(seq34_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(8L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq35_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq35_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq35_map closure;
			IEnumerator var2_n;
			public Enumerator(seq35_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(13L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq36_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq36_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq36_map closure;
			IEnumerator var2_n;
			public Enumerator(seq36_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(5L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq37_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq37_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq37_map closure;
			IEnumerator var2_n;
			public Enumerator(seq37_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(6L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq38_seq_ implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq38_seq_(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq38_seq_ closure;
			public Enumerator(seq38_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq39_join(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq41_join(closure.var1_shared)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq39_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq39_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq39_join closure;
			IEnumerator var2_filter;
			public Enumerator(seq39_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Comments/Explanations"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var2_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq2_CoreAny((new seq40_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 3; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq40_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq40_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq40_map closure;
			IEnumerator var2_n;
			public Enumerator(seq40_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(39L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq41_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq41_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq41_join closure;
			IEnumerator var2_filter;
			public Enumerator(seq41_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Comment For Public Disclosure"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var2_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq2_CoreAny((new seq42_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 3; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq42_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq42_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq42_map closure;
			IEnumerator var2_n;
			public Enumerator(seq42_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(40L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq43_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
	
		public seq43_join(com.altova.mapforce.IMFNode var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared, com.altova.mapforce.IEnumerable var4_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq43_join closure;
			IEnumerator var5_shared;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			public Enumerator(seq43_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq44_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var5_shared = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var5_shared.moveNext()) {state = 4; return false; }
				var6_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 8;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				var7_filter = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var6_filter.moveNext()) {state = 6; return false; }
				if (!(com.altova.functions.Core.equal(com.altova.functions.Core.add(com.altova.functions.Core.sum((new seq46_join(((com.altova.mapforce.IMFNode)(var5_shared.current()))))), com.altova.functions.Core.sum((new seq47_join(((com.altova.mapforce.IMFNode)(var6_filter.current())))))), new java.math.BigDecimal("0")))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq48_seq_(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var7_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq2_CoreAny((new seq49_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq50_if_equal_or_greater(closure.var3_shared, ((com.altova.mapforce.IMFNode)(var7_filter.current()))))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq54_seq_(closure.var1_shared, ((com.altova.mapforce.IMFNode)(var7_filter.current())), closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 0;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq44_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq44_join(com.altova.mapforce.IMFNode var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq44_join closure;
			public Enumerator(seq44_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_shared;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				if (!((Boolean)com.altova.functions.Core.first((new seq2_CoreAny((new seq45_map(closure.var2_shared))))))) {state = 3; return false; }
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Mandatory field \"Agency Designated Covered Facility ID\" is missing."));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq45_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq45_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq45_map closure;
			IEnumerator var2_shared;
			public Enumerator(seq45_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq2_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var2_shared.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq46_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq46_join(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq46_join closure;
			IEnumerator var2_filter_elements_nodename;
			IEnumerator var3_filter_elements_nodename;
			public Enumerator(seq46_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_nodename = (com.altova.functions.Core.filterElements("Rows", closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter_elements_nodename.moveNext()) {state = 3; return false; }
				var3_filter_elements_nodename = (com.altova.functions.Core.filterElements("Number of Measures", ((com.altova.mapforce.IMFNode)(var2_filter_elements_nodename.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter_elements_nodename != null ) { var2_filter_elements_nodename.close(); var2_filter_elements_nodename = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_filter_elements_nodename.moveNext()) {state = 5; return false; }
				current = com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter_elements_nodename.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter_elements_nodename != null ) { var3_filter_elements_nodename.close(); var3_filter_elements_nodename = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter_elements_nodename != null ) { var3_filter_elements_nodename.close(); var3_filter_elements_nodename = null; }
				if( var2_filter_elements_nodename != null ) { var2_filter_elements_nodename.close(); var2_filter_elements_nodename = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq47_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq47_join(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq47_join closure;
			IEnumerator var2_filter_elements_nodename;
			IEnumerator var3_filter_elements_nodename;
			public Enumerator(seq47_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_nodename = (com.altova.functions.Core.filterElements("Rows", closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter_elements_nodename.moveNext()) {state = 3; return false; }
				var3_filter_elements_nodename = (com.altova.functions.Core.filterElements("Number of Measures", ((com.altova.mapforce.IMFNode)(var2_filter_elements_nodename.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter_elements_nodename != null ) { var2_filter_elements_nodename.close(); var2_filter_elements_nodename = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_filter_elements_nodename.moveNext()) {state = 5; return false; }
				current = com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter_elements_nodename.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter_elements_nodename != null ) { var3_filter_elements_nodename.close(); var3_filter_elements_nodename = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter_elements_nodename != null ) { var3_filter_elements_nodename.close(); var3_filter_elements_nodename = null; }
				if( var2_filter_elements_nodename != null ) { var2_filter_elements_nodename.close(); var2_filter_elements_nodename = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq48_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_shared;
	
		public seq48_seq_(com.altova.mapforce.IMFNode var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq48_seq_ closure;
			public Enumerator(seq48_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_shared;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("No measures are defined."));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq49_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq49_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq49_map closure;
			IEnumerator var2_filter_elements_nodename;
			public Enumerator(seq49_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_nodename = (com.altova.functions.Core.filterElements("Rows", closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter_elements_nodename.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.exists(com.altova.functions.Core.filterElements("Number of Measures", ((com.altova.mapforce.IMFNode)(var2_filter_elements_nodename.current()))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter_elements_nodename != null ) { var2_filter_elements_nodename.close(); var2_filter_elements_nodename = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter_elements_nodename != null ) { var2_filter_elements_nodename.close(); var2_filter_elements_nodename = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq50_if_equal_or_greater implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq50_if_equal_or_greater(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_shared = var1_shared;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq50_if_equal_or_greater closure;
			public Enumerator(seq50_if_equal_or_greater closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Core.equalOrGreater((java.math.BigDecimal)com.altova.functions.Core.first(com.altova.functions.Core.max((new seq51_join(closure.var2_current)))), new java.math.BigDecimal("1000")))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq2_CoreAny((new seq52_map(closure.var1_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq51_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq51_join(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq51_join closure;
			IEnumerator var2_filter_elements_nodename;
			IEnumerator var3_filter_elements_nodename;
			public Enumerator(seq51_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_nodename = (com.altova.functions.Core.filterElements("Rows", closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter_elements_nodename.moveNext()) {state = 3; return false; }
				var3_filter_elements_nodename = (com.altova.functions.Core.filterElements("Number of Measures", ((com.altova.mapforce.IMFNode)(var2_filter_elements_nodename.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter_elements_nodename != null ) { var2_filter_elements_nodename.close(); var2_filter_elements_nodename = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_filter_elements_nodename.moveNext()) {state = 5; return false; }
				current = com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter_elements_nodename.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter_elements_nodename != null ) { var3_filter_elements_nodename.close(); var3_filter_elements_nodename = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter_elements_nodename != null ) { var3_filter_elements_nodename.close(); var3_filter_elements_nodename = null; }
				if( var2_filter_elements_nodename != null ) { var2_filter_elements_nodename.close(); var2_filter_elements_nodename = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq52_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq52_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq52_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq52_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq2_CoreAny((new seq49_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.equalOrGreater((java.math.BigDecimal)com.altova.functions.Core.first(com.altova.functions.Core.max((new seq53_join(((com.altova.mapforce.IMFNode)(var2_filter.current())))))), new java.math.BigDecimal("1000"));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq53_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq53_join(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq53_join closure;
			IEnumerator var2_filter_elements_nodename;
			IEnumerator var3_filter_elements_nodename;
			public Enumerator(seq53_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_nodename = (com.altova.functions.Core.filterElements("Rows", closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter_elements_nodename.moveNext()) {state = 3; return false; }
				var3_filter_elements_nodename = (com.altova.functions.Core.filterElements("Number of Measures", ((com.altova.mapforce.IMFNode)(var2_filter_elements_nodename.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter_elements_nodename != null ) { var2_filter_elements_nodename.close(); var2_filter_elements_nodename = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_filter_elements_nodename.moveNext()) {state = 5; return false; }
				current = com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter_elements_nodename.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter_elements_nodename != null ) { var3_filter_elements_nodename.close(); var3_filter_elements_nodename = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter_elements_nodename != null ) { var3_filter_elements_nodename.close(); var3_filter_elements_nodename = null; }
				if( var2_filter_elements_nodename != null ) { var2_filter_elements_nodename.close(); var2_filter_elements_nodename = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq54_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_shared;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq54_seq_(com.altova.mapforce.IMFNode var1_shared, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_current = var2_current;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq54_seq_ closure;
			public Enumerator(seq54_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_shared;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq55_if_equal_or_greater(closure.var2_current, closure.var3_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq55_if_equal_or_greater implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq55_if_equal_or_greater(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq55_if_equal_or_greater closure;
			IEnumerator var3_filter;
			public Enumerator(seq55_if_equal_or_greater closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Core.equalOrGreater((java.math.BigDecimal)com.altova.functions.Core.first(com.altova.functions.Core.max((new seq56_join(closure.var1_current)))), new java.math.BigDecimal("1000")))) {state = 2; return false; }
				current = "Number of measures exceeds 999 in one or more categories. Measure IDs may be repeated, causing an invalid XML file.";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq2_CoreAny((new seq49_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				if (!(com.altova.functions.Core.equalOrGreater((java.math.BigDecimal)com.altova.functions.Core.first(com.altova.functions.Core.max((new seq53_join(((com.altova.mapforce.IMFNode)(var3_filter.current())))))), new java.math.BigDecimal("1000")))) {state = 5; return false; }
				current = "Number of measures exceeds 999 in one or more categories. Measure IDs may be repeated, causing an invalid XML file.";
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq56_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq56_join(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq56_join closure;
			IEnumerator var2_filter_elements_nodename;
			IEnumerator var3_filter_elements_nodename;
			public Enumerator(seq56_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter_elements_nodename = (com.altova.functions.Core.filterElements("Rows", closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter_elements_nodename.moveNext()) {state = 3; return false; }
				var3_filter_elements_nodename = (com.altova.functions.Core.filterElements("Number of Measures", ((com.altova.mapforce.IMFNode)(var2_filter_elements_nodename.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter_elements_nodename != null ) { var2_filter_elements_nodename.close(); var2_filter_elements_nodename = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_filter_elements_nodename.moveNext()) {state = 5; return false; }
				current = com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter_elements_nodename.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter_elements_nodename != null ) { var3_filter_elements_nodename.close(); var3_filter_elements_nodename = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter_elements_nodename != null ) { var3_filter_elements_nodename.close(); var3_filter_elements_nodename = null; }
				if( var2_filter_elements_nodename != null ) { var2_filter_elements_nodename.close(); var2_filter_elements_nodename = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class Outer implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_CTS_Evaluation_File_Instance;
	
		public Outer(com.altova.mapforce.IMFNode var1_CTS_Evaluation_File_Instance)
		{
			this.var1_CTS_Evaluation_File_Instance = var1_CTS_Evaluation_File_Instance;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			Outer closure;
			IEnumerator var2_join;
			public Enumerator(Outer closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_join = ((new main(closure.var1_CTS_Evaluation_File_Instance))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_join.moveNext()) {state = 3; return false; }
				current = var2_join.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_join != null ) { var2_join.close(); var2_join = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_join != null ) { var2_join.close(); var2_join = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}



	// instances
	protected org.w3c.dom.Node varCTS_Evaluation_FileInstance;

	public void run(String CTS_Evaluation_FileSourceFilename) throws Exception {
		// open source streams
		writeTrace("Loading " + CTS_Evaluation_FileSourceFilename + "...\n");
		com.altova.io.FileInput CTS_Evaluation_FileSource = new com.altova.io.FileInput(CTS_Evaluation_FileSourceFilename);

		// run
	
		run(CTS_Evaluation_FileSource);

		// close source streams
		CTS_Evaluation_FileSource.close();
	}


	// main entry point

	public void run(com.altova.io.Input CTS_Evaluation_FileSource) throws Exception {
		// Open the source(s)
		com.altova.xml.XLSXFileReader xlsxReader_CTS_Evaluation_File = new com.altova.xml.XLSXFileReader(CTS_Evaluation_FileSource);
		org.w3c.dom.Document doc_CTS_Evaluation_File = xlsxReader_CTS_Evaluation_File.run();
		varCTS_Evaluation_FileInstance = doc_CTS_Evaluation_File;
		if (runDoesCloseAll)
			CTS_Evaluation_FileSource.close();

		// Create the target

		// Execute mapping

		main mapping = new main(new com.altova.xml.DOMDocumentAsMFNodeAdapter(varCTS_Evaluation_FileInstance, CTS_Evaluation_FileSource.getFilename()));

		for (IEnumerator en = mapping.enumerator(); en.moveNext();)
		{
		  MFDocument doc = (MFDocument) en.current();
		org.w3c.dom.Document BuildingSync2Doc = XmlTreeOperations.createDocument();
		  com.altova.io.Output BuildingSync2Target = new com.altova.io.FileOutput(doc.getFilename());
		  com.altova.xml.MFDOMWriter.write(doc.select(IMFNode.MFQueryKind_All, null), BuildingSync2Doc);
		XmlTreeOperations.saveDocument(BuildingSync2Doc, BuildingSync2Target, "UTF-8", false, false, true, false);
		  BuildingSync2Target.close();
		}

	}



}
