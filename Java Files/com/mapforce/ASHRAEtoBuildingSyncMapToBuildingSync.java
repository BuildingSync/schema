/**
 * ASHRAEtoBuildingSyncMapToBuildingSync.java
 *
 * This file was generated by MapForce 2016r2.
 *
 * YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
 * OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
 *
 * Refer to the MapForce Documentation for further details.
 * http://www.altova.com/mapforce
 */
package com.mapforce;
import com.altova.mapforce.*;
import com.altova.types.*;
import com.altova.xml.*;
import java.util.*;

public class ASHRAEtoBuildingSyncMapToBuildingSync extends com.altova.TraceProvider 
{
	private boolean runDoesCloseAll = true;
	public void setCloseObjectsAfterRun(boolean c) {runDoesCloseAll = c;}
	public boolean getCloseObjectsAfterRun() {return runDoesCloseAll;}

	
	static class main implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_ASHRAE_211_Form_Instance;
	
		public main(com.altova.mapforce.IMFNode var1_ASHRAE_211_Form_Instance)
		{
			this.var1_ASHRAE_211_Form_Instance = var1_ASHRAE_211_Form_Instance;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 2;
			Object current;
			main closure;
			com.altova.mapforce.IEnumerable var2_box;
			com.altova.mapforce.IEnumerable var3_box;
			com.altova.mapforce.IEnumerable var4_Workbook;
			public Enumerator(main closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_2() throws Exception {
				state = 0;				
				var2_box = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.box("Auditor1"));
				var3_box = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.box("Window1"));
				var4_Workbook = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Workbook", ""), closure.var1_ASHRAE_211_Form_Instance));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Audits", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq1_seq_(var2_box, var4_Workbook, var3_box)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq1_seq_ implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq1_seq_(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq1_seq_ closure;
			public Enumerator(seq1_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("xsi:schemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), com.altova.functions.Core.box("http://nrel.gov/schemas/bedes-auc/2014 file:///C:/Users/Robert/Documents/GitHub/BuildingSync/schema/BuildingSync.xsd"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Audit", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq2_join(closure.var1_shared, closure.var2_shared, closure.var3_shared)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq2_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq2_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq2_join closure;
			IEnumerator var4_shared;
			IEnumerator var5_filter;
			com.altova.mapforce.IEnumerable var6_Row;
			com.altova.mapforce.IEnumerable var7_filter;
			IEnumerator var8_filter;
			IEnumerator var9_filter;
			public Enumerator(seq2_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Sites", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Site", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq3_seq_(closure.var2_shared, closure.var3_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Systems", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq180_join(closure.var2_shared, closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var4_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_shared.moveNext()) {state = 5; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var4_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 13;				
				if( var4_shared != null ) { var4_shared.close(); var4_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Report", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq585_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq571_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				var6_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current()))));
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq572_filter(var6_Row)));
				var8_filter = (var7_filter).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var8_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq12_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 8; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var8_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 10;				
				if (!var9_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 10; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Measures", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq573_join(var6_Row, var7_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Contacts", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq670_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_shared != null ) { var4_shared.close(); var4_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq3_seq_ implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq3_seq_(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq3_seq_ closure;
			public Enumerator(seq3_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Address", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq4_join(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Facilities", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq17_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq4_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq4_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq4_join closure;
			IEnumerator var2_shared;
			IEnumerator var3_filter;
			IEnumerator var6_shared;
			IEnumerator var4_filter;
			IEnumerator var7_filter;
			IEnumerator var10_shared;
			IEnumerator var8_filter;
			IEnumerator var11_filter;
			IEnumerator var5_filter;
			IEnumerator var14_shared;
			IEnumerator var12_filter;
			IEnumerator var15_filter;
			IEnumerator var9_filter;
			IEnumerator var16_filter;
			IEnumerator var13_filter;
			IEnumerator var17_filter;
			public Enumerator(seq4_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 32:	if (moveNext_32()) return true; break;
					case 33:	if (moveNext_33()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
					case 35:	if (moveNext_35()) return true; break;
					case 36:	if (moveNext_36()) return true; break;
					case 37:	if (moveNext_37()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("StreetAddressDetail", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Simplified", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq5_join(closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var2_shared.moveNext()) {state = 4; return false; }
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var2_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 12;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				var6_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq6_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq11_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq12_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var5_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 9; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("City", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var6_shared.moveNext()) {state = 13; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 21;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				var10_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 16;				
				if (!var7_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq6_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 14; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var8_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq13_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq14_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 16; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var8_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 14;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 18;				
				if (!var9_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 18; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("State", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var9_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 23;				
				if (!var10_shared.moveNext()) {state = 22; return false; }
				var11_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var10_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 30;				
				if( var10_shared != null ) { var10_shared.close(); var10_shared = null; }
				var14_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if (!var11_filter.moveNext()) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq6_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 23; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 21;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 27;				
				if (!var12_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq15_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 25; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq16_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 25; return false; }
				var13_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var12_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 27;				
				if (!var13_filter.moveNext()) {state = 28; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 27; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PostalCode", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.substringBefore(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var13_filter.current()))), "-")));
				pos++;
				return true;
			}
			private boolean moveNext_28() throws Exception {
				state = 25;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_30() throws Exception {
				state = 32;				
				if (!var14_shared.moveNext()) {state = 31; return false; }
				var15_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var14_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_31() throws Exception {
				state = 0;				
				if( var14_shared != null ) { var14_shared.close(); var14_shared = null; }
				return false;
			}
			private boolean moveNext_32() throws Exception {
				state = 34;				
				if (!var15_filter.moveNext()) {state = 33; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq6_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 32; return false; }
				var16_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var15_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_33() throws Exception {
				state = 30;				
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				return false;
			}
			private boolean moveNext_34() throws Exception {
				state = 36;				
				if (!var16_filter.moveNext()) {state = 35; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq15_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 34; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq16_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 34; return false; }
				var17_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var16_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_35() throws Exception {
				state = 32;				
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				return false;
			}
			private boolean moveNext_36() throws Exception {
				state = 36;				
				if (!var17_filter.moveNext()) {state = 37; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 36; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PostalCodePlus4", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.substringAfter(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var17_filter.current()))), "-")));
				pos++;
				return true;
			}
			private boolean moveNext_37() throws Exception {
				state = 34;				
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var10_shared != null ) { var10_shared.close(); var10_shared = null; }
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				if( var14_shared != null ) { var14_shared.close(); var14_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq5_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq5_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq5_join closure;
			IEnumerator var2_shared;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			public Enumerator(seq5_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var2_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq6_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 6; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("StreetAddress", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq6_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq6_map(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq6_map closure;
			IEnumerator var2_Name;
			public Enumerator(seq6_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_Name = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_n)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_Name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_Name.current()))), "L0 - Building");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq7_CoreAny implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_sequence;
	
		public seq7_CoreAny(com.altova.mapforce.IEnumerable var1_sequence)
		{
			this.var1_sequence = var1_sequence;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq7_CoreAny closure;
			IEnumerator var2_enum;
			public Enumerator(seq7_CoreAny closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_enum = (closure.var1_sequence).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_enum.moveNext()) {state = 3; return false; }
				if (!(((Boolean)(var2_enum.current())))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = com.altova.CoreTypes.parseBoolean("false");
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var2_enum != null ) { var2_enum.close(); var2_enum = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_enum != null ) { var2_enum.close(); var2_enum = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq8_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq8_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq8_map closure;
			IEnumerator var2_r;
			public Enumerator(seq8_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(5L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq9_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq9_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq9_map closure;
			IEnumerator var2_r;
			public Enumerator(seq9_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(5L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq10_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq10_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq10_map closure;
			IEnumerator var2_n;
			public Enumerator(seq10_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(2L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq11_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq11_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq11_map closure;
			IEnumerator var2_r;
			public Enumerator(seq11_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(6L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq12_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq12_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq12_map closure;
			IEnumerator var2_r;
			public Enumerator(seq12_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(6L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq13_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq13_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq13_map closure;
			IEnumerator var2_r;
			public Enumerator(seq13_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(7L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq14_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq14_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq14_map closure;
			IEnumerator var2_r;
			public Enumerator(seq14_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(7L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq15_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq15_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq15_map closure;
			IEnumerator var2_r;
			public Enumerator(seq15_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(8L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq16_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq16_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq16_map closure;
			IEnumerator var2_r;
			public Enumerator(seq16_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(8L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq17_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq17_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq17_join closure;
			IEnumerator var3_shared;
			com.altova.mapforce.IEnumerable var4_Worksheet;
			IEnumerator var5_filter;
			com.altova.mapforce.IEnumerable var6_Row;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			com.altova.mapforce.IEnumerable var9_box;
			com.altova.mapforce.IEnumerable var10_filter;
			com.altova.mapforce.IEnumerable var11_filter;
			com.altova.mapforce.IEnumerable var12_filter;
			com.altova.mapforce.IEnumerable var13_filter;
			com.altova.mapforce.IEnumerable var14_filter;
			com.altova.mapforce.IEnumerable var15_join;
			public Enumerator(seq17_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current()))));
				var5_filter = (var4_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq6_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 4; return false; }
				var6_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current()))));
				var7_filter = (var6_Row).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var7_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq18_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq19_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 6; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var8_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 8; return false; }
				var9_box = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.box("Wholebuilding"));
				var10_filter = new com.altova.functions.Core.SequenceCache((new seq20_filter(var4_Worksheet)));
				var11_filter = new com.altova.functions.Core.SequenceCache((new seq22_filter(var4_Worksheet)));
				var12_filter = new com.altova.functions.Core.SequenceCache((new seq24_filter(var4_Worksheet)));
				var13_filter = new com.altova.functions.Core.SequenceCache((new seq26_filter(var6_Row)));
				var14_filter = new com.altova.functions.Core.SequenceCache((new seq30_filter(var6_Row)));
				var15_join = new com.altova.functions.Core.SequenceCache((new seq34_join(var6_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Facility", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq38_join(((com.altova.mapforce.IMFNode)(var8_filter.current())), var12_filter, var15_join, var6_Row, var9_box, var10_filter, var11_filter, var13_filter, var14_filter, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq18_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq18_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq18_map closure;
			IEnumerator var2_r;
			public Enumerator(seq18_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(3L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq19_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq19_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq19_map closure;
			IEnumerator var2_r;
			public Enumerator(seq19_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(3L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq20_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq20_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq20_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq20_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq21_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq21_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq21_map(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq21_map closure;
			IEnumerator var2_Name;
			public Enumerator(seq21_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_Name = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_n)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_Name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_Name.current()))), "L0 - Space Functions");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq22_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq22_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq22_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq22_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq23_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq23_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq23_map(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq23_map closure;
			IEnumerator var2_Name;
			public Enumerator(seq23_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_Name = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_n)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_Name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_Name.current()))), "Instructions");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq24_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq24_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq24_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq24_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq25_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq25_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq25_map(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq25_map closure;
			IEnumerator var2_Name;
			public Enumerator(seq25_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_Name = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_n)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_Name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_Name.current()))), "L2 - Envelope");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq26_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq26_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq26_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq26_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq27_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq29_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq27_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq27_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq27_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq27_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq28_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq28_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq28_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq28_map closure;
			IEnumerator var2_r;
			public Enumerator(seq28_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(17L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq29_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq29_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq29_map closure;
			IEnumerator var2_r;
			public Enumerator(seq29_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(17L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq30_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq30_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq30_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq30_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq31_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq33_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq31_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq31_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq31_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq31_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq32_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq32_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq32_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq32_map closure;
			IEnumerator var2_r;
			public Enumerator(seq32_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(19L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq33_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq33_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq33_map closure;
			IEnumerator var2_r;
			public Enumerator(seq33_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(19L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq34_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq34_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq34_join closure;
			IEnumerator var2_filter;
			IEnumerator var3_filter;
			public Enumerator(seq34_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq35_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq36_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearOfConstruction", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq35_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq35_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq35_map closure;
			IEnumerator var2_r;
			public Enumerator(seq35_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(12L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq36_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq36_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq36_map closure;
			IEnumerator var2_r;
			public Enumerator(seq36_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(12L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq37_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq37_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq37_map closure;
			IEnumerator var2_n;
			public Enumerator(seq37_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(6L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq38_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
		com.altova.mapforce.IEnumerable var5_shared;
		com.altova.mapforce.IEnumerable var6_shared;
		com.altova.mapforce.IEnumerable var7_shared;
		com.altova.mapforce.IEnumerable var8_shared;
		com.altova.mapforce.IEnumerable var9_shared;
		com.altova.mapforce.IEnumerable var10_shared;
	
		public seq38_join(com.altova.mapforce.IMFNode var1_cur_Cell, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared, com.altova.mapforce.IEnumerable var4_shared, com.altova.mapforce.IEnumerable var5_shared, com.altova.mapforce.IEnumerable var6_shared, com.altova.mapforce.IEnumerable var7_shared, com.altova.mapforce.IEnumerable var8_shared, com.altova.mapforce.IEnumerable var9_shared, com.altova.mapforce.IEnumerable var10_shared)
		{
			this.var1_cur_Cell = var1_cur_Cell;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
			this.var6_shared = var6_shared;
			this.var7_shared = var7_shared;
			this.var8_shared = var8_shared;
			this.var9_shared = var9_shared;
			this.var10_shared = var10_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq38_join closure;
			IEnumerator var11_shared;
			IEnumerator var12_filter;
			IEnumerator var15_filter;
			IEnumerator var13_filter;
			IEnumerator var16_filter;
			IEnumerator var17_shared;
			IEnumerator var14_filter;
			IEnumerator var18_filter;
			IEnumerator var19_shared;
			IEnumerator var20_filter;
			IEnumerator var22_filter;
			IEnumerator var21_filter;
			IEnumerator var24_filter;
			IEnumerator var23_filter;
			IEnumerator var25_filter;
			IEnumerator var26_shared;
			IEnumerator var27_filter;
			com.altova.mapforce.IEnumerable var28_filter;
			public Enumerator(seq38_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 33:	if (moveNext_33()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
					case 35:	if (moveNext_35()) return true; break;
					case 36:	if (moveNext_36()) return true; break;
					case 38:	if (moveNext_38()) return true; break;
					case 39:	if (moveNext_39()) return true; break;
					case 40:	if (moveNext_40()) return true; break;
					case 41:	if (moveNext_41()) return true; break;
					case 43:	if (moveNext_43()) return true; break;
					case 44:	if (moveNext_44()) return true; break;
					case 45:	if (moveNext_45()) return true; break;
					case 46:	if (moveNext_46()) return true; break;
					case 47:	if (moveNext_47()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box("Building1"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PremisesName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_cur_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var11_shared = (closure.var8_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var11_shared.moveNext()) {state = 5; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 13;				
				if( var11_shared != null ) { var11_shared.close(); var11_shared = null; }
				var15_filter = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var12_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 6; return false; }
				var13_filter = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var13_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq40_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 8; return false; }
				var14_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var13_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 10;				
				if (!var14_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 10; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PremisesNotes", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.mapforce.vmf.vmf1_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var12_filter.current())))), "Spaces excluded from gross floor area: "), com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var14_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var15_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq41_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq42_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 13; return false; }
				var16_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var15_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 18;				
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyLevels", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq43_join(closure.var4_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var16_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyClassification", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var16_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 19;				
				var17_shared = (closure.var9_shared).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 21;				
				if (!var17_shared.moveNext()) {state = 20; return false; }
				var18_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var17_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 24;				
				if( var17_shared != null ) { var17_shared.close(); var17_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreas", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq47_join(closure.var4_shared, closure.var7_shared, closure.var8_shared, closure.var9_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_21() throws Exception {
				state = 21;				
				if (!var18_filter.moveNext()) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))))) {state = 21; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OwnershipStatus", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf3_inputtoresult.eval(com.altova.CoreTypes.decimalToInteger(com.altova.functions.Core.round(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var18_filter.current())))))))));
				pos++;
				return true;
			}
			private boolean moveNext_22() throws Exception {
				state = 19;				
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 25;				
				var19_shared = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 25;				
				if (!var19_shared.moveNext()) {state = 26; return false; }
				current = var19_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_26() throws Exception {
				state = 28;				
				if( var19_shared != null ) { var19_shared.close(); var19_shared = null; }
				var20_filter = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_28() throws Exception {
				state = 30;				
				if (!var20_filter.moveNext()) {state = 29; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq66_map(((com.altova.mapforce.IMFNode)(var20_filter.current()))))))))) {state = 28; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq67_map(((com.altova.mapforce.IMFNode)(var20_filter.current()))))))))) {state = 28; return false; }
				var21_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var20_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_29() throws Exception {
				state = 33;				
				if( var20_filter != null ) { var20_filter.close(); var20_filter = null; }
				var22_filter = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_30() throws Exception {
				state = 30;				
				if (!var21_filter.moveNext()) {state = 31; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var21_filter.current()))))))))) {state = 30; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearOfLastEnergyAudit", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var21_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_31() throws Exception {
				state = 28;				
				if( var21_filter != null ) { var21_filter.close(); var21_filter = null; }
				return false;
			}
			private boolean moveNext_33() throws Exception {
				state = 35;				
				if (!var22_filter.moveNext()) {state = 34; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq68_map(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))))) {state = 33; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq69_map(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))))) {state = 33; return false; }
				var23_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var22_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_34() throws Exception {
				state = 38;				
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				var24_filter = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_35() throws Exception {
				state = 35;				
				if (!var23_filter.moveNext()) {state = 36; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var23_filter.current()))))))))) {state = 35; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RetrocommissioningDate", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.dateToString(com.altova.CoreTypes.parseDate(com.altova.functions.Core.concat(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var23_filter.current()))), "-07-01")))));
				pos++;
				return true;
			}
			private boolean moveNext_36() throws Exception {
				state = 33;				
				if( var23_filter != null ) { var23_filter.close(); var23_filter = null; }
				return false;
			}
			private boolean moveNext_38() throws Exception {
				state = 40;				
				if (!var24_filter.moveNext()) {state = 39; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var24_filter.current()))))))))) {state = 38; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq71_map(((com.altova.mapforce.IMFNode)(var24_filter.current()))))))))) {state = 38; return false; }
				var25_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var24_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_39() throws Exception {
				state = 43;				
				if( var24_filter != null ) { var24_filter.close(); var24_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Subsections", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Subsection", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq72_join(closure.var2_shared, closure.var3_shared, closure.var4_shared, closure.var5_shared, closure.var6_shared, closure.var7_shared, closure.var10_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_40() throws Exception {
				state = 40;				
				if (!var25_filter.moveNext()) {state = 41; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var25_filter.current()))))))))) {state = 40; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearOfLastMajorRemodel", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var25_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_41() throws Exception {
				state = 38;				
				if( var25_filter != null ) { var25_filter.close(); var25_filter = null; }
				return false;
			}
			private boolean moveNext_43() throws Exception {
				state = 44;				
				var26_shared = (closure.var9_shared).enumerator();
				return false;
			}
			private boolean moveNext_44() throws Exception {
				state = 46;				
				if (!var26_shared.moveNext()) {state = 45; return false; }
				var27_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var26_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_45() throws Exception {
				state = 0;				
				if( var26_shared != null ) { var26_shared.close(); var26_shared = null; }
				return false;
			}
			private boolean moveNext_46() throws Exception {
				state = 46;				
				if (!var27_filter.moveNext()) {state = 47; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var27_filter.current()))))))))) {state = 46; return false; }
				var28_filter = new com.altova.functions.Core.SequenceCache((new seq54_filter(closure.var4_shared)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq168_join(((com.altova.mapforce.IMFNode)(var27_filter.current())), closure.var2_shared, closure.var4_shared, closure.var7_shared, closure.var9_shared, var28_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_47() throws Exception {
				state = 44;				
				if( var27_filter != null ) { var27_filter.close(); var27_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_shared != null ) { var11_shared.close(); var11_shared = null; }
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				if( var17_shared != null ) { var17_shared.close(); var17_shared = null; }
				if( var19_shared != null ) { var19_shared.close(); var19_shared = null; }
				if( var21_filter != null ) { var21_filter.close(); var21_filter = null; }
				if( var20_filter != null ) { var20_filter.close(); var20_filter = null; }
				if( var23_filter != null ) { var23_filter.close(); var23_filter = null; }
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				if( var25_filter != null ) { var25_filter.close(); var25_filter = null; }
				if( var24_filter != null ) { var24_filter.close(); var24_filter = null; }
				if( var27_filter != null ) { var27_filter.close(); var27_filter = null; }
				if( var26_shared != null ) { var26_shared.close(); var26_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq39_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq39_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq39_map closure;
			IEnumerator var2_r;
			public Enumerator(seq39_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(18L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq40_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq40_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq40_map closure;
			IEnumerator var2_r;
			public Enumerator(seq40_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(18L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq41_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq41_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq41_map closure;
			IEnumerator var2_r;
			public Enumerator(seq41_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(10L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq42_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq42_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq42_map closure;
			IEnumerator var2_r;
			public Enumerator(seq42_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(10L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq43_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq43_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq43_join closure;
			IEnumerator var2_filter;
			IEnumerator var3_filter;
			java.lang.String var4_cast;
			public Enumerator(seq43_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq44_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq45_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				var4_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyLevel", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq46_seq_(var4_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq44_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq44_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq44_map closure;
			IEnumerator var2_r;
			public Enumerator(seq44_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(36L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq45_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq45_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq45_map closure;
			IEnumerator var2_r;
			public Enumerator(seq45_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(36L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq46_seq_ implements IEnumerable
	{
		java.lang.String var1_shared;
	
		public seq46_seq_(java.lang.String var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq46_seq_ closure;
			public Enumerator(seq46_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupantQuantityType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf2_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupantQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(closure.var1_shared))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq47_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
	
		public seq47_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared, com.altova.mapforce.IEnumerable var4_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq47_join closure;
			IEnumerator var5_shared;
			IEnumerator var6_filter;
			IEnumerator var8_shared;
			IEnumerator var9_filter;
			IEnumerator var7_filter;
			IEnumerator var11_shared;
			IEnumerator var12_filter;
			IEnumerator var10_filter;
			IEnumerator var16_shared;
			IEnumerator var17_filter;
			IEnumerator var13_filter;
			com.altova.mapforce.IEnumerable var14_filter;
			IEnumerator var18_filter;
			com.altova.mapforce.IEnumerable var15_filter;
			com.altova.mapforce.IEnumerable var19_filter;
			com.altova.mapforce.IEnumerable var20_filter;
			public Enumerator(seq47_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var5_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var5_shared.moveNext()) {state = 3; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 9;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				var8_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var6_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq28_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq29_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 4; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var7_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 6; return false; }
				if (!(com.altova.functions.Core.exists((new seq48_if_equal(((com.altova.mapforce.IMFNode)(var7_filter.current())), closure.var3_shared))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorArea", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq49_join(((com.altova.mapforce.IMFNode)(var7_filter.current())), closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var8_shared.moveNext()) {state = 10; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var8_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 16;				
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				var11_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var9_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq28_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq29_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 11; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var10_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 13; return false; }
				if (!(com.altova.functions.Core.exists((new seq51_if_equal(((com.altova.mapforce.IMFNode)(var10_filter.current())), closure.var4_shared))))) {state = 13; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorArea", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq52_join(((com.altova.mapforce.IMFNode)(var10_filter.current())), closure.var4_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var11_shared.moveNext()) {state = 17; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var11_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 23;				
				if( var11_shared != null ) { var11_shared.close(); var11_shared = null; }
				var16_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var12_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq28_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq29_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 18; return false; }
				var13_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var12_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 20;				
				if (!var13_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 20; return false; }
				var14_filter = new com.altova.functions.Core.SequenceCache((new seq54_filter(closure.var1_shared)));
				if (!(com.altova.functions.Core.exists((new seq58_if_equal(((com.altova.mapforce.IMFNode)(var13_filter.current())), var14_filter))))) {state = 20; return false; }
				var15_filter = new com.altova.functions.Core.SequenceCache((new seq54_filter(closure.var1_shared)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorArea", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq59_join(((com.altova.mapforce.IMFNode)(var13_filter.current())), var15_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if (!var16_shared.moveNext()) {state = 24; return false; }
				var17_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var16_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 0;				
				if( var16_shared != null ) { var16_shared.close(); var16_shared = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 27;				
				if (!var17_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq28_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 25; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq29_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 25; return false; }
				var18_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var17_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 27;				
				if (!var18_filter.moveNext()) {state = 28; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))))) {state = 27; return false; }
				var19_filter = new com.altova.functions.Core.SequenceCache((new seq61_filter(closure.var1_shared)));
				if (!(com.altova.functions.Core.exists((new seq58_if_equal(((com.altova.mapforce.IMFNode)(var18_filter.current())), var19_filter))))) {state = 27; return false; }
				var20_filter = new com.altova.functions.Core.SequenceCache((new seq61_filter(closure.var1_shared)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorArea", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq65_join(((com.altova.mapforce.IMFNode)(var18_filter.current())), var20_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_28() throws Exception {
				state = 25;				
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_shared != null ) { var11_shared.close(); var11_shared = null; }
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				if( var16_shared != null ) { var16_shared.close(); var16_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq48_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq48_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq48_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var5_shared;
			IEnumerator var4_filter;
			IEnumerator var6_filter;
			public Enumerator(seq48_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 9;				
				var5_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var5_shared.moveNext()) {state = 10; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))), new java.math.BigDecimal("10.7639")));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq49_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq49_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq49_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			public Enumerator(seq49_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal((java.lang.String)com.altova.functions.Core.last((new seq50_if_equal(closure.var1_current, closure.var2_shared)))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf4_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq50_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq50_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq50_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var5_shared;
			IEnumerator var4_filter;
			IEnumerator var6_filter;
			public Enumerator(seq50_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 9;				
				var5_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var5_shared.moveNext()) {state = 10; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))), new java.math.BigDecimal("10.7639")));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq51_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq51_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq51_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var5_shared;
			IEnumerator var4_filter;
			IEnumerator var6_filter;
			public Enumerator(seq51_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 9;				
				var5_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var5_shared.moveNext()) {state = 10; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))), new java.math.BigDecimal("10.7639")));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq52_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq52_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq52_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			public Enumerator(seq52_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal((java.lang.String)com.altova.functions.Core.last((new seq53_if_equal(closure.var1_current, closure.var2_shared)))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf5_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq53_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq53_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq53_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var5_shared;
			IEnumerator var4_filter;
			IEnumerator var6_filter;
			public Enumerator(seq53_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 9;				
				var5_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var5_shared.moveNext()) {state = 10; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))), new java.math.BigDecimal("10.7639")));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq54_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq54_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq54_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq54_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq55_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq57_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq55_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq55_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq55_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq55_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq56_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq56_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq56_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq56_map closure;
			IEnumerator var2_r;
			public Enumerator(seq56_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(20L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq57_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq57_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq57_map closure;
			IEnumerator var2_r;
			public Enumerator(seq57_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(20L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq58_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq58_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq58_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var5_shared;
			IEnumerator var4_filter;
			IEnumerator var6_filter;
			public Enumerator(seq58_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 9;				
				var5_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var5_shared.moveNext()) {state = 10; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))), new java.math.BigDecimal("10.7639")));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq59_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq59_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq59_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			public Enumerator(seq59_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal((java.lang.String)com.altova.functions.Core.last((new seq60_if_equal(closure.var1_current, closure.var2_shared)))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf6_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq60_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq60_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq60_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var5_shared;
			IEnumerator var4_filter;
			IEnumerator var6_filter;
			public Enumerator(seq60_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 9;				
				var5_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var5_shared.moveNext()) {state = 10; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))), new java.math.BigDecimal("10.7639")));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq61_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq61_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq61_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq61_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq62_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq64_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq62_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq62_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq62_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq62_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq63_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq63_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq63_map closure;
			IEnumerator var2_r;
			public Enumerator(seq63_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(21L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq64_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq64_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq64_map closure;
			IEnumerator var2_r;
			public Enumerator(seq64_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(21L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq65_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq65_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq65_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			public Enumerator(seq65_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal((java.lang.String)com.altova.functions.Core.last((new seq60_if_equal(closure.var1_current, closure.var2_shared)))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf7_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq66_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq66_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq66_map closure;
			IEnumerator var2_r;
			public Enumerator(seq66_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(14L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq67_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq67_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq67_map closure;
			IEnumerator var2_r;
			public Enumerator(seq67_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(14L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq68_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq68_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq68_map closure;
			IEnumerator var2_r;
			public Enumerator(seq68_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(15L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq69_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq69_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq69_map closure;
			IEnumerator var2_r;
			public Enumerator(seq69_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(15L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq70_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq70_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq70_map closure;
			IEnumerator var2_r;
			public Enumerator(seq70_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(13L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq71_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq71_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq71_map closure;
			IEnumerator var2_r;
			public Enumerator(seq71_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(13L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq72_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
		com.altova.mapforce.IEnumerable var5_shared;
		com.altova.mapforce.IEnumerable var6_shared;
		com.altova.mapforce.IEnumerable var7_shared;
	
		public seq72_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared, com.altova.mapforce.IEnumerable var4_shared, com.altova.mapforce.IEnumerable var5_shared, com.altova.mapforce.IEnumerable var6_shared, com.altova.mapforce.IEnumerable var7_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
			this.var6_shared = var6_shared;
			this.var7_shared = var7_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq72_join closure;
			IEnumerator var8_shared;
			IEnumerator var9_shared;
			IEnumerator var10_filter;
			IEnumerator var12_shared;
			IEnumerator var13_filter;
			IEnumerator var11_filter;
			IEnumerator var15_filter;
			IEnumerator var14_filter;
			IEnumerator var17_filter;
			IEnumerator var16_filter;
			IEnumerator var18_filter;
			public Enumerator(seq72_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), closure.var4_shared);
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PremisesName", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var4_shared);
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var8_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var8_shared.moveNext()) {state = 5; return false; }
				current = var8_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				var9_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var9_shared.moveNext()) {state = 8; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var9_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 14;				
				if( var9_shared != null ) { var9_shared.close(); var9_shared = null; }
				var12_shared = (closure.var6_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var10_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq73_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq74_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 9; return false; }
				var11_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var10_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var11_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FootprintShape", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var11_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 16;				
				if (!var12_shared.moveNext()) {state = 15; return false; }
				var13_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var12_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 21;				
				if( var12_shared != null ) { var12_shared.close(); var12_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RoofID", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq81_join(closure.var1_shared, closure.var6_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var13_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq28_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq29_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 16; return false; }
				var14_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var13_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 14;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 18;				
				if (!var14_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 18; return false; }
				if (!(com.altova.functions.Core.exists((new seq75_if_equal(((com.altova.mapforce.IMFNode)(var14_filter.current())), closure.var1_shared))))) {state = 18; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Sides", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Side", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq77_seq_(((com.altova.mapforce.IMFNode)(var14_filter.current())), closure.var1_shared, closure.var7_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 22;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FoundationID", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq84_join(closure.var1_shared, closure.var6_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_22() throws Exception {
				state = 23;				
				var15_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if (!var15_filter.moveNext()) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq89_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq90_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 23; return false; }
				var16_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var15_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 28;				
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				var17_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 25;				
				if (!var16_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 25; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorsAboveGrade", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var16_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				return false;
			}
			private boolean moveNext_28() throws Exception {
				state = 30;				
				if (!var17_filter.moveNext()) {state = 29; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq91_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 28; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq92_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 28; return false; }
				var18_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var17_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_29() throws Exception {
				state = 0;				
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ThermalZones", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ThermalZone", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Spaces", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq93_join(closure.var5_shared, closure.var6_shared)))))));
				pos++;
				return true;
			}
			private boolean moveNext_30() throws Exception {
				state = 30;				
				if (!var18_filter.moveNext()) {state = 31; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))))) {state = 30; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorsBelowGrade", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var18_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_31() throws Exception {
				state = 28;				
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_shared != null ) { var9_shared.close(); var9_shared = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_shared != null ) { var12_shared.close(); var12_shared = null; }
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq73_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq73_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq73_map closure;
			IEnumerator var2_r;
			public Enumerator(seq73_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(11L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq74_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq74_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq74_map closure;
			IEnumerator var2_r;
			public Enumerator(seq74_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(11L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq75_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq75_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq75_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var6_shared;
			IEnumerator var4_filter;
			IEnumerator var7_filter;
			IEnumerator var5_filter;
			IEnumerator var8_filter;
			public Enumerator(seq75_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 11;				
				var6_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq18_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq19_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current()))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var6_shared.moveNext()) {state = 12; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var7_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq18_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq19_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var8_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.CoreTypes.decimalToDouble(com.altova.functions.Core.multiply(new java.math.BigDecimal("10.7639"), com.altova.CoreTypes.doubleToDecimal(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq76_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq76_map(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq76_map closure;
			IEnumerator var2_t;
			public Enumerator(seq76_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_t = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("t", ""), closure.var1_cur_n)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_t.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_t.current()))), "n");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_t != null ) { var2_t.close(); var2_t = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_t != null ) { var2_t.close(); var2_t = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq77_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq77_seq_(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq77_seq_ closure;
			public Enumerator(seq77_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("WallID", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq78_seq_(closure.var1_current, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("WindowID", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq80_join(closure.var2_shared, closure.var3_shared)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq78_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq78_seq_(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq78_seq_ closure;
			public Enumerator(seq78_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("AllWall1"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("WallArea", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.doubleToDecimal((Double)com.altova.functions.Core.last((new seq79_if_equal(closure.var1_current, closure.var2_shared)))))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq79_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq79_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq79_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var6_shared;
			IEnumerator var4_filter;
			IEnumerator var7_filter;
			IEnumerator var5_filter;
			IEnumerator var8_filter;
			public Enumerator(seq79_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 11;				
				var6_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq18_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq19_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current()))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var6_shared.moveNext()) {state = 12; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var7_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq18_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq19_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var8_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.CoreTypes.decimalToDouble(com.altova.functions.Core.multiply(new java.math.BigDecimal("10.7639"), com.altova.CoreTypes.doubleToDecimal(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq80_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq80_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq80_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			public Enumerator(seq80_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), closure.var2_shared);
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq15_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq16_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("WindowToWallRatio", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq81_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq81_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq81_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			public Enumerator(seq81_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("Roof1"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq28_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq29_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				if (!(com.altova.functions.Core.exists((new seq82_if_equal(((com.altova.mapforce.IMFNode)(var5_filter.current())), closure.var1_shared))))) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RoofArea", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal((java.lang.String)com.altova.functions.Core.last((new seq83_if_equal(((com.altova.mapforce.IMFNode)(var5_filter.current())), closure.var1_shared)))))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq82_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq82_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq82_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var6_shared;
			IEnumerator var4_filter;
			IEnumerator var7_filter;
			IEnumerator var5_filter;
			IEnumerator var8_filter;
			public Enumerator(seq82_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 11;				
				var6_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var6_shared.moveNext()) {state = 12; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var7_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var8_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(new java.math.BigDecimal("10.7639"), com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq83_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq83_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq83_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var6_shared;
			IEnumerator var4_filter;
			IEnumerator var7_filter;
			IEnumerator var5_filter;
			IEnumerator var8_filter;
			public Enumerator(seq83_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 11;				
				var6_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var6_shared.moveNext()) {state = 12; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var7_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var8_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(new java.math.BigDecimal("10.7639"), com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq84_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq84_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq84_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			public Enumerator(seq84_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("Foundation1"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq28_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq29_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				if (!(com.altova.functions.Core.exists((new seq85_if_equal(((com.altova.mapforce.IMFNode)(var5_filter.current())), closure.var1_shared))))) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FoundationArea", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal((java.lang.String)com.altova.functions.Core.last((new seq88_if_equal(((com.altova.mapforce.IMFNode)(var5_filter.current())), closure.var1_shared)))))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq85_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq85_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq85_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var6_shared;
			IEnumerator var4_filter;
			IEnumerator var7_filter;
			IEnumerator var5_filter;
			IEnumerator var8_filter;
			public Enumerator(seq85_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 11;				
				var6_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq87_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var6_shared.moveNext()) {state = 12; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var7_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq87_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var8_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(new java.math.BigDecimal("10.7639"), com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq86_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq86_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq86_map closure;
			IEnumerator var2_r;
			public Enumerator(seq86_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(4L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq87_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq87_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq87_map closure;
			IEnumerator var2_r;
			public Enumerator(seq87_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(4L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq88_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq88_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq88_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var6_shared;
			IEnumerator var4_filter;
			IEnumerator var7_filter;
			IEnumerator var5_filter;
			IEnumerator var8_filter;
			public Enumerator(seq88_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 11;				
				var6_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq87_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var6_shared.moveNext()) {state = 12; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var7_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq87_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var8_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(new java.math.BigDecimal("10.7639"), com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq89_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq89_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq89_map closure;
			IEnumerator var2_r;
			public Enumerator(seq89_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(23L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq90_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq90_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq90_map closure;
			IEnumerator var2_r;
			public Enumerator(seq90_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(23L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq91_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq91_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq91_map closure;
			IEnumerator var2_r;
			public Enumerator(seq91_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(24L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq92_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq92_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq92_map closure;
			IEnumerator var2_r;
			public Enumerator(seq92_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(24L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq93_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq93_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq93_join closure;
			IEnumerator var3_shared;
			com.altova.mapforce.IEnumerable var4_Row;
			IEnumerator var5_filter;
			IEnumerator var7_shared;
			com.altova.mapforce.IEnumerable var8_Row;
			IEnumerator var9_filter;
			IEnumerator var11_shared;
			IEnumerator var6_filter;
			com.altova.mapforce.IEnumerable var12_Row;
			IEnumerator var13_filter;
			IEnumerator var15_shared;
			IEnumerator var10_filter;
			com.altova.mapforce.IEnumerable var16_Row;
			IEnumerator var17_filter;
			IEnumerator var19_shared;
			IEnumerator var14_filter;
			com.altova.mapforce.IEnumerable var20_Row;
			IEnumerator var21_filter;
			IEnumerator var23_shared;
			IEnumerator var18_filter;
			com.altova.mapforce.IEnumerable var24_Row;
			IEnumerator var25_filter;
			IEnumerator var22_filter;
			IEnumerator var26_filter;
			public Enumerator(seq93_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 32:	if (moveNext_32()) return true; break;
					case 33:	if (moveNext_33()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
					case 35:	if (moveNext_35()) return true; break;
					case 37:	if (moveNext_37()) return true; break;
					case 38:	if (moveNext_38()) return true; break;
					case 39:	if (moveNext_39()) return true; break;
					case 40:	if (moveNext_40()) return true; break;
					case 41:	if (moveNext_41()) return true; break;
					case 42:	if (moveNext_42()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current()))));
				var5_filter = (var4_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 9;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var7_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 4; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Space", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq94_join(((com.altova.mapforce.IMFNode)(var6_filter.current())), closure.var2_shared, var4_Row)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var7_shared.moveNext()) {state = 10; return false; }
				var8_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var7_shared.current()))));
				var9_filter = (var8_Row).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 16;				
				if( var7_shared != null ) { var7_shared.close(); var7_shared = null; }
				var11_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var9_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 11; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var10_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 13; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Space", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq113_join(((com.altova.mapforce.IMFNode)(var10_filter.current())), closure.var2_shared, var8_Row)));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var11_shared.moveNext()) {state = 17; return false; }
				var12_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var11_shared.current()))));
				var13_filter = (var12_Row).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 23;				
				if( var11_shared != null ) { var11_shared.close(); var11_shared = null; }
				var15_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var13_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 18; return false; }
				var14_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var13_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 20;				
				if (!var14_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 20; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Space", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq126_join(((com.altova.mapforce.IMFNode)(var14_filter.current())), closure.var2_shared, var12_Row)));
				pos++;
				return true;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if (!var15_shared.moveNext()) {state = 24; return false; }
				var16_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var15_shared.current()))));
				var17_filter = (var16_Row).enumerator();
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 30;				
				if( var15_shared != null ) { var15_shared.close(); var15_shared = null; }
				var19_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 27;				
				if (!var17_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 25; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 25; return false; }
				var18_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var17_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 27;				
				if (!var18_filter.moveNext()) {state = 28; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))))) {state = 27; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Space", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq137_join(((com.altova.mapforce.IMFNode)(var18_filter.current())), closure.var2_shared, var16_Row)));
				pos++;
				return true;
			}
			private boolean moveNext_28() throws Exception {
				state = 25;				
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				return false;
			}
			private boolean moveNext_30() throws Exception {
				state = 32;				
				if (!var19_shared.moveNext()) {state = 31; return false; }
				var20_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var19_shared.current()))));
				var21_filter = (var20_Row).enumerator();
				return false;
			}
			private boolean moveNext_31() throws Exception {
				state = 37;				
				if( var19_shared != null ) { var19_shared.close(); var19_shared = null; }
				var23_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_32() throws Exception {
				state = 34;				
				if (!var21_filter.moveNext()) {state = 33; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var21_filter.current()))))))))) {state = 32; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var21_filter.current()))))))))) {state = 32; return false; }
				var22_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var21_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_33() throws Exception {
				state = 30;				
				if( var21_filter != null ) { var21_filter.close(); var21_filter = null; }
				return false;
			}
			private boolean moveNext_34() throws Exception {
				state = 34;				
				if (!var22_filter.moveNext()) {state = 35; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))))) {state = 34; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Space", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq147_join(((com.altova.mapforce.IMFNode)(var22_filter.current())), closure.var2_shared, var20_Row)));
				pos++;
				return true;
			}
			private boolean moveNext_35() throws Exception {
				state = 32;				
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				return false;
			}
			private boolean moveNext_37() throws Exception {
				state = 39;				
				if (!var23_shared.moveNext()) {state = 38; return false; }
				var24_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var23_shared.current()))));
				var25_filter = (var24_Row).enumerator();
				return false;
			}
			private boolean moveNext_38() throws Exception {
				state = 0;				
				if( var23_shared != null ) { var23_shared.close(); var23_shared = null; }
				return false;
			}
			private boolean moveNext_39() throws Exception {
				state = 41;				
				if (!var25_filter.moveNext()) {state = 40; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var25_filter.current()))))))))) {state = 39; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var25_filter.current()))))))))) {state = 39; return false; }
				var26_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var25_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_40() throws Exception {
				state = 37;				
				if( var25_filter != null ) { var25_filter.close(); var25_filter = null; }
				return false;
			}
			private boolean moveNext_41() throws Exception {
				state = 41;				
				if (!var26_filter.moveNext()) {state = 42; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var26_filter.current()))))))))) {state = 41; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Space", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq158_join(((com.altova.mapforce.IMFNode)(var26_filter.current())), closure.var2_shared, var24_Row)));
				pos++;
				return true;
			}
			private boolean moveNext_42() throws Exception {
				state = 39;				
				if( var26_filter != null ) { var26_filter.close(); var26_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var7_shared != null ) { var7_shared.close(); var7_shared = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var11_shared != null ) { var11_shared.close(); var11_shared = null; }
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				if( var15_shared != null ) { var15_shared.close(); var15_shared = null; }
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				if( var21_filter != null ) { var21_filter.close(); var21_filter = null; }
				if( var19_shared != null ) { var19_shared.close(); var19_shared = null; }
				if( var26_filter != null ) { var26_filter.close(); var26_filter = null; }
				if( var25_filter != null ) { var25_filter.close(); var25_filter = null; }
				if( var23_shared != null ) { var23_shared.close(); var23_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq94_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq94_join(com.altova.mapforce.IMFNode var1_cur_Cell, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_cur_Cell = var1_cur_Cell;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq94_join closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			public Enumerator(seq94_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PremisesName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_cur_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var4_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq11_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq12_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 3; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyLevels", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq95_join(closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var5_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyClassification", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreas", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq97_join(closure.var2_shared, closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				var6_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var6_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq13_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq14_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var7_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq105_join(((com.altova.mapforce.IMFNode)(var7_filter.current())), closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq95_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq95_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq95_join closure;
			IEnumerator var2_filter;
			IEnumerator var3_filter;
			java.lang.String var4_cast;
			public Enumerator(seq95_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq41_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq42_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				var4_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyLevel", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq96_seq_(var4_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq96_seq_ implements IEnumerable
	{
		java.lang.String var1_shared;
	
		public seq96_seq_(java.lang.String var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq96_seq_ closure;
			public Enumerator(seq96_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupantQuantityType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf8_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupantQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(closure.var1_shared))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq97_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq97_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq97_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			IEnumerator var8_filter;
			IEnumerator var5_filter;
			IEnumerator var9_filter;
			com.altova.mapforce.IEnumerable var6_filter;
			com.altova.mapforce.IEnumerable var7_filter;
			IEnumerator var10_shared;
			IEnumerator var11_filter;
			IEnumerator var12_filter;
			com.altova.mapforce.IEnumerable var13_filter;
			double var14_cast;
			com.altova.mapforce.IEnumerable var15_filter;
			public Enumerator(seq97_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 9;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var8_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq28_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq29_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				var6_filter = new com.altova.functions.Core.SequenceCache((new seq98_filter(closure.var2_shared)));
				if (!(com.altova.functions.Core.exists((new seq58_if_equal(((com.altova.mapforce.IMFNode)(var5_filter.current())), var6_filter))))) {state = 6; return false; }
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq98_filter(closure.var2_shared)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorArea", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq100_join(((com.altova.mapforce.IMFNode)(var5_filter.current())), var7_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var8_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq101_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq102_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 9; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var8_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var9_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 11; return false; }
				var10_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var10_shared.moveNext()) {state = 14; return false; }
				var11_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var10_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var10_shared != null ) { var10_shared.close(); var10_shared = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 17;				
				if (!var11_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq28_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq29_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 15; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 17;				
				if (!var12_filter.moveNext()) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 17; return false; }
				var13_filter = new com.altova.functions.Core.SequenceCache((new seq98_filter(closure.var2_shared)));
				if (!(com.altova.functions.Core.exists((new seq58_if_equal(((com.altova.mapforce.IMFNode)(var12_filter.current())), var13_filter))))) {state = 17; return false; }
				var14_cast = com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var9_filter.current()))));
				var15_filter = new com.altova.functions.Core.SequenceCache((new seq98_filter(closure.var2_shared)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorArea", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq103_seq_(((com.altova.mapforce.IMFNode)(var12_filter.current())), var14_cast, var15_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_18() throws Exception {
				state = 15;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var10_shared != null ) { var10_shared.close(); var10_shared = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq98_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq98_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq98_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq98_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq99_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq16_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq99_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq99_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq99_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq99_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq15_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq100_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq100_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq100_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			public Enumerator(seq100_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal((java.lang.String)com.altova.functions.Core.last((new seq60_if_equal(closure.var1_current, closure.var2_shared)))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf9_inputtoresult.eval(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq101_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq101_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq101_map closure;
			IEnumerator var2_r;
			public Enumerator(seq101_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(9L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq102_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq102_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq102_map closure;
			IEnumerator var2_r;
			public Enumerator(seq102_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(9L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq103_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		double var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq103_seq_(com.altova.mapforce.IMFNode var1_current, double var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq103_seq_ closure;
			public Enumerator(seq103_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf10_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(com.altova.CoreTypes.doubleToDecimal(closure.var2_shared), com.altova.CoreTypes.parseDecimal((java.lang.String)com.altova.functions.Core.last((new seq104_if_equal(closure.var1_current, closure.var3_shared))))))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq104_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq104_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq104_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var5_shared;
			IEnumerator var4_filter;
			IEnumerator var6_filter;
			public Enumerator(seq104_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 9;				
				var5_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var5_shared.moveNext()) {state = 10; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))), new java.math.BigDecimal("10.7639")));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq105_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq105_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq105_join closure;
			IEnumerator var3_filter;
			IEnumerator var5_filter;
			IEnumerator var4_filter;
			IEnumerator var7_filter;
			IEnumerator var6_filter;
			IEnumerator var9_filter;
			IEnumerator var8_filter;
			IEnumerator var11_filter;
			IEnumerator var10_filter;
			IEnumerator var12_filter;
			public Enumerator(seq105_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq106_seq_(closure.var1_current)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq73_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq74_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 8;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq107_seq_(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq35_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq36_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 13;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var7_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 10;				
				if (!var6_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq108_seq_(((com.altova.mapforce.IMFNode)(var6_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var7_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq71_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 18;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				var9_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var8_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq109_seq_(((com.altova.mapforce.IMFNode)(var8_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var9_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq66_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq67_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 18; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 23;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				var11_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 20;				
				if (!var10_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 20; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq110_seq_(((com.altova.mapforce.IMFNode)(var10_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if (!var11_filter.moveNext()) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq68_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq69_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 23; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 0;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 25;				
				if (!var12_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 25; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq111_seq_(((com.altova.mapforce.IMFNode)(var12_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq106_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq106_seq_(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq106_seq_ closure;
			public Enumerator(seq106_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Original intented use"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_current)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq107_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq107_seq_(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq107_seq_ closure;
			public Enumerator(seq107_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Number of PC\'s and/or Laptops"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_cur_n)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq108_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq108_seq_(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq108_seq_ closure;
			public Enumerator(seq108_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Use (hours/week)"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_cur_n)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq109_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq109_seq_(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq109_seq_ closure;
			public Enumerator(seq109_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Use (weeks/year)"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_cur_n)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq110_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq110_seq_(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq110_seq_ closure;
			public Enumerator(seq110_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Principle HVAC Type "));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_cur_n)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq111_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq111_seq_(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq111_seq_ closure;
			public Enumerator(seq111_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Principle Lighting Type "));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_cur_n)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq112_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq112_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq112_map closure;
			IEnumerator var2_n;
			public Enumerator(seq112_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(3L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq113_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq113_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq113_join closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			public Enumerator(seq113_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PremisesName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_current)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var4_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq11_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq12_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 3; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyLevels", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq114_join(closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var5_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyClassification", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreas", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq116_join(closure.var2_shared, closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				var6_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var6_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq13_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq14_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var7_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq124_join(((com.altova.mapforce.IMFNode)(var7_filter.current())), closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq114_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq114_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq114_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Cell;
			IEnumerator var4_filter;
			public Enumerator(seq114_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq41_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq42_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Cell).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyLevel", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq115_join(((com.altova.mapforce.IMFNode)(var4_filter.current())), var3_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq115_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq115_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq115_join closure;
			IEnumerator var3_filter;
			public Enumerator(seq115_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupantQuantityType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf8_inputtoresult.eval(com.altova.CoreTypes.nodeToString(closure.var1_current))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var3_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupantQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq116_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq116_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq116_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			IEnumerator var8_shared;
			IEnumerator var9_filter;
			IEnumerator var5_filter;
			com.altova.mapforce.IEnumerable var6_filter;
			IEnumerator var10_filter;
			com.altova.mapforce.IEnumerable var7_filter;
			com.altova.mapforce.IEnumerable var11_filter;
			IEnumerator var12_filter;
			com.altova.mapforce.IEnumerable var13_Cell;
			IEnumerator var14_filter;
			com.altova.mapforce.IEnumerable var15_filter;
			public Enumerator(seq116_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 9;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var8_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq28_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq29_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				var6_filter = new com.altova.functions.Core.SequenceCache((new seq117_filter(closure.var2_shared)));
				if (!(com.altova.functions.Core.exists((new seq119_if_equal(((com.altova.mapforce.IMFNode)(var5_filter.current())), var6_filter))))) {state = 6; return false; }
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq117_filter(closure.var2_shared)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorArea", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq120_join(((com.altova.mapforce.IMFNode)(var5_filter.current())), var7_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var8_shared.moveNext()) {state = 10; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var8_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var9_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq28_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq29_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 11; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var10_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 13; return false; }
				var11_filter = new com.altova.functions.Core.SequenceCache((new seq117_filter(closure.var2_shared)));
				if (!(com.altova.functions.Core.exists((new seq119_if_equal(((com.altova.mapforce.IMFNode)(var10_filter.current())), var11_filter))))) {state = 13; return false; }
				var12_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 17;				
				if (!var12_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq101_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq102_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 15; return false; }
				var13_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var12_filter.current()))));
				var14_filter = (var13_Cell).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 17;				
				if (!var14_filter.moveNext()) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 17; return false; }
				var15_filter = new com.altova.functions.Core.SequenceCache((new seq117_filter(closure.var2_shared)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorArea", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq122_join(((com.altova.mapforce.IMFNode)(var14_filter.current())), ((com.altova.mapforce.IMFNode)(var10_filter.current())), var13_Cell, var15_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_18() throws Exception {
				state = 15;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq117_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq117_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq117_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq117_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq118_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq16_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq118_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq118_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq118_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq118_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq15_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq119_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq119_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq119_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var5_shared;
			IEnumerator var4_filter;
			IEnumerator var6_filter;
			public Enumerator(seq119_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 9;				
				var5_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var5_shared.moveNext()) {state = 10; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))), new java.math.BigDecimal("10.7639")));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq120_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq120_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq120_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			public Enumerator(seq120_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal((java.lang.String)com.altova.functions.Core.last((new seq121_if_equal(closure.var1_current, closure.var2_shared)))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf9_inputtoresult.eval(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq121_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq121_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq121_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var5_shared;
			IEnumerator var4_filter;
			IEnumerator var6_filter;
			public Enumerator(seq121_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 9;				
				var5_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var5_shared.moveNext()) {state = 10; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))), new java.math.BigDecimal("10.7639")));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq122_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IEnumerable var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
	
		public seq122_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IEnumerable var3_shared, com.altova.mapforce.IEnumerable var4_shared)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq122_join closure;
			IEnumerator var5_filter;
			public Enumerator(seq122_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var5_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var5_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf10_inputtoresult.eval(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal((java.lang.String)com.altova.functions.Core.last((new seq123_if_equal(closure.var2_current, closure.var4_shared)))), com.altova.CoreTypes.doubleToDecimal(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(closure.var1_current)))))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq123_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq123_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq123_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var5_shared;
			IEnumerator var4_filter;
			IEnumerator var6_filter;
			public Enumerator(seq123_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 9;				
				var5_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var5_shared.moveNext()) {state = 10; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))), new java.math.BigDecimal("10.7639")));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq124_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq124_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq124_join closure;
			IEnumerator var3_filter;
			IEnumerator var5_filter;
			IEnumerator var4_filter;
			IEnumerator var7_filter;
			IEnumerator var6_filter;
			IEnumerator var9_filter;
			IEnumerator var8_filter;
			IEnumerator var11_filter;
			IEnumerator var10_filter;
			IEnumerator var12_filter;
			public Enumerator(seq124_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq106_seq_(closure.var1_current)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq73_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq74_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 8;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq107_seq_(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq35_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq36_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 13;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var7_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 10;				
				if (!var6_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq108_seq_(((com.altova.mapforce.IMFNode)(var6_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var7_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq71_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 18;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				var9_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var8_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq109_seq_(((com.altova.mapforce.IMFNode)(var8_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var9_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq66_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq67_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 18; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 23;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				var11_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 20;				
				if (!var10_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 20; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq110_seq_(((com.altova.mapforce.IMFNode)(var10_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if (!var11_filter.moveNext()) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq68_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq69_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 23; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 0;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 25;				
				if (!var12_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 25; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq111_seq_(((com.altova.mapforce.IMFNode)(var12_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq125_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq125_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq125_map closure;
			IEnumerator var2_n;
			public Enumerator(seq125_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(4L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq126_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq126_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq126_join closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			public Enumerator(seq126_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PremisesName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_current)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var4_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq11_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq12_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 3; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyLevels", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq127_join(closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var5_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyClassification", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreas", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq129_join(closure.var2_shared, closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				var6_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var6_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq13_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq14_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var7_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq135_join(((com.altova.mapforce.IMFNode)(var7_filter.current())), closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq127_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq127_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq127_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Cell;
			IEnumerator var4_filter;
			public Enumerator(seq127_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq41_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq42_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Cell).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyLevel", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq128_join(((com.altova.mapforce.IMFNode)(var4_filter.current())), var3_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq128_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq128_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq128_join closure;
			IEnumerator var3_filter;
			public Enumerator(seq128_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupantQuantityType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf8_inputtoresult.eval(com.altova.CoreTypes.nodeToString(closure.var1_current))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var3_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupantQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq129_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq129_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq129_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			IEnumerator var8_shared;
			IEnumerator var9_filter;
			IEnumerator var5_filter;
			com.altova.mapforce.IEnumerable var6_filter;
			IEnumerator var10_filter;
			com.altova.mapforce.IEnumerable var7_filter;
			com.altova.mapforce.IEnumerable var11_filter;
			IEnumerator var12_filter;
			com.altova.mapforce.IEnumerable var13_Cell;
			IEnumerator var14_filter;
			com.altova.mapforce.IEnumerable var15_filter;
			public Enumerator(seq129_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 9;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var8_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq28_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq29_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				var6_filter = new com.altova.functions.Core.SequenceCache((new seq117_filter(closure.var2_shared)));
				if (!(com.altova.functions.Core.exists((new seq130_if_equal(((com.altova.mapforce.IMFNode)(var5_filter.current())), var6_filter))))) {state = 6; return false; }
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq117_filter(closure.var2_shared)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorArea", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq131_join(((com.altova.mapforce.IMFNode)(var5_filter.current())), var7_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var8_shared.moveNext()) {state = 10; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var8_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var9_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq28_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq29_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 11; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var10_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 13; return false; }
				var11_filter = new com.altova.functions.Core.SequenceCache((new seq117_filter(closure.var2_shared)));
				if (!(com.altova.functions.Core.exists((new seq130_if_equal(((com.altova.mapforce.IMFNode)(var10_filter.current())), var11_filter))))) {state = 13; return false; }
				var12_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 17;				
				if (!var12_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq101_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq102_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 15; return false; }
				var13_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var12_filter.current()))));
				var14_filter = (var13_Cell).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 17;				
				if (!var14_filter.moveNext()) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 17; return false; }
				var15_filter = new com.altova.functions.Core.SequenceCache((new seq117_filter(closure.var2_shared)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorArea", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq133_join(((com.altova.mapforce.IMFNode)(var14_filter.current())), ((com.altova.mapforce.IMFNode)(var10_filter.current())), var13_Cell, var15_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_18() throws Exception {
				state = 15;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq130_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq130_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq130_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var5_shared;
			IEnumerator var4_filter;
			IEnumerator var6_filter;
			public Enumerator(seq130_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 9;				
				var5_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var5_shared.moveNext()) {state = 10; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))), new java.math.BigDecimal("10.7639")));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq131_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq131_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq131_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			public Enumerator(seq131_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal((java.lang.String)com.altova.functions.Core.last((new seq132_if_equal(closure.var1_current, closure.var2_shared)))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf9_inputtoresult.eval(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq132_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq132_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq132_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var5_shared;
			IEnumerator var4_filter;
			IEnumerator var6_filter;
			public Enumerator(seq132_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 9;				
				var5_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var5_shared.moveNext()) {state = 10; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))), new java.math.BigDecimal("10.7639")));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq133_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IEnumerable var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
	
		public seq133_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IEnumerable var3_shared, com.altova.mapforce.IEnumerable var4_shared)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq133_join closure;
			IEnumerator var5_filter;
			public Enumerator(seq133_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var5_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var5_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf10_inputtoresult.eval(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal((java.lang.String)com.altova.functions.Core.last((new seq134_if_equal(closure.var2_current, closure.var4_shared)))), com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(closure.var1_current))))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq134_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq134_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq134_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var5_shared;
			IEnumerator var4_filter;
			IEnumerator var6_filter;
			public Enumerator(seq134_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 9;				
				var5_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var5_shared.moveNext()) {state = 10; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))), new java.math.BigDecimal("10.7639")));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq135_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq135_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq135_join closure;
			IEnumerator var3_filter;
			IEnumerator var5_filter;
			IEnumerator var4_filter;
			IEnumerator var7_filter;
			IEnumerator var6_filter;
			IEnumerator var9_filter;
			IEnumerator var8_filter;
			IEnumerator var11_filter;
			IEnumerator var10_filter;
			IEnumerator var12_filter;
			public Enumerator(seq135_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq106_seq_(closure.var1_current)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq73_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq74_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 8;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq107_seq_(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq35_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq36_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 13;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var7_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 10;				
				if (!var6_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq108_seq_(((com.altova.mapforce.IMFNode)(var6_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var7_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq71_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 18;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				var9_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var8_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq109_seq_(((com.altova.mapforce.IMFNode)(var8_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var9_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq66_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq67_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 18; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 23;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				var11_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 20;				
				if (!var10_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 20; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq110_seq_(((com.altova.mapforce.IMFNode)(var10_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if (!var11_filter.moveNext()) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq68_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq69_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 23; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 0;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 25;				
				if (!var12_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 25; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq111_seq_(((com.altova.mapforce.IMFNode)(var12_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq136_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq136_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq136_map closure;
			IEnumerator var2_n;
			public Enumerator(seq136_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(5L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq137_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq137_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq137_join closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			public Enumerator(seq137_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PremisesName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_current)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var4_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq11_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq12_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 3; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyLevels", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq138_join(closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var5_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyClassification", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreas", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq140_join(closure.var2_shared, closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				var6_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var6_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq13_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq14_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var7_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq146_join(((com.altova.mapforce.IMFNode)(var7_filter.current())), closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq138_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq138_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq138_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Cell;
			IEnumerator var4_filter;
			public Enumerator(seq138_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq41_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq42_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Cell).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyLevel", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq139_join(((com.altova.mapforce.IMFNode)(var4_filter.current())), var3_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq139_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq139_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq139_join closure;
			IEnumerator var3_filter;
			public Enumerator(seq139_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupantQuantityType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf8_inputtoresult.eval(com.altova.CoreTypes.nodeToString(closure.var1_current))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var3_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupantQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq140_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq140_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq140_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			IEnumerator var8_shared;
			IEnumerator var9_filter;
			IEnumerator var5_filter;
			com.altova.mapforce.IEnumerable var6_filter;
			IEnumerator var10_filter;
			com.altova.mapforce.IEnumerable var7_filter;
			com.altova.mapforce.IEnumerable var11_filter;
			IEnumerator var12_filter;
			com.altova.mapforce.IEnumerable var13_Cell;
			IEnumerator var14_filter;
			com.altova.mapforce.IEnumerable var15_filter;
			public Enumerator(seq140_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 9;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var8_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq28_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq29_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				var6_filter = new com.altova.functions.Core.SequenceCache((new seq117_filter(closure.var2_shared)));
				if (!(com.altova.functions.Core.exists((new seq141_if_equal(((com.altova.mapforce.IMFNode)(var5_filter.current())), var6_filter))))) {state = 6; return false; }
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq117_filter(closure.var2_shared)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorArea", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq142_join(((com.altova.mapforce.IMFNode)(var5_filter.current())), var7_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var8_shared.moveNext()) {state = 10; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var8_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var9_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq28_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq29_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 11; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var10_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 13; return false; }
				var11_filter = new com.altova.functions.Core.SequenceCache((new seq117_filter(closure.var2_shared)));
				if (!(com.altova.functions.Core.exists((new seq141_if_equal(((com.altova.mapforce.IMFNode)(var10_filter.current())), var11_filter))))) {state = 13; return false; }
				var12_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 17;				
				if (!var12_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq101_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq102_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 15; return false; }
				var13_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var12_filter.current()))));
				var14_filter = (var13_Cell).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 17;				
				if (!var14_filter.moveNext()) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 17; return false; }
				var15_filter = new com.altova.functions.Core.SequenceCache((new seq117_filter(closure.var2_shared)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorArea", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq144_join(((com.altova.mapforce.IMFNode)(var14_filter.current())), ((com.altova.mapforce.IMFNode)(var10_filter.current())), var13_Cell, var15_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_18() throws Exception {
				state = 15;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq141_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq141_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq141_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var5_shared;
			IEnumerator var4_filter;
			IEnumerator var6_filter;
			public Enumerator(seq141_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 9;				
				var5_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var5_shared.moveNext()) {state = 10; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))), new java.math.BigDecimal("10.7639")));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq142_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq142_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq142_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			public Enumerator(seq142_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal((java.lang.String)com.altova.functions.Core.last((new seq143_if_equal(closure.var1_current, closure.var2_shared)))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf9_inputtoresult.eval(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq143_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq143_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq143_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var5_shared;
			IEnumerator var4_filter;
			IEnumerator var6_filter;
			public Enumerator(seq143_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 9;				
				var5_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var5_shared.moveNext()) {state = 10; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))), new java.math.BigDecimal("10.7639")));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq144_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IEnumerable var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
	
		public seq144_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IEnumerable var3_shared, com.altova.mapforce.IEnumerable var4_shared)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq144_join closure;
			IEnumerator var5_filter;
			public Enumerator(seq144_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var5_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var5_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf10_inputtoresult.eval(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal((java.lang.String)com.altova.functions.Core.last((new seq145_if_equal(closure.var2_current, closure.var4_shared)))), com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(closure.var1_current))))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq145_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq145_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq145_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var5_shared;
			IEnumerator var4_filter;
			IEnumerator var6_filter;
			public Enumerator(seq145_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 9;				
				var5_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var5_shared.moveNext()) {state = 10; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))), new java.math.BigDecimal("10.7639")));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq146_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq146_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq146_join closure;
			IEnumerator var3_filter;
			IEnumerator var5_filter;
			IEnumerator var4_filter;
			IEnumerator var7_filter;
			IEnumerator var6_filter;
			IEnumerator var9_filter;
			IEnumerator var8_filter;
			IEnumerator var11_filter;
			IEnumerator var10_filter;
			IEnumerator var12_filter;
			public Enumerator(seq146_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq106_seq_(closure.var1_current)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq73_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq74_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 8;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq107_seq_(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq35_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq36_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 13;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var7_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 10;				
				if (!var6_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq108_seq_(((com.altova.mapforce.IMFNode)(var6_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var7_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq71_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 18;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				var9_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var8_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq109_seq_(((com.altova.mapforce.IMFNode)(var8_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var9_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq66_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq67_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 18; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 23;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				var11_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 20;				
				if (!var10_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 20; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq110_seq_(((com.altova.mapforce.IMFNode)(var10_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if (!var11_filter.moveNext()) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq68_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq69_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 23; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 0;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 25;				
				if (!var12_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 25; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq111_seq_(((com.altova.mapforce.IMFNode)(var12_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq147_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq147_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq147_join closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			public Enumerator(seq147_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PremisesName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_current)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var4_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq11_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq12_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 3; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyLevels", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq148_join(closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var5_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyClassification", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreas", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq150_join(closure.var2_shared, closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				var6_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var6_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq13_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq14_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var7_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq156_join(((com.altova.mapforce.IMFNode)(var7_filter.current())), closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq148_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq148_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq148_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Cell;
			IEnumerator var4_filter;
			public Enumerator(seq148_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq41_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq42_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Cell).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyLevel", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq149_join(((com.altova.mapforce.IMFNode)(var4_filter.current())), var3_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq149_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq149_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq149_join closure;
			IEnumerator var3_filter;
			public Enumerator(seq149_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupantQuantityType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf8_inputtoresult.eval(com.altova.CoreTypes.nodeToString(closure.var1_current))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var3_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupantQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq150_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq150_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq150_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			IEnumerator var8_shared;
			IEnumerator var9_filter;
			IEnumerator var5_filter;
			com.altova.mapforce.IEnumerable var6_filter;
			IEnumerator var10_filter;
			com.altova.mapforce.IEnumerable var7_filter;
			com.altova.mapforce.IEnumerable var11_filter;
			IEnumerator var12_filter;
			com.altova.mapforce.IEnumerable var13_Cell;
			IEnumerator var14_filter;
			com.altova.mapforce.IEnumerable var15_filter;
			public Enumerator(seq150_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 9;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var8_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq28_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq29_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				var6_filter = new com.altova.functions.Core.SequenceCache((new seq117_filter(closure.var2_shared)));
				if (!(com.altova.functions.Core.exists((new seq151_if_equal(((com.altova.mapforce.IMFNode)(var5_filter.current())), var6_filter))))) {state = 6; return false; }
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq117_filter(closure.var2_shared)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorArea", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq152_join(((com.altova.mapforce.IMFNode)(var5_filter.current())), var7_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var8_shared.moveNext()) {state = 10; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var8_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var9_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq28_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq29_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 11; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var10_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 13; return false; }
				var11_filter = new com.altova.functions.Core.SequenceCache((new seq117_filter(closure.var2_shared)));
				if (!(com.altova.functions.Core.exists((new seq151_if_equal(((com.altova.mapforce.IMFNode)(var10_filter.current())), var11_filter))))) {state = 13; return false; }
				var12_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 17;				
				if (!var12_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq101_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq102_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 15; return false; }
				var13_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var12_filter.current()))));
				var14_filter = (var13_Cell).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 17;				
				if (!var14_filter.moveNext()) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 17; return false; }
				var15_filter = new com.altova.functions.Core.SequenceCache((new seq117_filter(closure.var2_shared)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorArea", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq154_join(((com.altova.mapforce.IMFNode)(var14_filter.current())), ((com.altova.mapforce.IMFNode)(var10_filter.current())), var13_Cell, var15_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_18() throws Exception {
				state = 15;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq151_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq151_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq151_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var5_shared;
			IEnumerator var4_filter;
			IEnumerator var6_filter;
			public Enumerator(seq151_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 9;				
				var5_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var5_shared.moveNext()) {state = 10; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(new java.math.BigDecimal("10.7639"), com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq152_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq152_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq152_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			public Enumerator(seq152_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal((java.lang.String)com.altova.functions.Core.last((new seq153_if_equal(closure.var1_current, closure.var2_shared)))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf9_inputtoresult.eval(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq153_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq153_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq153_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var5_shared;
			IEnumerator var4_filter;
			IEnumerator var6_filter;
			public Enumerator(seq153_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 9;				
				var5_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var5_shared.moveNext()) {state = 10; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(new java.math.BigDecimal("10.7639"), com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq154_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IEnumerable var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
	
		public seq154_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IEnumerable var3_shared, com.altova.mapforce.IEnumerable var4_shared)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq154_join closure;
			IEnumerator var5_filter;
			public Enumerator(seq154_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var5_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var5_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf10_inputtoresult.eval(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal((java.lang.String)com.altova.functions.Core.last((new seq155_if_equal(closure.var2_current, closure.var4_shared)))), com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(closure.var1_current))))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq155_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq155_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq155_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var5_shared;
			IEnumerator var4_filter;
			IEnumerator var6_filter;
			public Enumerator(seq155_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 9;				
				var5_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var5_shared.moveNext()) {state = 10; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(new java.math.BigDecimal("10.7639"), com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq156_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq156_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq156_join closure;
			IEnumerator var3_filter;
			IEnumerator var5_filter;
			IEnumerator var4_filter;
			IEnumerator var7_filter;
			IEnumerator var6_filter;
			IEnumerator var9_filter;
			IEnumerator var8_filter;
			IEnumerator var11_filter;
			IEnumerator var10_filter;
			IEnumerator var12_filter;
			public Enumerator(seq156_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq106_seq_(closure.var1_current)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq73_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq74_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 8;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq107_seq_(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq35_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq36_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 13;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var7_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 10;				
				if (!var6_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq108_seq_(((com.altova.mapforce.IMFNode)(var6_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var7_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq71_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 18;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				var9_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var8_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq109_seq_(((com.altova.mapforce.IMFNode)(var8_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var9_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq66_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq67_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 18; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 23;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				var11_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 20;				
				if (!var10_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 20; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq110_seq_(((com.altova.mapforce.IMFNode)(var10_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if (!var11_filter.moveNext()) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq68_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq69_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 23; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 0;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 25;				
				if (!var12_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 25; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq111_seq_(((com.altova.mapforce.IMFNode)(var12_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq157_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq157_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq157_map closure;
			IEnumerator var2_n;
			public Enumerator(seq157_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(7L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq158_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq158_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq158_join closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			public Enumerator(seq158_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PremisesName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_current)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var4_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq11_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq12_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 3; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyLevels", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq159_join(closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var5_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyClassification", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreas", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq161_join(closure.var2_shared, closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				var6_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var6_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq13_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq14_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var7_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq167_join(((com.altova.mapforce.IMFNode)(var7_filter.current())), closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq159_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq159_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq159_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Cell;
			IEnumerator var4_filter;
			public Enumerator(seq159_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq41_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq42_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Cell).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyLevel", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq160_join(((com.altova.mapforce.IMFNode)(var4_filter.current())), var3_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq160_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq160_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq160_join closure;
			IEnumerator var3_filter;
			public Enumerator(seq160_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupantQuantityType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf8_inputtoresult.eval(com.altova.CoreTypes.nodeToString(closure.var1_current))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var3_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupantQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq161_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq161_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq161_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			IEnumerator var8_shared;
			IEnumerator var9_filter;
			IEnumerator var5_filter;
			com.altova.mapforce.IEnumerable var6_filter;
			IEnumerator var10_filter;
			com.altova.mapforce.IEnumerable var7_filter;
			com.altova.mapforce.IEnumerable var11_filter;
			IEnumerator var12_filter;
			com.altova.mapforce.IEnumerable var13_Cell;
			IEnumerator var14_filter;
			com.altova.mapforce.IEnumerable var15_filter;
			public Enumerator(seq161_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 9;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var8_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq28_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq29_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				var6_filter = new com.altova.functions.Core.SequenceCache((new seq117_filter(closure.var2_shared)));
				if (!(com.altova.functions.Core.exists((new seq162_if_equal(((com.altova.mapforce.IMFNode)(var5_filter.current())), var6_filter))))) {state = 6; return false; }
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq117_filter(closure.var2_shared)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorArea", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq163_join(((com.altova.mapforce.IMFNode)(var5_filter.current())), var7_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var8_shared.moveNext()) {state = 10; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var8_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var9_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq28_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq29_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 11; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var10_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 13; return false; }
				var11_filter = new com.altova.functions.Core.SequenceCache((new seq117_filter(closure.var2_shared)));
				if (!(com.altova.functions.Core.exists((new seq162_if_equal(((com.altova.mapforce.IMFNode)(var10_filter.current())), var11_filter))))) {state = 13; return false; }
				var12_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 17;				
				if (!var12_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq101_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq102_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 15; return false; }
				var13_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var12_filter.current()))));
				var14_filter = (var13_Cell).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 17;				
				if (!var14_filter.moveNext()) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 17; return false; }
				var15_filter = new com.altova.functions.Core.SequenceCache((new seq117_filter(closure.var2_shared)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorArea", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq165_join(((com.altova.mapforce.IMFNode)(var14_filter.current())), ((com.altova.mapforce.IMFNode)(var10_filter.current())), var13_Cell, var15_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_18() throws Exception {
				state = 15;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq162_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq162_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq162_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var5_shared;
			IEnumerator var4_filter;
			IEnumerator var6_filter;
			public Enumerator(seq162_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 9;				
				var5_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var5_shared.moveNext()) {state = 10; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))), new java.math.BigDecimal("10.7639")));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq163_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq163_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq163_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			public Enumerator(seq163_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal((java.lang.String)com.altova.functions.Core.last((new seq164_if_equal(closure.var1_current, closure.var2_shared)))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf9_inputtoresult.eval(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq164_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq164_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq164_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var5_shared;
			IEnumerator var4_filter;
			IEnumerator var6_filter;
			public Enumerator(seq164_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 9;				
				var5_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var5_shared.moveNext()) {state = 10; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))), new java.math.BigDecimal("10.7639")));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq165_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IEnumerable var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
	
		public seq165_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IEnumerable var3_shared, com.altova.mapforce.IEnumerable var4_shared)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq165_join closure;
			IEnumerator var5_filter;
			public Enumerator(seq165_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var5_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var5_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf10_inputtoresult.eval(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal((java.lang.String)com.altova.functions.Core.last((new seq166_if_equal(closure.var2_current, closure.var4_shared)))), com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(closure.var1_current))))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq166_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq166_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq166_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var5_shared;
			IEnumerator var4_filter;
			IEnumerator var6_filter;
			public Enumerator(seq166_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 9;				
				var5_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var5_shared.moveNext()) {state = 10; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))), new java.math.BigDecimal("10.7639")));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq167_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq167_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq167_join closure;
			IEnumerator var3_filter;
			IEnumerator var5_filter;
			IEnumerator var4_filter;
			IEnumerator var7_filter;
			IEnumerator var6_filter;
			IEnumerator var9_filter;
			IEnumerator var8_filter;
			IEnumerator var11_filter;
			IEnumerator var10_filter;
			IEnumerator var12_filter;
			public Enumerator(seq167_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq106_seq_(closure.var1_current)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq73_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq74_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 8;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq107_seq_(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq35_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq36_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 13;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var7_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 10;				
				if (!var6_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq108_seq_(((com.altova.mapforce.IMFNode)(var6_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var7_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq71_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 18;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				var9_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var8_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq109_seq_(((com.altova.mapforce.IMFNode)(var8_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var9_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq66_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq67_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 18; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 23;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				var11_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 20;				
				if (!var10_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 20; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq110_seq_(((com.altova.mapforce.IMFNode)(var10_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if (!var11_filter.moveNext()) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq68_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq69_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 23; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 0;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 25;				
				if (!var12_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 25; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq111_seq_(((com.altova.mapforce.IMFNode)(var12_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq168_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
		com.altova.mapforce.IEnumerable var5_shared;
		com.altova.mapforce.IEnumerable var6_shared;
	
		public seq168_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared, com.altova.mapforce.IEnumerable var4_shared, com.altova.mapforce.IEnumerable var5_shared, com.altova.mapforce.IEnumerable var6_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
			this.var6_shared = var6_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq168_join closure;
			IEnumerator var7_shared;
			IEnumerator var8_filter;
			IEnumerator var10_shared;
			IEnumerator var9_filter;
			IEnumerator var11_filter;
			IEnumerator var12_filter;
			IEnumerator var14_filter;
			IEnumerator var13_filter;
			IEnumerator var15_filter;
			public Enumerator(seq168_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var7_shared = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var7_shared.moveNext()) {state = 3; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var7_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 9;				
				if( var7_shared != null ) { var7_shared.close(); var7_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq172_join(closure.var1_current, closure.var5_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var8_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq28_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq29_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 4; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var8_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var9_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 6; return false; }
				if (!(com.altova.functions.Core.exists((new seq169_if_equal(((com.altova.mapforce.IMFNode)(var9_filter.current())), closure.var2_shared))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq170_seq_(((com.altova.mapforce.IMFNode)(var9_filter.current())), closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				var10_shared = (closure.var6_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var10_shared.moveNext()) {state = 11; return false; }
				var11_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var10_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 15;				
				if( var10_shared != null ) { var10_shared.close(); var10_shared = null; }
				var12_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var11_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq173_join(((com.altova.mapforce.IMFNode)(var11_filter.current())), closure.var6_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 17;				
				if (!var12_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq174_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq175_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 15; return false; }
				var13_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var12_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 20;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				var14_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 17;				
				if (!var13_filter.moveNext()) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 17; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq176_seq_(((com.altova.mapforce.IMFNode)(var13_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_18() throws Exception {
				state = 15;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 22;				
				if (!var14_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq177_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq178_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 20; return false; }
				var15_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var14_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 0;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 22;				
				if (!var15_filter.moveNext()) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 22; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq179_seq_(((com.altova.mapforce.IMFNode)(var15_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_23() throws Exception {
				state = 20;				
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_shared != null ) { var7_shared.close(); var7_shared = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var10_shared != null ) { var10_shared.close(); var10_shared = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq169_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq169_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq169_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var6_shared;
			IEnumerator var4_filter;
			IEnumerator var7_filter;
			IEnumerator var5_filter;
			IEnumerator var8_filter;
			public Enumerator(seq169_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 11;				
				var6_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq101_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq102_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var6_shared.moveNext()) {state = 12; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var7_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq101_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq102_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var8_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(new java.math.BigDecimal("10.7639"), com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq170_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq170_seq_(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq170_seq_ closure;
			public Enumerator(seq170_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Above grade wall common area with other conditioned buildings (ft2)"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq171_if_equal(closure.var1_current, closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq171_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq171_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq171_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var6_shared;
			IEnumerator var4_filter;
			IEnumerator var7_filter;
			IEnumerator var5_filter;
			IEnumerator var8_filter;
			public Enumerator(seq171_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 11;				
				var6_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq101_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq102_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var6_shared.moveNext()) {state = 12; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var7_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq101_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq102_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var8_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(new java.math.BigDecimal("10.7639"), com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq172_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq172_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq172_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			public Enumerator(seq172_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_current)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq173_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq173_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq173_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			public Enumerator(seq173_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_current)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq174_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq174_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq174_map closure;
			IEnumerator var2_r;
			public Enumerator(seq174_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(34L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq175_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq175_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq175_map closure;
			IEnumerator var2_r;
			public Enumerator(seq175_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(34L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq176_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq176_seq_(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq176_seq_ closure;
			public Enumerator(seq176_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Typical occupancy (hrs/wk)"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_cur_n)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq177_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq177_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq177_map closure;
			IEnumerator var2_r;
			public Enumerator(seq177_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(35L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq178_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq178_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq178_map closure;
			IEnumerator var2_r;
			public Enumerator(seq178_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(35L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq179_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq179_seq_(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq179_seq_ closure;
			public Enumerator(seq179_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Typical occupancy (wks/yr)"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_cur_n)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq180_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq180_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq180_join closure;
			IEnumerator var3_shared;
			com.altova.mapforce.IEnumerable var4_Worksheet;
			IEnumerator var5_filter;
			IEnumerator var9_shared;
			IEnumerator var10_filter;
			IEnumerator var6_filter;
			IEnumerator var14_shared;
			com.altova.mapforce.IEnumerable var11_filter;
			com.altova.mapforce.IEnumerable var15_Worksheet;
			IEnumerator var12_filter;
			IEnumerator var16_filter;
			IEnumerator var20_shared;
			IEnumerator var7_filter;
			com.altova.mapforce.IEnumerable var21_Worksheet;
			IEnumerator var13_filter;
			IEnumerator var17_filter;
			IEnumerator var22_filter;
			IEnumerator var25_shared;
			com.altova.mapforce.IEnumerable var8_filter;
			com.altova.mapforce.IEnumerable var26_Worksheet;
			IEnumerator var23_filter;
			IEnumerator var30_shared;
			IEnumerator var27_filter;
			IEnumerator var18_filter;
			com.altova.mapforce.IEnumerable var31_Worksheet;
			IEnumerator var28_filter;
			IEnumerator var35_shared;
			IEnumerator var32_filter;
			com.altova.mapforce.IEnumerable var19_filter;
			IEnumerator var24_filter;
			com.altova.mapforce.IEnumerable var36_Worksheet;
			IEnumerator var33_filter;
			IEnumerator var37_filter;
			IEnumerator var40_shared;
			IEnumerator var29_filter;
			com.altova.mapforce.IEnumerable var41_Worksheet;
			IEnumerator var38_filter;
			IEnumerator var42_filter;
			IEnumerator var45_shared;
			IEnumerator var34_filter;
			com.altova.mapforce.IEnumerable var46_Worksheet;
			IEnumerator var43_filter;
			IEnumerator var47_filter;
			IEnumerator var56_shared;
			IEnumerator var39_filter;
			com.altova.mapforce.IEnumerable var57_Worksheet;
			com.altova.mapforce.IEnumerable var48_Row;
			IEnumerator var58_filter;
			IEnumerator var61_shared;
			IEnumerator var44_filter;
			IEnumerator var49_filter;
			com.altova.mapforce.IEnumerable var62_Worksheet;
			IEnumerator var59_filter;
			IEnumerator var66_shared;
			IEnumerator var63_filter;
			IEnumerator var50_filter;
			com.altova.mapforce.IEnumerable var67_Worksheet;
			IEnumerator var64_filter;
			IEnumerator var68_filter;
			IEnumerator var72_shared;
			IEnumerator var60_filter;
			com.altova.mapforce.IEnumerable var51_filter;
			com.altova.mapforce.IEnumerable var73_Worksheet;
			IEnumerator var52_shared;
			IEnumerator var69_filter;
			IEnumerator var74_filter;
			IEnumerator var65_filter;
			IEnumerator var79_shared;
			IEnumerator var53_filter;
			IEnumerator var75_filter;
			com.altova.mapforce.IEnumerable var80_Worksheet;
			IEnumerator var70_filter;
			IEnumerator var81_filter;
			IEnumerator var85_shared;
			IEnumerator var54_shared;
			com.altova.mapforce.IEnumerable var86_Worksheet;
			IEnumerator var55_filter;
			com.altova.mapforce.IEnumerable var71_filter;
			IEnumerator var76_filter;
			IEnumerator var94_shared;
			IEnumerator var82_filter;
			IEnumerator var87_filter;
			com.altova.mapforce.IEnumerable var95_Worksheet;
			com.altova.mapforce.IEnumerable var77_filter;
			IEnumerator var99_shared;
			IEnumerator var96_filter;
			IEnumerator var88_filter;
			com.altova.mapforce.IEnumerable var78_filter;
			IEnumerator var83_filter;
			com.altova.mapforce.IEnumerable var100_Worksheet;
			IEnumerator var97_filter;
			IEnumerator var101_filter;
			IEnumerator var104_shared;
			IEnumerator var89_filter;
			com.altova.mapforce.IEnumerable var84_filter;
			com.altova.mapforce.IEnumerable var105_Worksheet;
			IEnumerator var102_filter;
			IEnumerator var106_filter;
			IEnumerator var109_shared;
			IEnumerator var90_filter;
			IEnumerator var98_filter;
			IEnumerator var110_filter;
			IEnumerator var107_filter;
			IEnumerator var114_shared;
			IEnumerator var91_filter;
			IEnumerator var103_filter;
			IEnumerator var111_filter;
			com.altova.mapforce.IEnumerable var115_Worksheet;
			IEnumerator var116_filter;
			IEnumerator var119_shared;
			IEnumerator var108_filter;
			IEnumerator var92_filter;
			com.altova.mapforce.IEnumerable var120_Worksheet;
			IEnumerator var112_filter;
			IEnumerator var117_filter;
			IEnumerator var121_filter;
			com.altova.mapforce.IEnumerable var93_vmf22_inputtoresult;
			java.lang.String var113_cast;
			IEnumerator var122_filter;
			IEnumerator var118_filter;
			IEnumerator var123_filter;
			public Enumerator(seq180_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 32:	if (moveNext_32()) return true; break;
					case 33:	if (moveNext_33()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
					case 35:	if (moveNext_35()) return true; break;
					case 36:	if (moveNext_36()) return true; break;
					case 38:	if (moveNext_38()) return true; break;
					case 39:	if (moveNext_39()) return true; break;
					case 40:	if (moveNext_40()) return true; break;
					case 41:	if (moveNext_41()) return true; break;
					case 42:	if (moveNext_42()) return true; break;
					case 43:	if (moveNext_43()) return true; break;
					case 44:	if (moveNext_44()) return true; break;
					case 45:	if (moveNext_45()) return true; break;
					case 47:	if (moveNext_47()) return true; break;
					case 48:	if (moveNext_48()) return true; break;
					case 49:	if (moveNext_49()) return true; break;
					case 50:	if (moveNext_50()) return true; break;
					case 51:	if (moveNext_51()) return true; break;
					case 52:	if (moveNext_52()) return true; break;
					case 53:	if (moveNext_53()) return true; break;
					case 54:	if (moveNext_54()) return true; break;
					case 56:	if (moveNext_56()) return true; break;
					case 57:	if (moveNext_57()) return true; break;
					case 58:	if (moveNext_58()) return true; break;
					case 59:	if (moveNext_59()) return true; break;
					case 60:	if (moveNext_60()) return true; break;
					case 61:	if (moveNext_61()) return true; break;
					case 62:	if (moveNext_62()) return true; break;
					case 63:	if (moveNext_63()) return true; break;
					case 65:	if (moveNext_65()) return true; break;
					case 66:	if (moveNext_66()) return true; break;
					case 67:	if (moveNext_67()) return true; break;
					case 68:	if (moveNext_68()) return true; break;
					case 69:	if (moveNext_69()) return true; break;
					case 70:	if (moveNext_70()) return true; break;
					case 71:	if (moveNext_71()) return true; break;
					case 72:	if (moveNext_72()) return true; break;
					case 74:	if (moveNext_74()) return true; break;
					case 75:	if (moveNext_75()) return true; break;
					case 76:	if (moveNext_76()) return true; break;
					case 77:	if (moveNext_77()) return true; break;
					case 78:	if (moveNext_78()) return true; break;
					case 79:	if (moveNext_79()) return true; break;
					case 80:	if (moveNext_80()) return true; break;
					case 81:	if (moveNext_81()) return true; break;
					case 82:	if (moveNext_82()) return true; break;
					case 83:	if (moveNext_83()) return true; break;
					case 84:	if (moveNext_84()) return true; break;
					case 85:	if (moveNext_85()) return true; break;
					case 86:	if (moveNext_86()) return true; break;
					case 87:	if (moveNext_87()) return true; break;
					case 88:	if (moveNext_88()) return true; break;
					case 89:	if (moveNext_89()) return true; break;
					case 91:	if (moveNext_91()) return true; break;
					case 92:	if (moveNext_92()) return true; break;
					case 93:	if (moveNext_93()) return true; break;
					case 94:	if (moveNext_94()) return true; break;
					case 95:	if (moveNext_95()) return true; break;
					case 96:	if (moveNext_96()) return true; break;
					case 97:	if (moveNext_97()) return true; break;
					case 98:	if (moveNext_98()) return true; break;
					case 100:	if (moveNext_100()) return true; break;
					case 101:	if (moveNext_101()) return true; break;
					case 102:	if (moveNext_102()) return true; break;
					case 103:	if (moveNext_103()) return true; break;
					case 104:	if (moveNext_104()) return true; break;
					case 105:	if (moveNext_105()) return true; break;
					case 106:	if (moveNext_106()) return true; break;
					case 107:	if (moveNext_107()) return true; break;
					case 109:	if (moveNext_109()) return true; break;
					case 110:	if (moveNext_110()) return true; break;
					case 111:	if (moveNext_111()) return true; break;
					case 112:	if (moveNext_112()) return true; break;
					case 113:	if (moveNext_113()) return true; break;
					case 114:	if (moveNext_114()) return true; break;
					case 115:	if (moveNext_115()) return true; break;
					case 116:	if (moveNext_116()) return true; break;
					case 118:	if (moveNext_118()) return true; break;
					case 119:	if (moveNext_119()) return true; break;
					case 120:	if (moveNext_120()) return true; break;
					case 121:	if (moveNext_121()) return true; break;
					case 122:	if (moveNext_122()) return true; break;
					case 123:	if (moveNext_123()) return true; break;
					case 124:	if (moveNext_124()) return true; break;
					case 125:	if (moveNext_125()) return true; break;
					case 127:	if (moveNext_127()) return true; break;
					case 128:	if (moveNext_128()) return true; break;
					case 129:	if (moveNext_129()) return true; break;
					case 130:	if (moveNext_130()) return true; break;
					case 131:	if (moveNext_131()) return true; break;
					case 132:	if (moveNext_132()) return true; break;
					case 133:	if (moveNext_133()) return true; break;
					case 134:	if (moveNext_134()) return true; break;
					case 135:	if (moveNext_135()) return true; break;
					case 137:	if (moveNext_137()) return true; break;
					case 138:	if (moveNext_138()) return true; break;
					case 139:	if (moveNext_139()) return true; break;
					case 140:	if (moveNext_140()) return true; break;
					case 141:	if (moveNext_141()) return true; break;
					case 142:	if (moveNext_142()) return true; break;
					case 143:	if (moveNext_143()) return true; break;
					case 144:	if (moveNext_144()) return true; break;
					case 145:	if (moveNext_145()) return true; break;
					case 146:	if (moveNext_146()) return true; break;
					case 147:	if (moveNext_147()) return true; break;
					case 148:	if (moveNext_148()) return true; break;
					case 149:	if (moveNext_149()) return true; break;
					case 150:	if (moveNext_150()) return true; break;
					case 152:	if (moveNext_152()) return true; break;
					case 153:	if (moveNext_153()) return true; break;
					case 154:	if (moveNext_154()) return true; break;
					case 155:	if (moveNext_155()) return true; break;
					case 156:	if (moveNext_156()) return true; break;
					case 157:	if (moveNext_157()) return true; break;
					case 158:	if (moveNext_158()) return true; break;
					case 159:	if (moveNext_159()) return true; break;
					case 161:	if (moveNext_161()) return true; break;
					case 162:	if (moveNext_162()) return true; break;
					case 163:	if (moveNext_163()) return true; break;
					case 164:	if (moveNext_164()) return true; break;
					case 165:	if (moveNext_165()) return true; break;
					case 166:	if (moveNext_166()) return true; break;
					case 167:	if (moveNext_167()) return true; break;
					case 168:	if (moveNext_168()) return true; break;
					case 170:	if (moveNext_170()) return true; break;
					case 171:	if (moveNext_171()) return true; break;
					case 172:	if (moveNext_172()) return true; break;
					case 173:	if (moveNext_173()) return true; break;
					case 174:	if (moveNext_174()) return true; break;
					case 175:	if (moveNext_175()) return true; break;
					case 176:	if (moveNext_176()) return true; break;
					case 177:	if (moveNext_177()) return true; break;
					case 179:	if (moveNext_179()) return true; break;
					case 180:	if (moveNext_180()) return true; break;
					case 181:	if (moveNext_181()) return true; break;
					case 182:	if (moveNext_182()) return true; break;
					case 183:	if (moveNext_183()) return true; break;
					case 184:	if (moveNext_184()) return true; break;
					case 185:	if (moveNext_185()) return true; break;
					case 186:	if (moveNext_186()) return true; break;
					case 188:	if (moveNext_188()) return true; break;
					case 189:	if (moveNext_189()) return true; break;
					case 190:	if (moveNext_190()) return true; break;
					case 191:	if (moveNext_191()) return true; break;
					case 192:	if (moveNext_192()) return true; break;
					case 193:	if (moveNext_193()) return true; break;
					case 194:	if (moveNext_194()) return true; break;
					case 195:	if (moveNext_195()) return true; break;
					case 197:	if (moveNext_197()) return true; break;
					case 198:	if (moveNext_198()) return true; break;
					case 199:	if (moveNext_199()) return true; break;
					case 200:	if (moveNext_200()) return true; break;
					case 201:	if (moveNext_201()) return true; break;
					case 202:	if (moveNext_202()) return true; break;
					case 203:	if (moveNext_203()) return true; break;
					case 204:	if (moveNext_204()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current()))));
				var5_filter = (var4_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 11;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var9_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq6_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 4; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq18_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq19_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var7_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 8; return false; }
				var8_filter = new com.altova.functions.Core.SequenceCache((new seq181_filter(var4_Worksheet)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("HVACSystems", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("HVACSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq183_join(var4_Worksheet, var8_filter)))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var9_shared.moveNext()) {state = 12; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var9_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 20;				
				if( var9_shared != null ) { var9_shared.close(); var9_shared = null; }
				var14_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var10_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq401_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 13; return false; }
				var11_filter = new com.altova.functions.Core.SequenceCache((new seq402_filter(((com.altova.mapforce.IMFNode)(var10_filter.current())))));
				var12_filter = (var11_filter).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 17;				
				if (!var12_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq12_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 15; return false; }
				var13_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var12_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 17;				
				if (!var13_filter.moveNext()) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 17; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("LightingSystems", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq403_join(var11_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_18() throws Exception {
				state = 15;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 22;				
				if (!var14_shared.moveNext()) {state = 21; return false; }
				var15_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var14_shared.current()))));
				var16_filter = (var15_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 29;				
				if( var14_shared != null ) { var14_shared.close(); var14_shared = null; }
				var20_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 24;				
				if (!var16_filter.moveNext()) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq6_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 22; return false; }
				var17_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var16_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 20;				
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 26;				
				if (!var17_filter.moveNext()) {state = 25; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq18_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq19_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 24; return false; }
				var18_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var17_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 22;				
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 26;				
				if (!var18_filter.moveNext()) {state = 27; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))))) {state = 26; return false; }
				var19_filter = new com.altova.functions.Core.SequenceCache((new seq409_filter(var15_Worksheet)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("DomesticHotWaterSystems", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("DomesticHotWaterSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq410_join(var15_Worksheet, var19_filter)))));
				pos++;
				return true;
			}
			private boolean moveNext_27() throws Exception {
				state = 24;				
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				return false;
			}
			private boolean moveNext_29() throws Exception {
				state = 31;				
				if (!var20_shared.moveNext()) {state = 30; return false; }
				var21_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var20_shared.current()))));
				var22_filter = (var21_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_30() throws Exception {
				state = 38;				
				if( var20_shared != null ) { var20_shared.close(); var20_shared = null; }
				var25_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_31() throws Exception {
				state = 33;				
				if (!var22_filter.moveNext()) {state = 32; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq182_map(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))))) {state = 31; return false; }
				var23_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var22_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_32() throws Exception {
				state = 29;				
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				return false;
			}
			private boolean moveNext_33() throws Exception {
				state = 35;				
				if (!var23_filter.moveNext()) {state = 34; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq11_map(((com.altova.mapforce.IMFNode)(var23_filter.current()))))))))) {state = 33; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq12_map(((com.altova.mapforce.IMFNode)(var23_filter.current()))))))))) {state = 33; return false; }
				var24_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var23_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_34() throws Exception {
				state = 31;				
				if( var23_filter != null ) { var23_filter.close(); var23_filter = null; }
				return false;
			}
			private boolean moveNext_35() throws Exception {
				state = 35;				
				if (!var24_filter.moveNext()) {state = 36; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var24_filter.current()))))))))) {state = 35; return false; }
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var24_filter.current()))), com.altova.CoreTypes.decimalToString(new java.math.BigDecimal("0.5"))))) {state = 35; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CookingSystems", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq452_join(var21_Worksheet)));
				pos++;
				return true;
			}
			private boolean moveNext_36() throws Exception {
				state = 33;				
				if( var24_filter != null ) { var24_filter.close(); var24_filter = null; }
				return false;
			}
			private boolean moveNext_38() throws Exception {
				state = 40;				
				if (!var25_shared.moveNext()) {state = 39; return false; }
				var26_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var25_shared.current()))));
				var27_filter = (var26_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_39() throws Exception {
				state = 47;				
				if( var25_shared != null ) { var25_shared.close(); var25_shared = null; }
				var30_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_40() throws Exception {
				state = 42;				
				if (!var27_filter.moveNext()) {state = 41; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq182_map(((com.altova.mapforce.IMFNode)(var27_filter.current()))))))))) {state = 40; return false; }
				var28_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var27_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_41() throws Exception {
				state = 38;				
				if( var27_filter != null ) { var27_filter.close(); var27_filter = null; }
				return false;
			}
			private boolean moveNext_42() throws Exception {
				state = 44;				
				if (!var28_filter.moveNext()) {state = 43; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq13_map(((com.altova.mapforce.IMFNode)(var28_filter.current()))))))))) {state = 42; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq14_map(((com.altova.mapforce.IMFNode)(var28_filter.current()))))))))) {state = 42; return false; }
				var29_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var28_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_43() throws Exception {
				state = 40;				
				if( var28_filter != null ) { var28_filter.close(); var28_filter = null; }
				return false;
			}
			private boolean moveNext_44() throws Exception {
				state = 44;				
				if (!var29_filter.moveNext()) {state = 45; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var29_filter.current()))))))))) {state = 44; return false; }
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var29_filter.current()))), com.altova.CoreTypes.decimalToString(new java.math.BigDecimal("0.5"))))) {state = 44; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RefrigerationSystems", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq454_join(var26_Worksheet)));
				pos++;
				return true;
			}
			private boolean moveNext_45() throws Exception {
				state = 42;				
				if( var29_filter != null ) { var29_filter.close(); var29_filter = null; }
				return false;
			}
			private boolean moveNext_47() throws Exception {
				state = 49;				
				if (!var30_shared.moveNext()) {state = 48; return false; }
				var31_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var30_shared.current()))));
				var32_filter = (var31_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_48() throws Exception {
				state = 56;				
				if( var30_shared != null ) { var30_shared.close(); var30_shared = null; }
				var35_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_49() throws Exception {
				state = 51;				
				if (!var32_filter.moveNext()) {state = 50; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq182_map(((com.altova.mapforce.IMFNode)(var32_filter.current()))))))))) {state = 49; return false; }
				var33_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var32_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_50() throws Exception {
				state = 47;				
				if( var32_filter != null ) { var32_filter.close(); var32_filter = null; }
				return false;
			}
			private boolean moveNext_51() throws Exception {
				state = 53;				
				if (!var33_filter.moveNext()) {state = 52; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq15_map(((com.altova.mapforce.IMFNode)(var33_filter.current()))))))))) {state = 51; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq16_map(((com.altova.mapforce.IMFNode)(var33_filter.current()))))))))) {state = 51; return false; }
				var34_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var33_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_52() throws Exception {
				state = 49;				
				if( var33_filter != null ) { var33_filter.close(); var33_filter = null; }
				return false;
			}
			private boolean moveNext_53() throws Exception {
				state = 53;				
				if (!var34_filter.moveNext()) {state = 54; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var34_filter.current()))))))))) {state = 53; return false; }
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var34_filter.current()))), com.altova.CoreTypes.decimalToString(new java.math.BigDecimal("0.5"))))) {state = 53; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("DishwasherSystems", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq459_join(var31_Worksheet)));
				pos++;
				return true;
			}
			private boolean moveNext_54() throws Exception {
				state = 51;				
				if( var34_filter != null ) { var34_filter.close(); var34_filter = null; }
				return false;
			}
			private boolean moveNext_56() throws Exception {
				state = 58;				
				if (!var35_shared.moveNext()) {state = 57; return false; }
				var36_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var35_shared.current()))));
				var37_filter = (var36_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_57() throws Exception {
				state = 65;				
				if( var35_shared != null ) { var35_shared.close(); var35_shared = null; }
				var40_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_58() throws Exception {
				state = 60;				
				if (!var37_filter.moveNext()) {state = 59; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq182_map(((com.altova.mapforce.IMFNode)(var37_filter.current()))))))))) {state = 58; return false; }
				var38_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var37_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_59() throws Exception {
				state = 56;				
				if( var37_filter != null ) { var37_filter.close(); var37_filter = null; }
				return false;
			}
			private boolean moveNext_60() throws Exception {
				state = 62;				
				if (!var38_filter.moveNext()) {state = 61; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq101_map(((com.altova.mapforce.IMFNode)(var38_filter.current()))))))))) {state = 60; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq102_map(((com.altova.mapforce.IMFNode)(var38_filter.current()))))))))) {state = 60; return false; }
				var39_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var38_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_61() throws Exception {
				state = 58;				
				if( var38_filter != null ) { var38_filter.close(); var38_filter = null; }
				return false;
			}
			private boolean moveNext_62() throws Exception {
				state = 62;				
				if (!var39_filter.moveNext()) {state = 63; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var39_filter.current()))))))))) {state = 62; return false; }
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var39_filter.current()))), com.altova.CoreTypes.decimalToString(new java.math.BigDecimal("0.5"))))) {state = 62; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("LaundrySystems", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq461_join(var36_Worksheet)));
				pos++;
				return true;
			}
			private boolean moveNext_63() throws Exception {
				state = 60;				
				if( var39_filter != null ) { var39_filter.close(); var39_filter = null; }
				return false;
			}
			private boolean moveNext_65() throws Exception {
				state = 67;				
				if (!var40_shared.moveNext()) {state = 66; return false; }
				var41_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var40_shared.current()))));
				var42_filter = (var41_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_66() throws Exception {
				state = 74;				
				if( var40_shared != null ) { var40_shared.close(); var40_shared = null; }
				var45_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_67() throws Exception {
				state = 69;				
				if (!var42_filter.moveNext()) {state = 68; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq182_map(((com.altova.mapforce.IMFNode)(var42_filter.current()))))))))) {state = 67; return false; }
				var43_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var42_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_68() throws Exception {
				state = 65;				
				if( var42_filter != null ) { var42_filter.close(); var42_filter = null; }
				return false;
			}
			private boolean moveNext_69() throws Exception {
				state = 71;				
				if (!var43_filter.moveNext()) {state = 70; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq41_map(((com.altova.mapforce.IMFNode)(var43_filter.current()))))))))) {state = 69; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq42_map(((com.altova.mapforce.IMFNode)(var43_filter.current()))))))))) {state = 69; return false; }
				var44_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var43_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_70() throws Exception {
				state = 67;				
				if( var43_filter != null ) { var43_filter.close(); var43_filter = null; }
				return false;
			}
			private boolean moveNext_71() throws Exception {
				state = 71;				
				if (!var44_filter.moveNext()) {state = 72; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var44_filter.current()))))))))) {state = 71; return false; }
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var44_filter.current()))), com.altova.CoreTypes.decimalToString(new java.math.BigDecimal("0.5"))))) {state = 71; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PumpSystems", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq463_join(var41_Worksheet)));
				pos++;
				return true;
			}
			private boolean moveNext_72() throws Exception {
				state = 69;				
				if( var44_filter != null ) { var44_filter.close(); var44_filter = null; }
				return false;
			}
			private boolean moveNext_74() throws Exception {
				state = 76;				
				if (!var45_shared.moveNext()) {state = 75; return false; }
				var46_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var45_shared.current()))));
				var47_filter = (var46_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_75() throws Exception {
				state = 91;				
				if( var45_shared != null ) { var45_shared.close(); var45_shared = null; }
				var56_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_76() throws Exception {
				state = 78;				
				if (!var47_filter.moveNext()) {state = 77; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq182_map(((com.altova.mapforce.IMFNode)(var47_filter.current()))))))))) {state = 76; return false; }
				var48_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var47_filter.current()))));
				var49_filter = (var48_Row).enumerator();
				return false;
			}
			private boolean moveNext_77() throws Exception {
				state = 74;				
				if( var47_filter != null ) { var47_filter.close(); var47_filter = null; }
				return false;
			}
			private boolean moveNext_78() throws Exception {
				state = 80;				
				if (!var49_filter.moveNext()) {state = 79; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq18_map(((com.altova.mapforce.IMFNode)(var49_filter.current()))))))))) {state = 78; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq19_map(((com.altova.mapforce.IMFNode)(var49_filter.current()))))))))) {state = 78; return false; }
				var50_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var49_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_79() throws Exception {
				state = 76;				
				if( var49_filter != null ) { var49_filter.close(); var49_filter = null; }
				return false;
			}
			private boolean moveNext_80() throws Exception {
				state = 82;				
				if (!var50_filter.moveNext()) {state = 81; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var50_filter.current()))))))))) {state = 80; return false; }
				var51_filter = new com.altova.functions.Core.SequenceCache((new seq465_filter(var48_Row)));
				var52_shared = (var51_filter).enumerator();
				return false;
			}
			private boolean moveNext_81() throws Exception {
				state = 78;				
				if( var50_filter != null ) { var50_filter.close(); var50_filter = null; }
				return false;
			}
			private boolean moveNext_82() throws Exception {
				state = 84;				
				if (!var52_shared.moveNext()) {state = 83; return false; }
				var53_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var52_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_83() throws Exception {
				state = 80;				
				if( var52_shared != null ) { var52_shared.close(); var52_shared = null; }
				return false;
			}
			private boolean moveNext_84() throws Exception {
				state = 86;				
				if (!var53_filter.moveNext()) {state = 85; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var53_filter.current()))))))))) {state = 84; return false; }
				var54_shared = (var51_filter).enumerator();
				return false;
			}
			private boolean moveNext_85() throws Exception {
				state = 82;				
				if( var53_filter != null ) { var53_filter.close(); var53_filter = null; }
				return false;
			}
			private boolean moveNext_86() throws Exception {
				state = 88;				
				if (!var54_shared.moveNext()) {state = 87; return false; }
				var55_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var54_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_87() throws Exception {
				state = 84;				
				if( var54_shared != null ) { var54_shared.close(); var54_shared = null; }
				return false;
			}
			private boolean moveNext_88() throws Exception {
				state = 88;				
				if (!var55_filter.moveNext()) {state = 89; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var55_filter.current()))))))))) {state = 88; return false; }
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var55_filter.current()))), com.altova.CoreTypes.decimalToString(new java.math.BigDecimal("0.5"))))) {state = 88; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq467_seq_(((com.altova.mapforce.IMFNode)(var50_filter.current())), ((com.altova.mapforce.IMFNode)(var55_filter.current())), ((com.altova.mapforce.IMFNode)(var53_filter.current()))))))))) {state = 88; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FanSystems", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq468_join(((com.altova.mapforce.IMFNode)(var50_filter.current())), ((com.altova.mapforce.IMFNode)(var53_filter.current())), var48_Row, var46_Worksheet)));
				pos++;
				return true;
			}
			private boolean moveNext_89() throws Exception {
				state = 86;				
				if( var55_filter != null ) { var55_filter.close(); var55_filter = null; }
				return false;
			}
			private boolean moveNext_91() throws Exception {
				state = 93;				
				if (!var56_shared.moveNext()) {state = 92; return false; }
				var57_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var56_shared.current()))));
				var58_filter = (var57_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_92() throws Exception {
				state = 100;				
				if( var56_shared != null ) { var56_shared.close(); var56_shared = null; }
				var61_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_93() throws Exception {
				state = 95;				
				if (!var58_filter.moveNext()) {state = 94; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq182_map(((com.altova.mapforce.IMFNode)(var58_filter.current()))))))))) {state = 93; return false; }
				var59_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var58_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_94() throws Exception {
				state = 91;				
				if( var58_filter != null ) { var58_filter.close(); var58_filter = null; }
				return false;
			}
			private boolean moveNext_95() throws Exception {
				state = 97;				
				if (!var59_filter.moveNext()) {state = 96; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq35_map(((com.altova.mapforce.IMFNode)(var59_filter.current()))))))))) {state = 95; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq36_map(((com.altova.mapforce.IMFNode)(var59_filter.current()))))))))) {state = 95; return false; }
				var60_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var59_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_96() throws Exception {
				state = 93;				
				if( var59_filter != null ) { var59_filter.close(); var59_filter = null; }
				return false;
			}
			private boolean moveNext_97() throws Exception {
				state = 97;				
				if (!var60_filter.moveNext()) {state = 98; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var60_filter.current()))))))))) {state = 97; return false; }
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var60_filter.current()))), com.altova.CoreTypes.decimalToString(new java.math.BigDecimal("0.5"))))) {state = 97; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MotorSystems", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq478_join(var57_Worksheet)));
				pos++;
				return true;
			}
			private boolean moveNext_98() throws Exception {
				state = 95;				
				if( var60_filter != null ) { var60_filter.close(); var60_filter = null; }
				return false;
			}
			private boolean moveNext_100() throws Exception {
				state = 102;				
				if (!var61_shared.moveNext()) {state = 101; return false; }
				var62_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var61_shared.current()))));
				var63_filter = (var62_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_101() throws Exception {
				state = 109;				
				if( var61_shared != null ) { var61_shared.close(); var61_shared = null; }
				var66_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_102() throws Exception {
				state = 104;				
				if (!var63_filter.moveNext()) {state = 103; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq182_map(((com.altova.mapforce.IMFNode)(var63_filter.current()))))))))) {state = 102; return false; }
				var64_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var63_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_103() throws Exception {
				state = 100;				
				if( var63_filter != null ) { var63_filter.close(); var63_filter = null; }
				return false;
			}
			private boolean moveNext_104() throws Exception {
				state = 106;				
				if (!var64_filter.moveNext()) {state = 105; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var64_filter.current()))))))))) {state = 104; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq71_map(((com.altova.mapforce.IMFNode)(var64_filter.current()))))))))) {state = 104; return false; }
				var65_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var64_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_105() throws Exception {
				state = 102;				
				if( var64_filter != null ) { var64_filter.close(); var64_filter = null; }
				return false;
			}
			private boolean moveNext_106() throws Exception {
				state = 106;				
				if (!var65_filter.moveNext()) {state = 107; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var65_filter.current()))))))))) {state = 106; return false; }
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var65_filter.current()))), com.altova.CoreTypes.decimalToString(new java.math.BigDecimal("0.5"))))) {state = 106; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("HeatRecoverySystems", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq482_join(var62_Worksheet)));
				pos++;
				return true;
			}
			private boolean moveNext_107() throws Exception {
				state = 104;				
				if( var65_filter != null ) { var65_filter.close(); var65_filter = null; }
				return false;
			}
			private boolean moveNext_109() throws Exception {
				state = 111;				
				if (!var66_shared.moveNext()) {state = 110; return false; }
				var67_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var66_shared.current()))));
				var68_filter = (var67_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_110() throws Exception {
				state = 118;				
				if( var66_shared != null ) { var66_shared.close(); var66_shared = null; }
				var72_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_111() throws Exception {
				state = 113;				
				if (!var68_filter.moveNext()) {state = 112; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq6_map(((com.altova.mapforce.IMFNode)(var68_filter.current()))))))))) {state = 111; return false; }
				var69_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var68_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_112() throws Exception {
				state = 109;				
				if( var68_filter != null ) { var68_filter.close(); var68_filter = null; }
				return false;
			}
			private boolean moveNext_113() throws Exception {
				state = 115;				
				if (!var69_filter.moveNext()) {state = 114; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq18_map(((com.altova.mapforce.IMFNode)(var69_filter.current()))))))))) {state = 113; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq19_map(((com.altova.mapforce.IMFNode)(var69_filter.current()))))))))) {state = 113; return false; }
				var70_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var69_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_114() throws Exception {
				state = 111;				
				if( var69_filter != null ) { var69_filter.close(); var69_filter = null; }
				return false;
			}
			private boolean moveNext_115() throws Exception {
				state = 115;				
				if (!var70_filter.moveNext()) {state = 116; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var70_filter.current()))))))))) {state = 115; return false; }
				var71_filter = new com.altova.functions.Core.SequenceCache((new seq484_filter(var67_Worksheet)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("WallSystems", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("WallSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq485_join(var67_Worksheet, var71_filter)))));
				pos++;
				return true;
			}
			private boolean moveNext_116() throws Exception {
				state = 113;				
				if( var70_filter != null ) { var70_filter.close(); var70_filter = null; }
				return false;
			}
			private boolean moveNext_118() throws Exception {
				state = 120;				
				if (!var72_shared.moveNext()) {state = 119; return false; }
				var73_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var72_shared.current()))));
				var74_filter = (var73_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_119() throws Exception {
				state = 127;				
				if( var72_shared != null ) { var72_shared.close(); var72_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FenestrationSystems", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FenestrationSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq521_join(closure.var1_shared, closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_120() throws Exception {
				state = 122;				
				if (!var74_filter.moveNext()) {state = 121; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq6_map(((com.altova.mapforce.IMFNode)(var74_filter.current()))))))))) {state = 120; return false; }
				var75_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var74_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_121() throws Exception {
				state = 118;				
				if( var74_filter != null ) { var74_filter.close(); var74_filter = null; }
				return false;
			}
			private boolean moveNext_122() throws Exception {
				state = 124;				
				if (!var75_filter.moveNext()) {state = 123; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq18_map(((com.altova.mapforce.IMFNode)(var75_filter.current()))))))))) {state = 122; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq19_map(((com.altova.mapforce.IMFNode)(var75_filter.current()))))))))) {state = 122; return false; }
				var76_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var75_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_123() throws Exception {
				state = 120;				
				if( var75_filter != null ) { var75_filter.close(); var75_filter = null; }
				return false;
			}
			private boolean moveNext_124() throws Exception {
				state = 124;				
				if (!var76_filter.moveNext()) {state = 125; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var76_filter.current()))))))))) {state = 124; return false; }
				var77_filter = new com.altova.functions.Core.SequenceCache((new seq509_filter(var73_Worksheet)));
				var78_filter = new com.altova.functions.Core.SequenceCache((new seq510_filter(var73_Worksheet)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RoofSystems", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RoofSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq511_join(var77_filter, var78_filter)))));
				pos++;
				return true;
			}
			private boolean moveNext_125() throws Exception {
				state = 122;				
				if( var76_filter != null ) { var76_filter.close(); var76_filter = null; }
				return false;
			}
			private boolean moveNext_127() throws Exception {
				state = 128;				
				var79_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_128() throws Exception {
				state = 130;				
				if (!var79_shared.moveNext()) {state = 129; return false; }
				var80_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var79_shared.current()))));
				var81_filter = (var80_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_129() throws Exception {
				state = 137;				
				if( var79_shared != null ) { var79_shared.close(); var79_shared = null; }
				var85_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_130() throws Exception {
				state = 132;				
				if (!var81_filter.moveNext()) {state = 131; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq6_map(((com.altova.mapforce.IMFNode)(var81_filter.current()))))))))) {state = 130; return false; }
				var82_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var81_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_131() throws Exception {
				state = 128;				
				if( var81_filter != null ) { var81_filter.close(); var81_filter = null; }
				return false;
			}
			private boolean moveNext_132() throws Exception {
				state = 134;				
				if (!var82_filter.moveNext()) {state = 133; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq18_map(((com.altova.mapforce.IMFNode)(var82_filter.current()))))))))) {state = 132; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq19_map(((com.altova.mapforce.IMFNode)(var82_filter.current()))))))))) {state = 132; return false; }
				var83_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var82_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_133() throws Exception {
				state = 130;				
				if( var82_filter != null ) { var82_filter.close(); var82_filter = null; }
				return false;
			}
			private boolean moveNext_134() throws Exception {
				state = 134;				
				if (!var83_filter.moveNext()) {state = 135; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var83_filter.current()))))))))) {state = 134; return false; }
				var84_filter = new com.altova.functions.Core.SequenceCache((new seq541_filter(var80_Worksheet)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FoundationSystems", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FoundationSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq542_join(var80_Worksheet, var84_filter)))));
				pos++;
				return true;
			}
			private boolean moveNext_135() throws Exception {
				state = 132;				
				if( var83_filter != null ) { var83_filter.close(); var83_filter = null; }
				return false;
			}
			private boolean moveNext_137() throws Exception {
				state = 139;				
				if (!var85_shared.moveNext()) {state = 138; return false; }
				var86_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var85_shared.current()))));
				var87_filter = (var86_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_138() throws Exception {
				state = 152;				
				if( var85_shared != null ) { var85_shared.close(); var85_shared = null; }
				var94_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_139() throws Exception {
				state = 141;				
				if (!var87_filter.moveNext()) {state = 140; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq6_map(((com.altova.mapforce.IMFNode)(var87_filter.current()))))))))) {state = 139; return false; }
				var88_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var87_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_140() throws Exception {
				state = 137;				
				if( var87_filter != null ) { var87_filter.close(); var87_filter = null; }
				return false;
			}
			private boolean moveNext_141() throws Exception {
				state = 143;				
				if (!var88_filter.moveNext()) {state = 142; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq277_map(((com.altova.mapforce.IMFNode)(var88_filter.current()))))))))) {state = 141; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq278_map(((com.altova.mapforce.IMFNode)(var88_filter.current()))))))))) {state = 141; return false; }
				var89_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var88_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_142() throws Exception {
				state = 139;				
				if( var88_filter != null ) { var88_filter.close(); var88_filter = null; }
				return false;
			}
			private boolean moveNext_143() throws Exception {
				state = 145;				
				if (!var89_filter.moveNext()) {state = 144; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var89_filter.current()))))))))) {state = 143; return false; }
				var90_filter = (var86_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_144() throws Exception {
				state = 141;				
				if( var89_filter != null ) { var89_filter.close(); var89_filter = null; }
				return false;
			}
			private boolean moveNext_145() throws Exception {
				state = 147;				
				if (!var90_filter.moveNext()) {state = 146; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq182_map(((com.altova.mapforce.IMFNode)(var90_filter.current()))))))))) {state = 145; return false; }
				var91_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var90_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_146() throws Exception {
				state = 143;				
				if( var90_filter != null ) { var90_filter.close(); var90_filter = null; }
				return false;
			}
			private boolean moveNext_147() throws Exception {
				state = 149;				
				if (!var91_filter.moveNext()) {state = 148; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq66_map(((com.altova.mapforce.IMFNode)(var91_filter.current()))))))))) {state = 147; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq67_map(((com.altova.mapforce.IMFNode)(var91_filter.current()))))))))) {state = 147; return false; }
				var92_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var91_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_148() throws Exception {
				state = 145;				
				if( var91_filter != null ) { var91_filter.close(); var91_filter = null; }
				return false;
			}
			private boolean moveNext_149() throws Exception {
				state = 149;				
				if (!var92_filter.moveNext()) {state = 150; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var92_filter.current()))))))))) {state = 149; return false; }
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var92_filter.current()))), com.altova.CoreTypes.decimalToString(new java.math.BigDecimal("0.5"))))) {state = 149; return false; }
				var93_vmf22_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf22_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var89_filter.current())))));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CriticalITSystems", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq557_join(var86_Worksheet, var93_vmf22_inputtoresult)));
				pos++;
				return true;
			}
			private boolean moveNext_150() throws Exception {
				state = 147;				
				if( var92_filter != null ) { var92_filter.close(); var92_filter = null; }
				return false;
			}
			private boolean moveNext_152() throws Exception {
				state = 154;				
				if (!var94_shared.moveNext()) {state = 153; return false; }
				var95_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var94_shared.current()))));
				var96_filter = (var95_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_153() throws Exception {
				state = 161;				
				if( var94_shared != null ) { var94_shared.close(); var94_shared = null; }
				var99_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_154() throws Exception {
				state = 156;				
				if (!var96_filter.moveNext()) {state = 155; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq182_map(((com.altova.mapforce.IMFNode)(var96_filter.current()))))))))) {state = 154; return false; }
				var97_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var96_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_155() throws Exception {
				state = 152;				
				if( var96_filter != null ) { var96_filter.close(); var96_filter = null; }
				return false;
			}
			private boolean moveNext_156() throws Exception {
				state = 158;				
				if (!var97_filter.moveNext()) {state = 157; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq68_map(((com.altova.mapforce.IMFNode)(var97_filter.current()))))))))) {state = 156; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq69_map(((com.altova.mapforce.IMFNode)(var97_filter.current()))))))))) {state = 156; return false; }
				var98_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var97_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_157() throws Exception {
				state = 154;				
				if( var97_filter != null ) { var97_filter.close(); var97_filter = null; }
				return false;
			}
			private boolean moveNext_158() throws Exception {
				state = 158;				
				if (!var98_filter.moveNext()) {state = 159; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var98_filter.current()))))))))) {state = 158; return false; }
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var98_filter.current()))), com.altova.CoreTypes.decimalToString(new java.math.BigDecimal("0.5"))))) {state = 158; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PlugLoads", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq559_join(var95_Worksheet)));
				pos++;
				return true;
			}
			private boolean moveNext_159() throws Exception {
				state = 156;				
				if( var98_filter != null ) { var98_filter.close(); var98_filter = null; }
				return false;
			}
			private boolean moveNext_161() throws Exception {
				state = 163;				
				if (!var99_shared.moveNext()) {state = 162; return false; }
				var100_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var99_shared.current()))));
				var101_filter = (var100_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_162() throws Exception {
				state = 170;				
				if( var99_shared != null ) { var99_shared.close(); var99_shared = null; }
				var104_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_163() throws Exception {
				state = 165;				
				if (!var101_filter.moveNext()) {state = 164; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq182_map(((com.altova.mapforce.IMFNode)(var101_filter.current()))))))))) {state = 163; return false; }
				var102_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var101_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_164() throws Exception {
				state = 161;				
				if( var101_filter != null ) { var101_filter.close(); var101_filter = null; }
				return false;
			}
			private boolean moveNext_165() throws Exception {
				state = 167;				
				if (!var102_filter.moveNext()) {state = 166; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq277_map(((com.altova.mapforce.IMFNode)(var102_filter.current()))))))))) {state = 165; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq278_map(((com.altova.mapforce.IMFNode)(var102_filter.current()))))))))) {state = 165; return false; }
				var103_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var102_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_166() throws Exception {
				state = 163;				
				if( var102_filter != null ) { var102_filter.close(); var102_filter = null; }
				return false;
			}
			private boolean moveNext_167() throws Exception {
				state = 167;				
				if (!var103_filter.moveNext()) {state = 168; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var103_filter.current()))))))))) {state = 167; return false; }
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var103_filter.current()))), com.altova.CoreTypes.decimalToString(new java.math.BigDecimal("0.5"))))) {state = 167; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ProcessLoads", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq561_join(var100_Worksheet)));
				pos++;
				return true;
			}
			private boolean moveNext_168() throws Exception {
				state = 165;				
				if( var103_filter != null ) { var103_filter.close(); var103_filter = null; }
				return false;
			}
			private boolean moveNext_170() throws Exception {
				state = 172;				
				if (!var104_shared.moveNext()) {state = 171; return false; }
				var105_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var104_shared.current()))));
				var106_filter = (var105_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_171() throws Exception {
				state = 179;				
				if( var104_shared != null ) { var104_shared.close(); var104_shared = null; }
				var109_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_172() throws Exception {
				state = 174;				
				if (!var106_filter.moveNext()) {state = 173; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq182_map(((com.altova.mapforce.IMFNode)(var106_filter.current()))))))))) {state = 172; return false; }
				var107_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var106_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_173() throws Exception {
				state = 170;				
				if( var106_filter != null ) { var106_filter.close(); var106_filter = null; }
				return false;
			}
			private boolean moveNext_174() throws Exception {
				state = 176;				
				if (!var107_filter.moveNext()) {state = 175; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq28_map(((com.altova.mapforce.IMFNode)(var107_filter.current()))))))))) {state = 174; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq29_map(((com.altova.mapforce.IMFNode)(var107_filter.current()))))))))) {state = 174; return false; }
				var108_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var107_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_175() throws Exception {
				state = 172;				
				if( var107_filter != null ) { var107_filter.close(); var107_filter = null; }
				return false;
			}
			private boolean moveNext_176() throws Exception {
				state = 176;				
				if (!var108_filter.moveNext()) {state = 177; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var108_filter.current()))))))))) {state = 176; return false; }
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var108_filter.current()))), com.altova.CoreTypes.decimalToString(new java.math.BigDecimal("0.5"))))) {state = 176; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ConveyanceSystems", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq563_join(var105_Worksheet)));
				pos++;
				return true;
			}
			private boolean moveNext_177() throws Exception {
				state = 174;				
				if( var108_filter != null ) { var108_filter.close(); var108_filter = null; }
				return false;
			}
			private boolean moveNext_179() throws Exception {
				state = 181;				
				if (!var109_shared.moveNext()) {state = 180; return false; }
				var110_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var109_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_180() throws Exception {
				state = 188;				
				if( var109_shared != null ) { var109_shared.close(); var109_shared = null; }
				var114_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_181() throws Exception {
				state = 183;				
				if (!var110_filter.moveNext()) {state = 182; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq565_map(((com.altova.mapforce.IMFNode)(var110_filter.current()))))))))) {state = 181; return false; }
				var111_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var110_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_182() throws Exception {
				state = 179;				
				if( var110_filter != null ) { var110_filter.close(); var110_filter = null; }
				return false;
			}
			private boolean moveNext_183() throws Exception {
				state = 185;				
				if (!var111_filter.moveNext()) {state = 184; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var111_filter.current()))))))))) {state = 183; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq71_map(((com.altova.mapforce.IMFNode)(var111_filter.current()))))))))) {state = 183; return false; }
				var112_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var111_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_184() throws Exception {
				state = 181;				
				if( var111_filter != null ) { var111_filter.close(); var111_filter = null; }
				return false;
			}
			private boolean moveNext_185() throws Exception {
				state = 185;				
				if (!var112_filter.moveNext()) {state = 186; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var112_filter.current()))))))))) {state = 185; return false; }
				var113_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var112_filter.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OnSiteStorageTransmissionGenerationSystems", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OnSiteStorageTransmissionGenerationSystem", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EnergyConversionType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Generation", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OnSiteGenerationType", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq566_if_equal(var113_cast)))))))))));
				pos++;
				return true;
			}
			private boolean moveNext_186() throws Exception {
				state = 183;				
				if( var112_filter != null ) { var112_filter.close(); var112_filter = null; }
				return false;
			}
			private boolean moveNext_188() throws Exception {
				state = 190;				
				if (!var114_shared.moveNext()) {state = 189; return false; }
				var115_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var114_shared.current()))));
				var116_filter = (var115_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_189() throws Exception {
				state = 197;				
				if( var114_shared != null ) { var114_shared.close(); var114_shared = null; }
				var119_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_190() throws Exception {
				state = 192;				
				if (!var116_filter.moveNext()) {state = 191; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq182_map(((com.altova.mapforce.IMFNode)(var116_filter.current()))))))))) {state = 190; return false; }
				var117_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var116_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_191() throws Exception {
				state = 188;				
				if( var116_filter != null ) { var116_filter.close(); var116_filter = null; }
				return false;
			}
			private boolean moveNext_192() throws Exception {
				state = 194;				
				if (!var117_filter.moveNext()) {state = 193; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var117_filter.current()))))))))) {state = 192; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq40_map(((com.altova.mapforce.IMFNode)(var117_filter.current()))))))))) {state = 192; return false; }
				var118_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var117_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_193() throws Exception {
				state = 190;				
				if( var117_filter != null ) { var117_filter.close(); var117_filter = null; }
				return false;
			}
			private boolean moveNext_194() throws Exception {
				state = 194;				
				if (!var118_filter.moveNext()) {state = 195; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var118_filter.current()))))))))) {state = 194; return false; }
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var118_filter.current()))), com.altova.CoreTypes.decimalToString(new java.math.BigDecimal("0.5"))))) {state = 194; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Pools", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq567_join(var115_Worksheet)));
				pos++;
				return true;
			}
			private boolean moveNext_195() throws Exception {
				state = 192;				
				if( var118_filter != null ) { var118_filter.close(); var118_filter = null; }
				return false;
			}
			private boolean moveNext_197() throws Exception {
				state = 199;				
				if (!var119_shared.moveNext()) {state = 198; return false; }
				var120_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var119_shared.current()))));
				var121_filter = (var120_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_198() throws Exception {
				state = 0;				
				if( var119_shared != null ) { var119_shared.close(); var119_shared = null; }
				return false;
			}
			private boolean moveNext_199() throws Exception {
				state = 201;				
				if (!var121_filter.moveNext()) {state = 200; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq182_map(((com.altova.mapforce.IMFNode)(var121_filter.current()))))))))) {state = 199; return false; }
				var122_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var121_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_200() throws Exception {
				state = 197;				
				if( var121_filter != null ) { var121_filter.close(); var121_filter = null; }
				return false;
			}
			private boolean moveNext_201() throws Exception {
				state = 203;				
				if (!var122_filter.moveNext()) {state = 202; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq32_map(((com.altova.mapforce.IMFNode)(var122_filter.current()))))))))) {state = 201; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq33_map(((com.altova.mapforce.IMFNode)(var122_filter.current()))))))))) {state = 201; return false; }
				var123_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var122_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_202() throws Exception {
				state = 199;				
				if( var122_filter != null ) { var122_filter.close(); var122_filter = null; }
				return false;
			}
			private boolean moveNext_203() throws Exception {
				state = 203;				
				if (!var123_filter.moveNext()) {state = 204; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var123_filter.current()))))))))) {state = 203; return false; }
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var123_filter.current()))), com.altova.CoreTypes.decimalToString(new java.math.BigDecimal("0.5"))))) {state = 203; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("WaterUses", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq569_join(var120_Worksheet)));
				pos++;
				return true;
			}
			private boolean moveNext_204() throws Exception {
				state = 201;				
				if( var123_filter != null ) { var123_filter.close(); var123_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_shared != null ) { var9_shared.close(); var9_shared = null; }
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				if( var14_shared != null ) { var14_shared.close(); var14_shared = null; }
				if( var24_filter != null ) { var24_filter.close(); var24_filter = null; }
				if( var23_filter != null ) { var23_filter.close(); var23_filter = null; }
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				if( var20_shared != null ) { var20_shared.close(); var20_shared = null; }
				if( var29_filter != null ) { var29_filter.close(); var29_filter = null; }
				if( var28_filter != null ) { var28_filter.close(); var28_filter = null; }
				if( var27_filter != null ) { var27_filter.close(); var27_filter = null; }
				if( var25_shared != null ) { var25_shared.close(); var25_shared = null; }
				if( var34_filter != null ) { var34_filter.close(); var34_filter = null; }
				if( var33_filter != null ) { var33_filter.close(); var33_filter = null; }
				if( var32_filter != null ) { var32_filter.close(); var32_filter = null; }
				if( var30_shared != null ) { var30_shared.close(); var30_shared = null; }
				if( var39_filter != null ) { var39_filter.close(); var39_filter = null; }
				if( var38_filter != null ) { var38_filter.close(); var38_filter = null; }
				if( var37_filter != null ) { var37_filter.close(); var37_filter = null; }
				if( var35_shared != null ) { var35_shared.close(); var35_shared = null; }
				if( var44_filter != null ) { var44_filter.close(); var44_filter = null; }
				if( var43_filter != null ) { var43_filter.close(); var43_filter = null; }
				if( var42_filter != null ) { var42_filter.close(); var42_filter = null; }
				if( var40_shared != null ) { var40_shared.close(); var40_shared = null; }
				if( var55_filter != null ) { var55_filter.close(); var55_filter = null; }
				if( var54_shared != null ) { var54_shared.close(); var54_shared = null; }
				if( var53_filter != null ) { var53_filter.close(); var53_filter = null; }
				if( var52_shared != null ) { var52_shared.close(); var52_shared = null; }
				if( var50_filter != null ) { var50_filter.close(); var50_filter = null; }
				if( var49_filter != null ) { var49_filter.close(); var49_filter = null; }
				if( var47_filter != null ) { var47_filter.close(); var47_filter = null; }
				if( var45_shared != null ) { var45_shared.close(); var45_shared = null; }
				if( var60_filter != null ) { var60_filter.close(); var60_filter = null; }
				if( var59_filter != null ) { var59_filter.close(); var59_filter = null; }
				if( var58_filter != null ) { var58_filter.close(); var58_filter = null; }
				if( var56_shared != null ) { var56_shared.close(); var56_shared = null; }
				if( var65_filter != null ) { var65_filter.close(); var65_filter = null; }
				if( var64_filter != null ) { var64_filter.close(); var64_filter = null; }
				if( var63_filter != null ) { var63_filter.close(); var63_filter = null; }
				if( var61_shared != null ) { var61_shared.close(); var61_shared = null; }
				if( var70_filter != null ) { var70_filter.close(); var70_filter = null; }
				if( var69_filter != null ) { var69_filter.close(); var69_filter = null; }
				if( var68_filter != null ) { var68_filter.close(); var68_filter = null; }
				if( var66_shared != null ) { var66_shared.close(); var66_shared = null; }
				if( var76_filter != null ) { var76_filter.close(); var76_filter = null; }
				if( var75_filter != null ) { var75_filter.close(); var75_filter = null; }
				if( var74_filter != null ) { var74_filter.close(); var74_filter = null; }
				if( var72_shared != null ) { var72_shared.close(); var72_shared = null; }
				if( var83_filter != null ) { var83_filter.close(); var83_filter = null; }
				if( var82_filter != null ) { var82_filter.close(); var82_filter = null; }
				if( var81_filter != null ) { var81_filter.close(); var81_filter = null; }
				if( var79_shared != null ) { var79_shared.close(); var79_shared = null; }
				if( var92_filter != null ) { var92_filter.close(); var92_filter = null; }
				if( var91_filter != null ) { var91_filter.close(); var91_filter = null; }
				if( var90_filter != null ) { var90_filter.close(); var90_filter = null; }
				if( var89_filter != null ) { var89_filter.close(); var89_filter = null; }
				if( var88_filter != null ) { var88_filter.close(); var88_filter = null; }
				if( var87_filter != null ) { var87_filter.close(); var87_filter = null; }
				if( var85_shared != null ) { var85_shared.close(); var85_shared = null; }
				if( var98_filter != null ) { var98_filter.close(); var98_filter = null; }
				if( var97_filter != null ) { var97_filter.close(); var97_filter = null; }
				if( var96_filter != null ) { var96_filter.close(); var96_filter = null; }
				if( var94_shared != null ) { var94_shared.close(); var94_shared = null; }
				if( var103_filter != null ) { var103_filter.close(); var103_filter = null; }
				if( var102_filter != null ) { var102_filter.close(); var102_filter = null; }
				if( var101_filter != null ) { var101_filter.close(); var101_filter = null; }
				if( var99_shared != null ) { var99_shared.close(); var99_shared = null; }
				if( var108_filter != null ) { var108_filter.close(); var108_filter = null; }
				if( var107_filter != null ) { var107_filter.close(); var107_filter = null; }
				if( var106_filter != null ) { var106_filter.close(); var106_filter = null; }
				if( var104_shared != null ) { var104_shared.close(); var104_shared = null; }
				if( var112_filter != null ) { var112_filter.close(); var112_filter = null; }
				if( var111_filter != null ) { var111_filter.close(); var111_filter = null; }
				if( var110_filter != null ) { var110_filter.close(); var110_filter = null; }
				if( var109_shared != null ) { var109_shared.close(); var109_shared = null; }
				if( var118_filter != null ) { var118_filter.close(); var118_filter = null; }
				if( var117_filter != null ) { var117_filter.close(); var117_filter = null; }
				if( var116_filter != null ) { var116_filter.close(); var116_filter = null; }
				if( var114_shared != null ) { var114_shared.close(); var114_shared = null; }
				if( var123_filter != null ) { var123_filter.close(); var123_filter = null; }
				if( var122_filter != null ) { var122_filter.close(); var122_filter = null; }
				if( var121_filter != null ) { var121_filter.close(); var121_filter = null; }
				if( var119_shared != null ) { var119_shared.close(); var119_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq181_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq181_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq181_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq181_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq182_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq182_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq182_map(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq182_map closure;
			IEnumerator var2_Name;
			public Enumerator(seq182_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_Name = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_n)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_Name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_Name.current()))), "Check Box Data");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq183_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq183_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq183_join closure;
			IEnumerator var3_shared;
			com.altova.mapforce.IEnumerable var4_Row;
			IEnumerator var5_filter;
			IEnumerator var20_shared;
			com.altova.mapforce.IEnumerable var21_Row;
			IEnumerator var22_filter;
			IEnumerator var26_shared;
			IEnumerator var6_filter;
			com.altova.mapforce.IEnumerable var27_Row;
			IEnumerator var28_filter;
			IEnumerator var7_filter;
			IEnumerator var23_filter;
			IEnumerator var29_filter;
			IEnumerator var8_filter;
			boolean var24_cast;
			com.altova.mapforce.IEnumerable var25_filter;
			IEnumerator var30_filter;
			IEnumerator var9_filter;
			IEnumerator var31_filter;
			IEnumerator var10_filter;
			IEnumerator var32_filter;
			IEnumerator var11_filter;
			IEnumerator var33_filter;
			IEnumerator var12_filter;
			IEnumerator var34_filter;
			IEnumerator var13_filter;
			IEnumerator var35_filter;
			IEnumerator var14_filter;
			java.lang.String var15_cast;
			com.altova.mapforce.IEnumerable var36_filter;
			boolean var16_cast;
			boolean var17_cast;
			boolean var18_cast;
			com.altova.mapforce.IEnumerable var19_filter;
			public Enumerator(seq183_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 32:	if (moveNext_32()) return true; break;
					case 33:	if (moveNext_33()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
					case 35:	if (moveNext_35()) return true; break;
					case 36:	if (moveNext_36()) return true; break;
					case 37:	if (moveNext_37()) return true; break;
					case 38:	if (moveNext_38()) return true; break;
					case 39:	if (moveNext_39()) return true; break;
					case 40:	if (moveNext_40()) return true; break;
					case 41:	if (moveNext_41()) return true; break;
					case 42:	if (moveNext_42()) return true; break;
					case 43:	if (moveNext_43()) return true; break;
					case 44:	if (moveNext_44()) return true; break;
					case 45:	if (moveNext_45()) return true; break;
					case 46:	if (moveNext_46()) return true; break;
					case 47:	if (moveNext_47()) return true; break;
					case 48:	if (moveNext_48()) return true; break;
					case 49:	if (moveNext_49()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current()))));
				var5_filter = (var4_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 25;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var20_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq64_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 4; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				var7_filter = (var4_Row).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var7_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq184_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq185_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 8; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var8_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 10; return false; }
				var9_filter = (var4_Row).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var9_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq89_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq90_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 12; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 16;				
				if (!var10_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 14; return false; }
				var11_filter = (var4_Row).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var11_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq186_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq187_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 16; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 14;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var12_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 18; return false; }
				var13_filter = (var4_Row).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 22;				
				if (!var13_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq188_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq189_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 20; return false; }
				var14_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var13_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 22;				
				if (!var14_filter.moveNext()) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 22; return false; }
				var15_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())));
				var16_cast = com.altova.CoreTypes.parseBoolean(var15_cast);
				var17_cast = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_filter.current()))));
				var18_cast = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var10_filter.current()))));
				var19_filter = new com.altova.functions.Core.SequenceCache((new seq190_filter(var4_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Plants", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq194_join(((com.altova.mapforce.IMFNode)(var12_filter.current())), ((com.altova.mapforce.IMFNode)(var14_filter.current())), var4_Row, var16_cast, var18_cast, var15_cast, var17_cast, var19_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_23() throws Exception {
				state = 20;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 27;				
				if (!var20_shared.moveNext()) {state = 26; return false; }
				var21_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var20_shared.current()))));
				var22_filter = (var21_Row).enumerator();
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 32;				
				if( var20_shared != null ) { var20_shared.close(); var20_shared = null; }
				var26_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 29;				
				if (!var22_filter.moveNext()) {state = 28; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq73_map(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))))) {state = 27; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq74_map(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))))) {state = 27; return false; }
				var23_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var22_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_28() throws Exception {
				state = 25;				
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				return false;
			}
			private boolean moveNext_29() throws Exception {
				state = 29;				
				if (!var23_filter.moveNext()) {state = 30; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var23_filter.current()))))))))) {state = 29; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq271_if_cast(((com.altova.mapforce.IMFNode)(var23_filter.current())), var21_Row))))) {state = 29; return false; }
				var24_cast = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var23_filter.current()))));
				var25_filter = new com.altova.functions.Core.SequenceCache((new seq281_filter(var21_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("HeatingAndCoolingSystems", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq283_join(closure.var1_shared, var21_Row, var24_cast, var25_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_30() throws Exception {
				state = 27;				
				if( var23_filter != null ) { var23_filter.close(); var23_filter = null; }
				return false;
			}
			private boolean moveNext_32() throws Exception {
				state = 34;				
				if (!var26_shared.moveNext()) {state = 33; return false; }
				var27_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var26_shared.current()))));
				var28_filter = (var27_Row).enumerator();
				return false;
			}
			private boolean moveNext_33() throws Exception {
				state = 0;				
				if( var26_shared != null ) { var26_shared.close(); var26_shared = null; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq399_join(closure.var2_shared))))))) {state = 0; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq400_join(closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_34() throws Exception {
				state = 36;				
				if (!var28_filter.moveNext()) {state = 35; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq375_map(((com.altova.mapforce.IMFNode)(var28_filter.current()))))))))) {state = 34; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq376_map(((com.altova.mapforce.IMFNode)(var28_filter.current()))))))))) {state = 34; return false; }
				var29_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var28_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_35() throws Exception {
				state = 32;				
				if( var28_filter != null ) { var28_filter.close(); var28_filter = null; }
				return false;
			}
			private boolean moveNext_36() throws Exception {
				state = 38;				
				if (!var29_filter.moveNext()) {state = 37; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var29_filter.current()))))))))) {state = 36; return false; }
				var30_filter = (var27_Row).enumerator();
				return false;
			}
			private boolean moveNext_37() throws Exception {
				state = 34;				
				if( var29_filter != null ) { var29_filter.close(); var29_filter = null; }
				return false;
			}
			private boolean moveNext_38() throws Exception {
				state = 40;				
				if (!var30_filter.moveNext()) {state = 39; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq18_map(((com.altova.mapforce.IMFNode)(var30_filter.current()))))))))) {state = 38; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq19_map(((com.altova.mapforce.IMFNode)(var30_filter.current()))))))))) {state = 38; return false; }
				var31_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var30_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_39() throws Exception {
				state = 36;				
				if( var30_filter != null ) { var30_filter.close(); var30_filter = null; }
				return false;
			}
			private boolean moveNext_40() throws Exception {
				state = 42;				
				if (!var31_filter.moveNext()) {state = 41; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var31_filter.current()))))))))) {state = 40; return false; }
				var32_filter = (var27_Row).enumerator();
				return false;
			}
			private boolean moveNext_41() throws Exception {
				state = 38;				
				if( var31_filter != null ) { var31_filter.close(); var31_filter = null; }
				return false;
			}
			private boolean moveNext_42() throws Exception {
				state = 44;				
				if (!var32_filter.moveNext()) {state = 43; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var32_filter.current()))))))))) {state = 42; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq87_map(((com.altova.mapforce.IMFNode)(var32_filter.current()))))))))) {state = 42; return false; }
				var33_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var32_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_43() throws Exception {
				state = 40;				
				if( var32_filter != null ) { var32_filter.close(); var32_filter = null; }
				return false;
			}
			private boolean moveNext_44() throws Exception {
				state = 46;				
				if (!var33_filter.moveNext()) {state = 45; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var33_filter.current()))))))))) {state = 44; return false; }
				var34_filter = (var27_Row).enumerator();
				return false;
			}
			private boolean moveNext_45() throws Exception {
				state = 42;				
				if( var33_filter != null ) { var33_filter.close(); var33_filter = null; }
				return false;
			}
			private boolean moveNext_46() throws Exception {
				state = 48;				
				if (!var34_filter.moveNext()) {state = 47; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var34_filter.current()))))))))) {state = 46; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var34_filter.current()))))))))) {state = 46; return false; }
				var35_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var34_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_47() throws Exception {
				state = 44;				
				if( var34_filter != null ) { var34_filter.close(); var34_filter = null; }
				return false;
			}
			private boolean moveNext_48() throws Exception {
				state = 48;				
				if (!var35_filter.moveNext()) {state = 49; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var35_filter.current()))))))))) {state = 48; return false; }
				if (!(com.altova.functions.Core.greater(com.altova.functions.Core.add(com.altova.functions.Core.add(com.altova.functions.Core.add(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var29_filter.current())))), com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var31_filter.current()))))), com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var33_filter.current()))))), com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var35_filter.current()))))), new java.math.BigDecimal("0.5")))) {state = 48; return false; }
				var36_filter = new com.altova.functions.Core.SequenceCache((new seq377_filter(closure.var1_shared)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OtherHVACSystems", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq379_join(var36_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_49() throws Exception {
				state = 46;				
				if( var35_filter != null ) { var35_filter.close(); var35_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var23_filter != null ) { var23_filter.close(); var23_filter = null; }
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				if( var20_shared != null ) { var20_shared.close(); var20_shared = null; }
				if( var35_filter != null ) { var35_filter.close(); var35_filter = null; }
				if( var34_filter != null ) { var34_filter.close(); var34_filter = null; }
				if( var33_filter != null ) { var33_filter.close(); var33_filter = null; }
				if( var32_filter != null ) { var32_filter.close(); var32_filter = null; }
				if( var31_filter != null ) { var31_filter.close(); var31_filter = null; }
				if( var30_filter != null ) { var30_filter.close(); var30_filter = null; }
				if( var29_filter != null ) { var29_filter.close(); var29_filter = null; }
				if( var28_filter != null ) { var28_filter.close(); var28_filter = null; }
				if( var26_shared != null ) { var26_shared.close(); var26_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq184_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq184_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq184_map closure;
			IEnumerator var2_r;
			public Enumerator(seq184_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(22L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq185_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq185_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq185_map closure;
			IEnumerator var2_r;
			public Enumerator(seq185_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(22L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq186_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq186_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq186_map closure;
			IEnumerator var2_r;
			public Enumerator(seq186_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(39L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq187_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq187_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq187_map closure;
			IEnumerator var2_r;
			public Enumerator(seq187_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(39L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq188_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq188_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq188_map closure;
			IEnumerator var2_r;
			public Enumerator(seq188_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(40L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq189_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq189_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq189_map closure;
			IEnumerator var2_r;
			public Enumerator(seq189_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(40L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq190_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq190_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq190_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq190_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq191_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq193_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq191_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq191_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq191_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq191_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq192_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq192_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq192_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq192_map closure;
			IEnumerator var2_r;
			public Enumerator(seq192_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(41L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq193_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq193_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq193_map closure;
			IEnumerator var2_r;
			public Enumerator(seq193_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(41L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq194_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_cur_Cell;
		com.altova.mapforce.IEnumerable var3_shared;
		boolean var4_shared;
		boolean var5_shared;
		java.lang.String var6_shared;
		boolean var7_shared;
		com.altova.mapforce.IEnumerable var8_shared;
	
		public seq194_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_cur_Cell, com.altova.mapforce.IEnumerable var3_shared, boolean var4_shared, boolean var5_shared, java.lang.String var6_shared, boolean var7_shared, com.altova.mapforce.IEnumerable var8_shared)
		{
			this.var1_current = var1_current;
			this.var2_cur_Cell = var2_cur_Cell;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
			this.var6_shared = var6_shared;
			this.var7_shared = var7_shared;
			this.var8_shared = var8_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq194_join closure;
			IEnumerator var9_filter;
			IEnumerator var10_filter;
			IEnumerator var13_shared;
			IEnumerator var11_filter;
			IEnumerator var14_filter;
			IEnumerator var15_filter;
			IEnumerator var12_filter;
			IEnumerator var16_filter;
			IEnumerator var17_filter;
			IEnumerator var18_filter;
			boolean var19_cast;
			boolean var20_cast;
			boolean var21_cast;
			boolean var22_cast;
			boolean var23_cast;
			public Enumerator(seq194_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var9_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var9_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq195_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq196_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 2; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 13;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq229_seq_(closure.var4_shared, closure.var5_shared, closure.var7_shared))))))) {state = 13; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CoolingPlantType", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq230_join(closure.var1_current, closure.var2_cur_Cell, closure.var3_shared, closure.var4_shared, closure.var5_shared, closure.var6_shared, closure.var7_shared, closure.var8_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var10_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 4; return false; }
				var11_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var11_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq197_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq198_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 6; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var12_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq199_seq_(((com.altova.mapforce.IMFNode)(var12_filter.current())), ((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("HeatingPlantType", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq200_join(((com.altova.mapforce.IMFNode)(var12_filter.current())), ((com.altova.mapforce.IMFNode)(var10_filter.current())), closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 14;				
				var13_shared = (closure.var8_shared).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 16;				
				if (!var13_shared.moveNext()) {state = 15; return false; }
				var14_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var13_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 0;				
				if( var13_shared != null ) { var13_shared.close(); var13_shared = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var14_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 16; return false; }
				var15_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 14;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var15_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq256_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq257_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 18; return false; }
				var16_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var15_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 22;				
				if (!var16_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 20; return false; }
				var17_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 24;				
				if (!var17_filter.moveNext()) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq260_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq261_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 22; return false; }
				var18_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var17_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 20;				
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 24;				
				if (!var18_filter.moveNext()) {state = 25; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))))) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq266_seq_(((com.altova.mapforce.IMFNode)(var18_filter.current())), closure.var1_current, ((com.altova.mapforce.IMFNode)(var14_filter.current())), ((com.altova.mapforce.IMFNode)(var16_filter.current())), closure.var2_cur_Cell))))))) {state = 24; return false; }
				var19_cast = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var18_filter.current()))));
				var20_cast = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var16_filter.current()))));
				var21_cast = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var14_filter.current()))));
				var22_cast = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_cur_Cell));
				var23_cast = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CondenserPlant", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq267_join(var21_cast, var22_cast, var20_cast, var19_cast, var23_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_25() throws Exception {
				state = 22;				
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var13_shared != null ) { var13_shared.close(); var13_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq195_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq195_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq195_map closure;
			IEnumerator var2_r;
			public Enumerator(seq195_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(48L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq196_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq196_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq196_map closure;
			IEnumerator var2_r;
			public Enumerator(seq196_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(48L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq197_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq197_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq197_map closure;
			IEnumerator var2_r;
			public Enumerator(seq197_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(49L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq198_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq198_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq198_map closure;
			IEnumerator var2_r;
			public Enumerator(seq198_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(49L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq199_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
		com.altova.mapforce.IMFNode var2_cur_Cell;
	
		public seq199_seq_(com.altova.mapforce.IMFNode var1_cur_Cell, com.altova.mapforce.IMFNode var2_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
			this.var2_cur_Cell = var2_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq199_seq_ closure;
			public Enumerator(seq199_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_cur_Cell));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_cur_Cell));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq200_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_cur_Cell;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq200_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_cur_Cell, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_cur_Cell = var2_cur_Cell;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq200_join closure;
			public Enumerator(seq200_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box("HeatiingPlant1"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_cur_Cell)))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Boiler", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq201_join(closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 0; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("DistrictHeating", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq228_seq_()));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq201_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq201_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq201_join closure;
			IEnumerator var2_filter;
			IEnumerator var4_filter;
			IEnumerator var3_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			public Enumerator(seq201_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq202_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq203_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 7;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq204_if_cast(((com.altova.mapforce.IMFNode)(var3_filter.current())), closure.var1_shared))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("BoilerType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq209_if_cast(((com.altova.mapforce.IMFNode)(var3_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq210_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq211_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var5_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 9; return false; }
				var6_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq212_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq213_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var7_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq214_if_any(((com.altova.mapforce.IMFNode)(var5_filter.current())), ((com.altova.mapforce.IMFNode)(var7_filter.current())), closure.var1_shared))))) {state = 13; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("DraftType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq225_if_any(((com.altova.mapforce.IMFNode)(var5_filter.current())), ((com.altova.mapforce.IMFNode)(var7_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq202_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq202_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq202_map closure;
			IEnumerator var2_r;
			public Enumerator(seq202_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(51L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq203_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq203_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq203_map closure;
			IEnumerator var2_r;
			public Enumerator(seq203_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(51L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq204_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq204_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq204_if_cast closure;
			public Enumerator(seq204_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq205_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq205_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq205_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq205_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq205_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq206_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq207_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq208_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq206_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq206_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq206_map closure;
			IEnumerator var2_r;
			public Enumerator(seq206_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(54L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq207_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq207_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq207_map closure;
			IEnumerator var2_r;
			public Enumerator(seq207_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(54L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq208_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq208_map(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq208_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq208_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq209_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq209_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq209_if_cast closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq209_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = "Steam";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq206_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq207_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))) {state = 7; return false; }
				current = "Hot water";
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq210_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq210_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq210_map closure;
			IEnumerator var2_r;
			public Enumerator(seq210_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(52L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq211_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq211_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq211_map closure;
			IEnumerator var2_r;
			public Enumerator(seq211_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(52L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq212_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq212_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq212_map closure;
			IEnumerator var2_r;
			public Enumerator(seq212_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(55L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq213_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq213_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq213_map closure;
			IEnumerator var2_r;
			public Enumerator(seq213_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(55L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq214_if_any implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq214_if_any(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq214_if_any closure;
			public Enumerator(seq214_if_any closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq215_seq_(closure.var1_current, closure.var2_current))))))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq216_map(closure.var3_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq215_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq215_seq_(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq215_seq_ closure;
			public Enumerator(seq215_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq216_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq216_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq216_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq216_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq217_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq218_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq219_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq217_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq217_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq217_map closure;
			IEnumerator var2_r;
			public Enumerator(seq217_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(53L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq218_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq218_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq218_map closure;
			IEnumerator var2_r;
			public Enumerator(seq218_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(53L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq219_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq219_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq219_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq219_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq220_map(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq220_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq220_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq220_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq220_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq221_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq222_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq223_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq221_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq221_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq221_map closure;
			IEnumerator var2_r;
			public Enumerator(seq221_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(56L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq222_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq222_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq222_map closure;
			IEnumerator var2_r;
			public Enumerator(seq222_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(56L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq223_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq223_map(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq223_map closure;
			IEnumerator var2_filter;
			boolean var3_cast;
			public Enumerator(seq223_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_cast = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq224_seq_(var3_cast)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq224_seq_ implements IEnumerable
	{
		boolean var1_shared;
	
		public seq224_seq_(boolean var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq224_seq_ closure;
			public Enumerator(seq224_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_shared;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = closure.var1_shared;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq225_if_any implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq225_if_any(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq225_if_any closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			public Enumerator(seq225_if_any closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq226_seq_(closure.var1_current, closure.var2_current))))))) {state = 2; return false; }
				current = "Mechanical forced";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var4_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq217_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq218_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				var6_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq221_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq222_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 9; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var7_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq227_seq_(((com.altova.mapforce.IMFNode)(var7_filter.current())), ((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 11; return false; }
				current = "Natural";
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq226_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq226_seq_(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq226_seq_ closure;
			public Enumerator(seq226_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq227_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq227_seq_(com.altova.mapforce.IMFNode var1_cur_Cell, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_cur_Cell = var1_cur_Cell;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq227_seq_ closure;
			public Enumerator(seq227_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_cur_Cell));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq228_seq_ implements IEnumerable
	{
	
		public seq228_seq_()
		{
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq228_seq_ closure;
			public Enumerator(seq228_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				return false;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq229_seq_ implements IEnumerable
	{
		boolean var1_shared;
		boolean var2_shared;
		boolean var3_shared;
	
		public seq229_seq_(boolean var1_shared, boolean var2_shared, boolean var3_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq229_seq_ closure;
			public Enumerator(seq229_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_shared;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var3_shared;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				current = closure.var2_shared;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq230_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_cur_Cell;
		com.altova.mapforce.IEnumerable var3_shared;
		boolean var4_shared;
		boolean var5_shared;
		java.lang.String var6_shared;
		boolean var7_shared;
		com.altova.mapforce.IEnumerable var8_shared;
	
		public seq230_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_cur_Cell, com.altova.mapforce.IEnumerable var3_shared, boolean var4_shared, boolean var5_shared, java.lang.String var6_shared, boolean var7_shared, com.altova.mapforce.IEnumerable var8_shared)
		{
			this.var1_current = var1_current;
			this.var2_cur_Cell = var2_cur_Cell;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
			this.var6_shared = var6_shared;
			this.var7_shared = var7_shared;
			this.var8_shared = var8_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq230_join closure;
			public Enumerator(seq230_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box("CoolingPlant1"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				if (!(closure.var7_shared)) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Chiller", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq231_join(closure.var1_current, closure.var2_cur_Cell, closure.var3_shared, closure.var8_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 8;				
				if (!(closure.var5_shared)) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("DistrictChilledWater", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq228_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 0;				
				if (!(closure.var4_shared)) {state = 0; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OtherCombination", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(closure.var6_shared));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq231_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_cur_Cell;
		com.altova.mapforce.IEnumerable var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
	
		public seq231_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_cur_Cell, com.altova.mapforce.IEnumerable var3_shared, com.altova.mapforce.IEnumerable var4_shared)
		{
			this.var1_current = var1_current;
			this.var2_cur_Cell = var2_cur_Cell;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq231_join closure;
			IEnumerator var5_filter;
			IEnumerator var9_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var10_filter;
			IEnumerator var8_filter;
			public Enumerator(seq231_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var5_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var5_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq232_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq233_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 2; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 11;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var9_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var6_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 4; return false; }
				var7_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var7_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq234_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq235_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 6; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var8_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq236_if_any(((com.altova.mapforce.IMFNode)(var6_filter.current())), ((com.altova.mapforce.IMFNode)(var8_filter.current())), closure.var3_shared))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ChillerType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq242_if_any(((com.altova.mapforce.IMFNode)(var6_filter.current())), ((com.altova.mapforce.IMFNode)(var8_filter.current())), closure.var3_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var9_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq174_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq175_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 11; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq253_map(closure.var1_current, closure.var3_shared, closure.var4_shared))))))) {state = 0; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CondenserPlantID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq264_join(closure.var1_current, closure.var2_cur_Cell, closure.var3_shared, closure.var4_shared)))))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var10_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq244_if_cast(((com.altova.mapforce.IMFNode)(var10_filter.current())), closure.var3_shared))))) {state = 13; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ChillerCompressorType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq252_if_cast(((com.altova.mapforce.IMFNode)(var10_filter.current())), closure.var3_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq232_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq232_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq232_map closure;
			IEnumerator var2_r;
			public Enumerator(seq232_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(30L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq233_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq233_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq233_map closure;
			IEnumerator var2_r;
			public Enumerator(seq233_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(30L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq234_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq234_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq234_map closure;
			IEnumerator var2_r;
			public Enumerator(seq234_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(31L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq235_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq235_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq235_map closure;
			IEnumerator var2_r;
			public Enumerator(seq235_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(31L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq236_if_any implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq236_if_any(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq236_if_any closure;
			public Enumerator(seq236_if_any closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq237_seq_(closure.var1_current, closure.var2_current))))))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq238_map(closure.var3_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq237_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq237_seq_(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq237_seq_ closure;
			public Enumerator(seq237_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq238_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq238_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq238_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq238_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq239_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq240_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq241_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq239_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq239_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq239_map closure;
			IEnumerator var2_r;
			public Enumerator(seq239_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(32L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq240_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq240_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq240_map closure;
			IEnumerator var2_r;
			public Enumerator(seq240_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(32L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq241_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq241_map(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq241_map closure;
			IEnumerator var2_Cell;
			public Enumerator(seq241_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_Cell = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_Cell.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var2_Cell.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_Cell != null ) { var2_Cell.close(); var2_Cell = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_Cell != null ) { var2_Cell.close(); var2_Cell = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq242_if_any implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq242_if_any(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq242_if_any closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			public Enumerator(seq242_if_any closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq243_seq_(closure.var1_current, closure.var2_current))))))) {state = 2; return false; }
				current = "Absorption";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var4_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq239_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq240_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))) {state = 9; return false; }
				current = "Other";
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 7;				
				current = "Vapor compression";
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq243_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq243_seq_(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq243_seq_ closure;
			public Enumerator(seq243_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq244_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq244_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq244_if_cast closure;
			public Enumerator(seq244_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq245_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq245_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq245_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq245_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq245_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq177_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq178_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq246_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq246_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq246_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq246_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq246_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))) {state = 4; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 2;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq247_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq247_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq247_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq247_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq247_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq44_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq45_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq248_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq248_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq248_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq248_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq248_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq249_map(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq249_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq249_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq249_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq249_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq250_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq251_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq208_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq250_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq250_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq250_map closure;
			IEnumerator var2_r;
			public Enumerator(seq250_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(37L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq251_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq251_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq251_map closure;
			IEnumerator var2_r;
			public Enumerator(seq251_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(37L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq252_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq252_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq252_if_cast closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			public Enumerator(seq252_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = "Reciprocating";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq177_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq178_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))) {state = 9; return false; }
				current = "Scroll";
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 12;				
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var5_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq44_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq45_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 12; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 7;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 14;				
				if (!var6_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 14; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 16; return false; }
				current = "Centrifugal";
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 19;				
				var7_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 21;				
				if (!var7_filter.moveNext()) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq250_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq251_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 19; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 14;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 21;				
				if (!var8_filter.moveNext()) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 21; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_filter.current())))))) {state = 21; return false; }
				current = "Other";
				pos++;
				return true;
			}
			private boolean moveNext_22() throws Exception {
				state = 19;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq253_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq253_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq253_map closure;
			IEnumerator var4_shared;
			public Enumerator(seq253_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var4_shared = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var4_shared.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq254_map(((com.altova.mapforce.IMFNode)(var4_shared.current())), closure.var1_current, closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var4_shared != null ) { var4_shared.close(); var4_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_shared != null ) { var4_shared.close(); var4_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq254_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq254_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq254_map closure;
			IEnumerator var4_filter;
			public Enumerator(seq254_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var4_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq255_map(closure.var2_current, closure.var3_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq255_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq255_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq255_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq255_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq256_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq257_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq258_map(closure.var1_current, ((com.altova.mapforce.IMFNode)(var3_filter.current())), closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq256_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq256_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq256_map closure;
			IEnumerator var2_r;
			public Enumerator(seq256_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(42L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq257_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq257_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq257_map closure;
			IEnumerator var2_r;
			public Enumerator(seq257_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(42L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq258_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq258_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq258_map closure;
			IEnumerator var4_filter;
			public Enumerator(seq258_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var2_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var4_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq259_map(closure.var1_current, closure.var3_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq259_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq259_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq259_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq259_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq260_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq261_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq262_map(closure.var1_current, ((com.altova.mapforce.IMFNode)(var3_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq260_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq260_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq260_map closure;
			IEnumerator var2_r;
			public Enumerator(seq260_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(43L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq261_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq261_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq261_map closure;
			IEnumerator var2_r;
			public Enumerator(seq261_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(43L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq262_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq262_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq262_map closure;
			IEnumerator var3_filter;
			boolean var4_cast;
			public Enumerator(seq262_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var2_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				var4_cast = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))));
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq263_seq_(closure.var1_current, var4_cast)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq263_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		boolean var2_shared;
	
		public seq263_seq_(com.altova.mapforce.IMFNode var1_current, boolean var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq263_seq_ closure;
			public Enumerator(seq263_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var2_shared;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = closure.var2_shared;
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = closure.var2_shared;
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 0;				
				current = closure.var2_shared;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq264_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_cur_Cell;
		com.altova.mapforce.IEnumerable var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
	
		public seq264_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_cur_Cell, com.altova.mapforce.IEnumerable var3_shared, com.altova.mapforce.IEnumerable var4_shared)
		{
			this.var1_current = var1_current;
			this.var2_cur_Cell = var2_cur_Cell;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq264_join closure;
			IEnumerator var5_shared;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			IEnumerator var9_filter;
			IEnumerator var10_filter;
			public Enumerator(seq264_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var5_shared = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var5_shared.moveNext()) {state = 3; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var6_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 4; return false; }
				var7_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var7_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq256_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq257_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 6; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var8_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 8; return false; }
				var9_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var9_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq260_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq261_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 10; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var10_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq265_seq_(((com.altova.mapforce.IMFNode)(var10_filter.current())), closure.var1_current, ((com.altova.mapforce.IMFNode)(var6_filter.current())), ((com.altova.mapforce.IMFNode)(var8_filter.current())), closure.var2_cur_Cell))))))) {state = 12; return false; }
				current = "CondenserPlant1";
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq265_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IMFNode var3_current;
		com.altova.mapforce.IMFNode var4_current;
		com.altova.mapforce.IMFNode var5_cur_Cell;
	
		public seq265_seq_(com.altova.mapforce.IMFNode var1_cur_Cell, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IMFNode var3_current, com.altova.mapforce.IMFNode var4_current, com.altova.mapforce.IMFNode var5_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
			this.var2_current = var2_current;
			this.var3_current = var3_current;
			this.var4_current = var4_current;
			this.var5_cur_Cell = var5_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq265_seq_ closure;
			public Enumerator(seq265_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var5_cur_Cell));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var3_current));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var4_current));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_cur_Cell));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq266_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IMFNode var3_current;
		com.altova.mapforce.IMFNode var4_current;
		com.altova.mapforce.IMFNode var5_cur_Cell;
	
		public seq266_seq_(com.altova.mapforce.IMFNode var1_cur_Cell, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IMFNode var3_current, com.altova.mapforce.IMFNode var4_current, com.altova.mapforce.IMFNode var5_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
			this.var2_current = var2_current;
			this.var3_current = var3_current;
			this.var4_current = var4_current;
			this.var5_cur_Cell = var5_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq266_seq_ closure;
			public Enumerator(seq266_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var5_cur_Cell));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var3_current));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var4_current));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_cur_Cell));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq267_join implements IEnumerable
	{
		boolean var1_shared;
		boolean var2_shared;
		boolean var3_shared;
		boolean var4_shared;
		boolean var5_shared;
	
		public seq267_join(boolean var1_shared, boolean var2_shared, boolean var3_shared, boolean var4_shared, boolean var5_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq267_join closure;
			public Enumerator(seq267_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 4;				
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq268_seq_(closure.var1_shared, closure.var2_shared, closure.var3_shared, closure.var4_shared, closure.var5_shared))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box("CondenserPlant1"));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 7;				
				if (!(closure.var5_shared)) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AirCooled", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq269_cond_box(closure.var3_shared, closure.var4_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 10;				
				if (!(closure.var2_shared)) {state = 10; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("WaterCooled", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq228_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if (!(closure.var1_shared)) {state = 0; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("GroundSource", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq228_seq_()));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq268_seq_ implements IEnumerable
	{
		boolean var1_shared;
		boolean var2_shared;
		boolean var3_shared;
		boolean var4_shared;
		boolean var5_shared;
	
		public seq268_seq_(boolean var1_shared, boolean var2_shared, boolean var3_shared, boolean var4_shared, boolean var5_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq268_seq_ closure;
			public Enumerator(seq268_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var5_shared;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var2_shared;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = closure.var1_shared;
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = closure.var3_shared;
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 0;				
				current = closure.var4_shared;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq269_cond_box implements IEnumerable
	{
		boolean var1_shared;
		boolean var2_shared;
	
		public seq269_cond_box(boolean var1_shared, boolean var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq269_cond_box closure;
			public Enumerator(seq269_cond_box closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq270_seq_(closure.var1_shared, closure.var2_shared))))))) {state = 0; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EvaporativelyCooledCondenser", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq228_seq_()));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq270_seq_ implements IEnumerable
	{
		boolean var1_shared;
		boolean var2_shared;
	
		public seq270_seq_(boolean var1_shared, boolean var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq270_seq_ closure;
			public Enumerator(seq270_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_shared;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = closure.var2_shared;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq271_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq271_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq271_if_cast closure;
			public Enumerator(seq271_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq272_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq272_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq272_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq272_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq272_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq66_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq67_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq273_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq273_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq273_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq273_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq273_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))) {state = 4; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 2;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq274_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq274_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq274_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq274_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq274_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq68_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq69_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq275_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq275_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq275_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq275_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq275_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq276_map(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq276_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq276_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq276_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq276_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq277_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq278_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq279_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq277_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq277_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq277_map closure;
			IEnumerator var2_r;
			public Enumerator(seq277_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(16L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq278_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq278_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq278_map closure;
			IEnumerator var2_r;
			public Enumerator(seq278_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(16L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq279_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq279_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq279_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq279_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq280_map(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq280_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq280_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq280_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq280_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq28_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq29_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq241_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq281_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq281_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq281_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq281_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq282_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq19_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq282_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq282_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq282_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq282_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq18_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq283_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		boolean var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
	
		public seq283_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, boolean var3_shared, com.altova.mapforce.IEnumerable var4_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq283_join closure;
			IEnumerator var5_shared;
			IEnumerator var6_filter;
			IEnumerator var7_shared;
			IEnumerator var8_filter;
			public Enumerator(seq283_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("HeatingSource", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq284_join(closure.var1_shared, closure.var2_shared, closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var5_shared = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var5_shared.moveNext()) {state = 4; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 8;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				var7_shared = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var6_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq320_if_cast(((com.altova.mapforce.IMFNode)(var6_filter.current())), closure.var2_shared))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CoolingSource", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq328_join(((com.altova.mapforce.IMFNode)(var6_filter.current())), closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var7_shared.moveNext()) {state = 9; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 0;				
				if( var7_shared != null ) { var7_shared.close(); var7_shared = null; }
				if (!(closure.var3_shared)) {state = 0; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Delivery", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq374_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 10;				
				if (!var8_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 10; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_filter.current())))))) {state = 10; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Delivery", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq373_join(((com.altova.mapforce.IMFNode)(var8_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_shared != null ) { var7_shared.close(); var7_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq284_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		boolean var3_shared;
	
		public seq284_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, boolean var3_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq284_join closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var18_filter;
			IEnumerator var6_filter;
			IEnumerator var19_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			IEnumerator var9_filter;
			IEnumerator var10_filter;
			IEnumerator var11_filter;
			IEnumerator var12_filter;
			IEnumerator var13_filter;
			IEnumerator var14_filter;
			IEnumerator var15_filter;
			java.lang.String var16_cast;
			java.lang.String var17_cast;
			public Enumerator(seq284_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var4_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq285_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq286_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 27;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("HeatingMedium", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq295_if_shared(closure.var2_shared, closure.var3_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 4; return false; }
				var6_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq287_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq288_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var7_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 8; return false; }
				var8_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var8_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq289_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq290_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 10; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var8_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var9_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 12; return false; }
				var10_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 16;				
				if (!var10_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq195_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq196_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 14; return false; }
				var11_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var10_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var11_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 16; return false; }
				var12_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 14;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var12_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq197_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq198_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 18; return false; }
				var13_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var12_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 22;				
				if (!var13_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 20; return false; }
				var14_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 24;				
				if (!var14_filter.moveNext()) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq291_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq292_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 22; return false; }
				var15_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var14_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 20;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 24;				
				if (!var15_filter.moveNext()) {state = 25; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 24; return false; }
				var16_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())));
				var17_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var15_filter.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("HeatingSourceType", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq293_join(((com.altova.mapforce.IMFNode)(var9_filter.current())), ((com.altova.mapforce.IMFNode)(var7_filter.current())), ((com.altova.mapforce.IMFNode)(var11_filter.current())), ((com.altova.mapforce.IMFNode)(var13_filter.current())), var16_cast, var17_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_25() throws Exception {
				state = 22;				
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 28;				
				var18_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_28() throws Exception {
				state = 30;				
				if (!var18_filter.moveNext()) {state = 29; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq296_map(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))))) {state = 28; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq297_map(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))))) {state = 28; return false; }
				var19_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var18_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_29() throws Exception {
				state = 0;				
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				return false;
			}
			private boolean moveNext_30() throws Exception {
				state = 30;				
				if (!var19_filter.moveNext()) {state = 31; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))))) {state = 30; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq298_if_cast(((com.altova.mapforce.IMFNode)(var19_filter.current())), closure.var1_shared, closure.var2_shared))))) {state = 30; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PrimaryFuel", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq317_if_cast(((com.altova.mapforce.IMFNode)(var19_filter.current())), closure.var1_shared, closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_31() throws Exception {
				state = 28;				
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq285_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq285_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq285_map closure;
			IEnumerator var2_r;
			public Enumerator(seq285_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(45L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq286_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq286_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq286_map closure;
			IEnumerator var2_r;
			public Enumerator(seq286_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(45L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq287_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq287_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq287_map closure;
			IEnumerator var2_r;
			public Enumerator(seq287_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(46L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq288_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq288_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq288_map closure;
			IEnumerator var2_r;
			public Enumerator(seq288_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(46L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq289_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq289_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq289_map closure;
			IEnumerator var2_r;
			public Enumerator(seq289_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(47L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq290_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq290_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq290_map closure;
			IEnumerator var2_r;
			public Enumerator(seq290_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(47L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq291_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq291_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq291_map closure;
			IEnumerator var2_r;
			public Enumerator(seq291_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(50L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq292_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq292_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq292_map closure;
			IEnumerator var2_r;
			public Enumerator(seq292_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(50L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq293_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IMFNode var3_current;
		com.altova.mapforce.IMFNode var4_current;
		java.lang.String var5_shared;
		java.lang.String var6_shared;
	
		public seq293_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IMFNode var3_current, com.altova.mapforce.IMFNode var4_current, java.lang.String var5_shared, java.lang.String var6_shared)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
			this.var3_current = var3_current;
			this.var4_current = var4_current;
			this.var5_shared = var5_shared;
			this.var6_shared = var6_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq293_join closure;
			public Enumerator(seq293_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 4;				
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq294_seq_(closure.var3_current, closure.var4_current))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("SourceHeatingPlantID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("HeatiingPlant1"))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 7;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current)))) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Furnace", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FurnaceType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Warm air"))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 10;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 10; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("HeatPump", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq228_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 13;				
				if (!(com.altova.CoreTypes.parseBoolean(closure.var6_shared))) {state = 13; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OtherCombination", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(closure.var6_shared));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(closure.var5_shared))) {state = 0; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("NoHeating", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(closure.var5_shared));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq294_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq294_seq_(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq294_seq_ closure;
			public Enumerator(seq294_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq295_if_shared implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		boolean var2_shared;
	
		public seq295_if_shared(com.altova.mapforce.IEnumerable var1_shared, boolean var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq295_if_shared closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			IEnumerator var9_filter;
			IEnumerator var10_filter;
			public Enumerator(seq295_if_shared closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(closure.var2_shared)) {state = 2; return false; }
				current = "Air";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq66_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq67_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))) {state = 9; return false; }
				current = "Hot water";
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 12;				
				var5_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var5_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq68_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq69_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 12; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 7;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 14;				
				if (!var6_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 14; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 16; return false; }
				current = "Steam";
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 19;				
				var7_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 21;				
				if (!var7_filter.moveNext()) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq277_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq278_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 19; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 14;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 23;				
				if (!var8_filter.moveNext()) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 21; return false; }
				var9_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 19;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if (!var9_filter.moveNext()) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq28_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq29_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 23; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 21;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 25;				
				if (!var10_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 25; return false; }
				current = "Other";
				pos++;
				return true;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq296_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq296_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq296_map closure;
			IEnumerator var2_r;
			public Enumerator(seq296_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(58L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq297_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq297_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq297_map closure;
			IEnumerator var2_r;
			public Enumerator(seq297_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(58L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq298_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq298_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq298_if_cast closure;
			public Enumerator(seq298_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq299_map(closure.var2_shared, closure.var3_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq299_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq299_map(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq299_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq299_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq300_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq301_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq302_map(((com.altova.mapforce.IMFNode)(var3_filter.current())), closure.var1_shared, closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq300_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq300_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq300_map closure;
			IEnumerator var2_r;
			public Enumerator(seq300_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(59L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq301_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq301_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq301_map closure;
			IEnumerator var2_r;
			public Enumerator(seq301_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(59L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq302_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq302_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq302_map closure;
			IEnumerator var4_filter;
			public Enumerator(seq302_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var4_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))) {state = 4; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 2;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq303_map(closure.var2_shared, closure.var3_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq303_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq303_map(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq303_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq303_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq304_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq305_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq306_map(((com.altova.mapforce.IMFNode)(var3_filter.current())), closure.var1_shared, closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq304_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq304_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq304_map closure;
			IEnumerator var2_r;
			public Enumerator(seq304_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(60L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq305_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq305_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq305_map closure;
			IEnumerator var2_r;
			public Enumerator(seq305_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(60L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq306_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq306_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq306_map closure;
			IEnumerator var4_filter;
			public Enumerator(seq306_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var4_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq307_map(closure.var2_shared, closure.var3_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq307_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq307_map(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq307_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq307_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq308_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq309_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq310_map(((com.altova.mapforce.IMFNode)(var3_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq308_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq308_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq308_map closure;
			IEnumerator var2_r;
			public Enumerator(seq308_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(61L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq309_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq309_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq309_map closure;
			IEnumerator var2_r;
			public Enumerator(seq309_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(61L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq310_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq310_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq310_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq310_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))) {state = 4; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq311_map(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq311_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq311_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq311_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq311_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq312_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq313_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq312_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq312_map(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq312_map closure;
			IEnumerator var2_Name;
			public Enumerator(seq312_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_Name = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_n)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_Name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_Name.current()))), "L2 - HVAC");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq313_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq313_map(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq313_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq313_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq314_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq315_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq316_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq314_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq314_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq314_map closure;
			IEnumerator var2_r;
			public Enumerator(seq314_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(26L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq315_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq315_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq315_map closure;
			IEnumerator var2_r;
			public Enumerator(seq315_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(26L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq316_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq316_map(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq316_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq316_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.exists(com.mapforce.vmf.vmf12_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq317_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq317_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq317_if_cast closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			IEnumerator var11_filter;
			IEnumerator var9_filter;
			IEnumerator var12_filter;
			IEnumerator var10_filter;
			IEnumerator var13_filter;
			IEnumerator var14_filter;
			IEnumerator var15_filter;
			public Enumerator(seq317_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 32:	if (moveNext_32()) return true; break;
					case 33:	if (moveNext_33()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
					case 35:	if (moveNext_35()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = "Electricity";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var4_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq300_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq301_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))) {state = 9; return false; }
				current = "Natural gas";
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 12;				
				var6_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var6_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq304_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq305_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 12; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 7;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 17;				
				if (!var7_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 14; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var7_filter.current())))))) {state = 16; return false; }
				var8_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 25;				
				var11_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 19;				
				if (!var8_filter.moveNext()) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq312_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 17; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var8_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 14;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 21;				
				if (!var9_filter.moveNext()) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq318_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq319_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 19; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 17;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 21;				
				if (!var10_filter.moveNext()) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 21; return false; }
				current = com.mapforce.vmf.vmf11_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var10_filter.current()))));
				pos++;
				return true;
			}
			private boolean moveNext_22() throws Exception {
				state = 19;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 27;				
				if (!var11_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq308_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 25; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq309_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 25; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 14;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 30;				
				if (!var12_filter.moveNext()) {state = 28; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 27; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var12_filter.current())))))) {state = 29; return false; }
				var13_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_28() throws Exception {
				state = 25;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_29() throws Exception {
				state = 27;				
				current = "Unknown";
				pos++;
				return true;
			}
			private boolean moveNext_30() throws Exception {
				state = 32;				
				if (!var13_filter.moveNext()) {state = 31; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq312_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 30; return false; }
				var14_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var13_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_31() throws Exception {
				state = 27;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_32() throws Exception {
				state = 34;				
				if (!var14_filter.moveNext()) {state = 33; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq314_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 32; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq315_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 32; return false; }
				var15_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var14_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_33() throws Exception {
				state = 30;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}
			private boolean moveNext_34() throws Exception {
				state = 34;				
				if (!var15_filter.moveNext()) {state = 35; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 34; return false; }
				if (!(com.altova.functions.Core.exists(com.mapforce.vmf.vmf12_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))) {state = 34; return false; }
				current = (java.lang.String)com.altova.functions.Core.first(com.mapforce.vmf.vmf12_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var15_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_35() throws Exception {
				state = 32;				
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq318_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq318_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq318_map closure;
			IEnumerator var2_r;
			public Enumerator(seq318_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(25L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq319_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq319_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq319_map closure;
			IEnumerator var2_r;
			public Enumerator(seq319_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(25L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq320_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq320_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq320_if_cast closure;
			public Enumerator(seq320_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq321_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq321_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq321_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq321_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq321_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq11_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq12_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq322_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq322_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq322_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq322_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq322_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))) {state = 4; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 2;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq323_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq323_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq323_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq323_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq323_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq13_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq14_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq324_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq324_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq324_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq324_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq324_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq325_map(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq325_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq325_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq325_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq325_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq15_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq16_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq326_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq326_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq326_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq326_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq326_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq327_map(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq327_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq327_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq327_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq327_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq101_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq102_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq241_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq328_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq328_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq328_join closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var18_filter;
			IEnumerator var6_filter;
			IEnumerator var19_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			IEnumerator var9_filter;
			IEnumerator var10_filter;
			IEnumerator var11_filter;
			IEnumerator var12_filter;
			IEnumerator var13_filter;
			IEnumerator var14_filter;
			IEnumerator var15_filter;
			java.lang.String var16_cast;
			java.lang.String var17_cast;
			public Enumerator(seq328_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var4_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq32_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq33_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 27;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CoolingMedium", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq355_if_cast(closure.var1_current, closure.var3_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 4; return false; }
				var6_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq56_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq57_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var7_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 8; return false; }
				var8_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var8_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq64_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 10; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var8_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var9_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 12; return false; }
				var10_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 16;				
				if (!var10_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq184_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq185_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 14; return false; }
				var11_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var10_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var11_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 16; return false; }
				var12_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 14;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var12_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq89_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq90_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 18; return false; }
				var13_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var12_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 22;				
				if (!var13_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 20; return false; }
				var14_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 24;				
				if (!var14_filter.moveNext()) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq91_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq92_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 22; return false; }
				var15_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var14_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 20;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 24;				
				if (!var15_filter.moveNext()) {state = 25; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq329_seq_(((com.altova.mapforce.IMFNode)(var7_filter.current())), ((com.altova.mapforce.IMFNode)(var5_filter.current())), ((com.altova.mapforce.IMFNode)(var13_filter.current())), ((com.altova.mapforce.IMFNode)(var15_filter.current())), ((com.altova.mapforce.IMFNode)(var9_filter.current())), ((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 24; return false; }
				var16_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var15_filter.current())));
				var17_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CoolingSourceType", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq330_join(((com.altova.mapforce.IMFNode)(var7_filter.current())), ((com.altova.mapforce.IMFNode)(var13_filter.current())), ((com.altova.mapforce.IMFNode)(var9_filter.current())), ((com.altova.mapforce.IMFNode)(var11_filter.current())), closure.var3_shared, var16_cast, var17_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_25() throws Exception {
				state = 22;				
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 28;				
				var18_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_28() throws Exception {
				state = 30;				
				if (!var18_filter.moveNext()) {state = 29; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq314_map(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))))) {state = 28; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq315_map(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))))) {state = 28; return false; }
				var19_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var18_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_29() throws Exception {
				state = 0;				
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				return false;
			}
			private boolean moveNext_30() throws Exception {
				state = 30;				
				if (!var19_filter.moveNext()) {state = 31; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))))) {state = 30; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq356_if_cast(((com.altova.mapforce.IMFNode)(var19_filter.current())), closure.var2_shared, closure.var3_shared))))) {state = 30; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PrimaryFuel", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq372_if_cast(((com.altova.mapforce.IMFNode)(var19_filter.current())), closure.var2_shared, closure.var3_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_31() throws Exception {
				state = 28;				
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq329_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IMFNode var3_cur_Cell;
		com.altova.mapforce.IMFNode var4_cur_Cell;
		com.altova.mapforce.IMFNode var5_current;
		com.altova.mapforce.IMFNode var6_current;
	
		public seq329_seq_(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IMFNode var3_cur_Cell, com.altova.mapforce.IMFNode var4_cur_Cell, com.altova.mapforce.IMFNode var5_current, com.altova.mapforce.IMFNode var6_current)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
			this.var3_cur_Cell = var3_cur_Cell;
			this.var4_cur_Cell = var4_cur_Cell;
			this.var5_current = var5_current;
			this.var6_current = var6_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq329_seq_ closure;
			public Enumerator(seq329_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var5_current));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var6_current));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var3_cur_Cell));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var4_cur_Cell));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq330_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_cur_Cell;
		com.altova.mapforce.IMFNode var3_current;
		com.altova.mapforce.IMFNode var4_current;
		com.altova.mapforce.IEnumerable var5_shared;
		java.lang.String var6_shared;
		java.lang.String var7_shared;
	
		public seq330_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_cur_Cell, com.altova.mapforce.IMFNode var3_current, com.altova.mapforce.IMFNode var4_current, com.altova.mapforce.IEnumerable var5_shared, java.lang.String var6_shared, java.lang.String var7_shared)
		{
			this.var1_current = var1_current;
			this.var2_cur_Cell = var2_cur_Cell;
			this.var3_current = var3_current;
			this.var4_current = var4_current;
			this.var5_shared = var5_shared;
			this.var6_shared = var6_shared;
			this.var7_shared = var7_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq330_join closure;
			com.altova.mapforce.IEnumerable var8_filter;
			public Enumerator(seq330_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 4;				
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq331_seq_(closure.var2_cur_Cell, closure.var3_current, closure.var4_current))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CoolingPlantID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("CoolingPlant1"))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 7;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 7; return false; }
				var8_filter = new com.altova.functions.Core.SequenceCache((new seq332_filter(closure.var5_shared)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("DX", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq334_join(closure.var5_shared, var8_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 10;				
				if (!(com.altova.CoreTypes.parseBoolean(closure.var6_shared))) {state = 10; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OtherCombination", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(closure.var6_shared));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(closure.var7_shared))) {state = 0; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("NoCooling", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(closure.var7_shared));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq331_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IMFNode var3_current;
	
		public seq331_seq_(com.altova.mapforce.IMFNode var1_cur_Cell, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IMFNode var3_current)
		{
			this.var1_cur_Cell = var1_cur_Cell;
			this.var2_current = var2_current;
			this.var3_current = var3_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq331_seq_ closure;
			public Enumerator(seq331_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var3_current));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_cur_Cell));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq332_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq332_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq332_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq332_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq333_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq187_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq333_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq333_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq333_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq333_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq186_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq334_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq334_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq334_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq334_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq174_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq175_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(closure.var1_shared, closure.var2_shared))))))) {state = 0; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CondenserPlantID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq353_join(closure.var1_shared, closure.var2_shared)))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq335_if_cast(((com.altova.mapforce.IMFNode)(var4_filter.current())), closure.var1_shared))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CompressorType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq341_if_cast(((com.altova.mapforce.IMFNode)(var4_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq335_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq335_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq335_if_cast closure;
			public Enumerator(seq335_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq336_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq336_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq336_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq336_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq336_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq177_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq178_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq337_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq337_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq337_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq337_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq337_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))) {state = 4; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 2;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq338_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq338_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq338_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq338_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq338_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq44_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq45_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq339_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq339_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq339_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq339_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq339_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq340_map(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq340_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq340_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq340_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq340_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq250_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq251_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq208_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq341_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq341_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq341_if_cast closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			public Enumerator(seq341_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = "Reciprocating";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq177_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq178_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))) {state = 9; return false; }
				current = "Scroll";
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 12;				
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var5_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq44_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq45_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 12; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 7;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 14;				
				if (!var6_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 14; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 16; return false; }
				current = "Centrifugal";
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 19;				
				var7_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 21;				
				if (!var7_filter.moveNext()) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq250_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq251_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 19; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 14;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 21;				
				if (!var8_filter.moveNext()) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 21; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_filter.current())))))) {state = 21; return false; }
				current = "Other";
				pos++;
				return true;
			}
			private boolean moveNext_22() throws Exception {
				state = 19;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq342_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq342_map(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq342_map closure;
			IEnumerator var3_shared;
			public Enumerator(seq342_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq343_map(((com.altova.mapforce.IMFNode)(var3_shared.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq343_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq343_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq343_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq343_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq344_map(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq344_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq344_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq344_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq344_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq188_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq189_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq345_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq345_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq345_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq345_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq346_map(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq346_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq346_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq346_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq346_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq192_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq193_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq347_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq347_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq347_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq347_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq347_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq348_map(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq348_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq348_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq348_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq348_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq256_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq257_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq349_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq349_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq349_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq349_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq349_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq350_map(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq350_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq350_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq350_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq350_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq260_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq261_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq351_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq351_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq351_map(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq351_map closure;
			IEnumerator var2_filter;
			boolean var3_cast;
			public Enumerator(seq351_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_cast = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq352_seq_(var3_cast)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq352_seq_ implements IEnumerable
	{
		boolean var1_shared;
	
		public seq352_seq_(boolean var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq352_seq_ closure;
			public Enumerator(seq352_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_shared;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var1_shared;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = closure.var1_shared;
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = closure.var1_shared;
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 0;				
				current = closure.var1_shared;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq353_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq353_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq353_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			IEnumerator var9_filter;
			IEnumerator var10_filter;
			IEnumerator var11_filter;
			IEnumerator var12_filter;
			public Enumerator(seq353_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq188_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq189_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var6_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 8; return false; }
				var7_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var7_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq192_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq193_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 10; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var8_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 12; return false; }
				var9_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 16;				
				if (!var9_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq256_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq257_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 14; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var10_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 16; return false; }
				var11_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 14;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var11_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq260_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq261_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 18; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 20;				
				if (!var12_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq354_seq_(((com.altova.mapforce.IMFNode)(var12_filter.current())), ((com.altova.mapforce.IMFNode)(var8_filter.current())), ((com.altova.mapforce.IMFNode)(var4_filter.current())), ((com.altova.mapforce.IMFNode)(var10_filter.current())), ((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 20; return false; }
				current = "CondenserPlant1";
				pos++;
				return true;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq354_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IMFNode var3_current;
		com.altova.mapforce.IMFNode var4_current;
		com.altova.mapforce.IMFNode var5_current;
	
		public seq354_seq_(com.altova.mapforce.IMFNode var1_cur_Cell, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IMFNode var3_current, com.altova.mapforce.IMFNode var4_current, com.altova.mapforce.IMFNode var5_current)
		{
			this.var1_cur_Cell = var1_cur_Cell;
			this.var2_current = var2_current;
			this.var3_current = var3_current;
			this.var4_current = var4_current;
			this.var5_current = var5_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq354_seq_ closure;
			public Enumerator(seq354_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var3_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var5_current));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var4_current));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_cur_Cell));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq355_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq355_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq355_if_cast closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			IEnumerator var9_filter;
			IEnumerator var10_filter;
			public Enumerator(seq355_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = "Air";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq11_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq12_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))) {state = 9; return false; }
				current = "Chilled water";
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 12;				
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var5_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq13_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq14_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 12; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 7;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 14;				
				if (!var6_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 14; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 16; return false; }
				current = "Refrigerant";
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 19;				
				var7_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 21;				
				if (!var7_filter.moveNext()) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq15_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq16_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 19; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 14;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 23;				
				if (!var8_filter.moveNext()) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 21; return false; }
				var9_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 19;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if (!var9_filter.moveNext()) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq101_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq102_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 23; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 21;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 25;				
				if (!var10_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 25; return false; }
				current = "Other";
				pos++;
				return true;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq356_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq356_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq356_if_cast closure;
			public Enumerator(seq356_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq357_map(closure.var2_shared, closure.var3_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq357_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq357_map(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq357_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq357_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq358_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq359_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq360_map(((com.altova.mapforce.IMFNode)(var3_filter.current())), closure.var1_shared, closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq358_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq358_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq358_map closure;
			IEnumerator var2_r;
			public Enumerator(seq358_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(27L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq359_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq359_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq359_map closure;
			IEnumerator var2_r;
			public Enumerator(seq359_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(27L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq360_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq360_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq360_map closure;
			IEnumerator var4_filter;
			public Enumerator(seq360_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var4_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))) {state = 4; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 2;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq361_map(closure.var2_shared, closure.var3_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq361_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq361_map(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq361_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq361_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq362_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq363_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq364_map(((com.altova.mapforce.IMFNode)(var3_filter.current())), closure.var1_shared, closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq362_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq362_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq362_map closure;
			IEnumerator var2_r;
			public Enumerator(seq362_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(28L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq363_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq363_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq363_map closure;
			IEnumerator var2_r;
			public Enumerator(seq363_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(28L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq364_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq364_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq364_map closure;
			IEnumerator var4_filter;
			public Enumerator(seq364_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var4_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq365_map(closure.var2_shared, closure.var3_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq365_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq365_map(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq365_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq365_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq366_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq367_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq368_map(((com.altova.mapforce.IMFNode)(var3_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq366_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq366_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq366_map closure;
			IEnumerator var2_r;
			public Enumerator(seq366_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(29L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq367_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq367_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq367_map closure;
			IEnumerator var2_r;
			public Enumerator(seq367_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(29L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq368_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq368_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq368_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq368_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))) {state = 4; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq369_map(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq369_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq369_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq369_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq369_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq312_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq370_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq370_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq370_map(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq370_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq370_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq40_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq371_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq371_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq371_map(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq371_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq371_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.exists(com.mapforce.vmf.vmf14_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq372_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq372_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq372_if_cast closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			IEnumerator var11_filter;
			IEnumerator var9_filter;
			IEnumerator var12_filter;
			IEnumerator var10_filter;
			IEnumerator var13_filter;
			IEnumerator var14_filter;
			IEnumerator var15_filter;
			public Enumerator(seq372_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 32:	if (moveNext_32()) return true; break;
					case 33:	if (moveNext_33()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
					case 35:	if (moveNext_35()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = "Electricity";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var4_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq358_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq359_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))) {state = 9; return false; }
				current = "Natural gas";
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 12;				
				var6_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var6_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq362_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq363_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 12; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 7;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 17;				
				if (!var7_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 14; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var7_filter.current())))))) {state = 16; return false; }
				var8_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 25;				
				var11_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 19;				
				if (!var8_filter.moveNext()) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq312_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 17; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var8_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 14;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 21;				
				if (!var9_filter.moveNext()) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq28_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq29_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 19; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 17;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 21;				
				if (!var10_filter.moveNext()) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 21; return false; }
				current = com.mapforce.vmf.vmf13_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var10_filter.current()))));
				pos++;
				return true;
			}
			private boolean moveNext_22() throws Exception {
				state = 19;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 27;				
				if (!var11_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq366_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 25; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq367_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 25; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 14;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 30;				
				if (!var12_filter.moveNext()) {state = 28; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 27; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var12_filter.current())))))) {state = 29; return false; }
				var13_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_28() throws Exception {
				state = 25;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_29() throws Exception {
				state = 27;				
				current = "Unknown";
				pos++;
				return true;
			}
			private boolean moveNext_30() throws Exception {
				state = 32;				
				if (!var13_filter.moveNext()) {state = 31; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq312_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 30; return false; }
				var14_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var13_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_31() throws Exception {
				state = 27;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_32() throws Exception {
				state = 34;				
				if (!var14_filter.moveNext()) {state = 33; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 32; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq40_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 32; return false; }
				var15_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var14_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_33() throws Exception {
				state = 30;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}
			private boolean moveNext_34() throws Exception {
				state = 34;				
				if (!var15_filter.moveNext()) {state = 35; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 34; return false; }
				if (!(com.altova.functions.Core.exists(com.mapforce.vmf.vmf14_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))) {state = 34; return false; }
				current = (java.lang.String)com.altova.functions.Core.first(com.mapforce.vmf.vmf14_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var15_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_35() throws Exception {
				state = 32;				
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq373_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq373_join(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq373_join closure;
			public Enumerator(seq373_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 4;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 4; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box("AHU1"));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("DeliveryType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FanBased", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FanBasedDistributionType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CentralAirDistribution", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AirDeliveryType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Central fan"))))))))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq374_seq_ implements IEnumerable
	{
	
		public seq374_seq_()
		{
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq374_seq_ closure;
			public Enumerator(seq374_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box("AHU2"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("DeliveryType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FanBased", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FanBasedDistributionType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CentralAirDistribution", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AirDeliveryType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Central fan"))))))))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq375_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq375_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq375_map closure;
			IEnumerator var2_r;
			public Enumerator(seq375_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(2L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq376_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq376_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq376_map closure;
			IEnumerator var2_r;
			public Enumerator(seq376_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(2L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq377_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq377_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq377_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq377_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq378_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq378_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq378_map(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq378_map closure;
			IEnumerator var2_Name;
			public Enumerator(seq378_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_Name = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_n)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_Name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_Name.current()))), "L2 HVAC, Process, Plug Inventor");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq379_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq379_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq379_join closure;
			IEnumerator var2_shared;
			com.altova.mapforce.IEnumerable var3_Row;
			IEnumerator var4_filter;
			IEnumerator var8_shared;
			com.altova.mapforce.IEnumerable var9_Row;
			com.altova.mapforce.IEnumerable var5_Cell;
			IEnumerator var10_filter;
			IEnumerator var14_shared;
			IEnumerator var6_filter;
			com.altova.mapforce.IEnumerable var15_Row;
			com.altova.mapforce.IEnumerable var11_Cell;
			IEnumerator var16_filter;
			IEnumerator var20_shared;
			IEnumerator var12_filter;
			com.altova.mapforce.IEnumerable var7_filter;
			com.altova.mapforce.IEnumerable var21_Row;
			com.altova.mapforce.IEnumerable var17_Cell;
			IEnumerator var22_filter;
			IEnumerator var18_filter;
			com.altova.mapforce.IEnumerable var13_filter;
			com.altova.mapforce.IEnumerable var23_Cell;
			IEnumerator var24_filter;
			com.altova.mapforce.IEnumerable var19_filter;
			com.altova.mapforce.IEnumerable var25_filter;
			public Enumerator(seq379_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				var3_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_shared.current()))));
				var4_filter = (var3_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 9;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				var8_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq73_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current()))));
				var6_filter = (var5_Cell).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				if (!(com.altova.functions.Core.equal("Humidifier", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 6; return false; }
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq380_filter(var3_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OtherHVACSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq382_join(var5_Cell, var7_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var8_shared.moveNext()) {state = 10; return false; }
				var9_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var8_shared.current()))));
				var10_filter = (var9_Row).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 16;				
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				var14_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var10_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq73_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 11; return false; }
				var11_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var10_filter.current()))));
				var12_filter = (var11_Cell).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var12_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 13; return false; }
				if (!(com.altova.functions.Core.equal("Dehumidifier", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var12_filter.current())))))) {state = 13; return false; }
				var13_filter = new com.altova.functions.Core.SequenceCache((new seq380_filter(var9_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OtherHVACSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq394_join(var11_Cell, var13_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var14_shared.moveNext()) {state = 17; return false; }
				var15_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var14_shared.current()))));
				var16_filter = (var15_Row).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 23;				
				if( var14_shared != null ) { var14_shared.close(); var14_shared = null; }
				var20_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var16_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq73_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 18; return false; }
				var17_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var16_filter.current()))));
				var18_filter = (var17_Cell).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 20;				
				if (!var18_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))))) {state = 20; return false; }
				if (!(com.altova.functions.Core.equal("Mechanical Ventilation", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var18_filter.current())))))) {state = 20; return false; }
				var19_filter = new com.altova.functions.Core.SequenceCache((new seq380_filter(var15_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OtherHVACSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq397_join(var17_Cell, var19_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if (!var20_shared.moveNext()) {state = 24; return false; }
				var21_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var20_shared.current()))));
				var22_filter = (var21_Row).enumerator();
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 0;				
				if( var20_shared != null ) { var20_shared.close(); var20_shared = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 27;				
				if (!var22_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq73_map(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))))) {state = 25; return false; }
				var23_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var22_filter.current()))));
				var24_filter = (var23_Cell).enumerator();
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 27;				
				if (!var24_filter.moveNext()) {state = 28; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var24_filter.current()))))))))) {state = 27; return false; }
				if (!(com.altova.functions.Core.equal("Spot Exhaust", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var24_filter.current())))))) {state = 27; return false; }
				var25_filter = new com.altova.functions.Core.SequenceCache((new seq380_filter(var21_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OtherHVACSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq398_join(var23_Cell, var25_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_28() throws Exception {
				state = 25;				
				if( var24_filter != null ) { var24_filter.close(); var24_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				if( var14_shared != null ) { var14_shared.close(); var14_shared = null; }
				if( var24_filter != null ) { var24_filter.close(); var24_filter = null; }
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				if( var20_shared != null ) { var20_shared.close(); var20_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq380_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq380_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq380_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq380_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq381_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq42_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq381_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq381_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq381_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq381_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq41_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq382_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq382_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq382_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq382_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("Humidifier", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OtherHVACType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Humidifier", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq384_join(closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var5_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 9; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq387_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				var6_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var6_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 13; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq383_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq383_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq383_map closure;
			IEnumerator var2_n;
			public Enumerator(seq383_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(1L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq384_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq384_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq384_join closure;
			IEnumerator var2_filter;
			IEnumerator var3_filter;
			public Enumerator(seq384_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Capacity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq385_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CapacityUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq385_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq385_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq385_map closure;
			IEnumerator var2_n;
			public Enumerator(seq385_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(8L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq386_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq386_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq386_map closure;
			IEnumerator var2_n;
			public Enumerator(seq386_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(10L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq387_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq387_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq387_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			public Enumerator(seq387_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq388_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var3_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq389_join(((com.altova.mapforce.IMFNode)(var3_filter.current())), closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq390_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq391_join(((com.altova.mapforce.IMFNode)(var4_filter.current())), closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var5_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq392_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 9; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq393_join(((com.altova.mapforce.IMFNode)(var5_filter.current())), closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq388_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq388_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq388_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			public Enumerator(seq388_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 7;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var5_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 0;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq389_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq389_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq389_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			public Enumerator(seq389_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_current)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq390_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq390_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq390_map closure;
			IEnumerator var2_n;
			public Enumerator(seq390_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(9L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq391_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq391_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq391_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			public Enumerator(seq391_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_current)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq390_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq392_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq392_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq392_map closure;
			IEnumerator var2_n;
			public Enumerator(seq392_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(11L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq393_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq393_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq393_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			public Enumerator(seq393_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_current)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq392_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq394_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq394_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq394_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq394_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("Dehumidifier", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OtherHVACType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Dehumidifier", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq384_join(closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var5_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 9; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq395_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				var6_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var6_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 13; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq395_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq395_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq395_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_shared;
			IEnumerator var6_filter;
			public Enumerator(seq395_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq388_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var3_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq389_join(((com.altova.mapforce.IMFNode)(var3_filter.current())), closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq390_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq391_join(((com.altova.mapforce.IMFNode)(var4_filter.current())), closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var5_shared.moveNext()) {state = 10; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq392_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq396_join(((com.altova.mapforce.IMFNode)(var6_filter.current())), closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq396_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq396_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq396_join closure;
			IEnumerator var3_filter;
			public Enumerator(seq396_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_current)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var3_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq392_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq397_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq397_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq397_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq397_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("MechanicalVentilation", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OtherHVACType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MechanicalVentilation", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq384_join(closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var5_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 9; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq387_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				var6_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var6_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 13; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq398_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq398_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq398_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq398_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("SpotExhaust", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OtherHVACType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("SpotExhaust", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq384_join(closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var5_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 9; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq387_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				var6_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var6_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 13; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq399_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq399_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq399_join closure;
			IEnumerator var2_shared;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq399_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq91_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq92_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq400_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq400_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq400_join closure;
			IEnumerator var2_filter;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq400_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Other cooling system type: "));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var2_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq312_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 3; return false; }
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq184_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq185_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq401_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq401_map(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq401_map closure;
			IEnumerator var2_Name;
			public Enumerator(seq401_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_Name = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_n)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_Name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_Name.current()))), "L2 - Lighting");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq402_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq402_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq402_filter closure;
			IEnumerator var2_Row;
			public Enumerator(seq402_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_Row = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_Row.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq11_map(((com.altova.mapforce.IMFNode)(var2_Row.current()))))))))) {state = 2; return false; }
				current = var2_Row.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_Row != null ) { var2_Row.close(); var2_Row = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_Row != null ) { var2_Row.close(); var2_Row = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq403_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq403_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq403_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Cell;
			IEnumerator var4_filter;
			java.lang.String var5_vmf15_inputtoresult;
			boolean var6_equal;
			boolean var7_equal;
			boolean var8_equal;
			boolean var9_equal;
			boolean var10_equal;
			boolean var11_equal;
			boolean var12_equal;
			boolean var13_equal;
			boolean var14_equal;
			boolean var15_equal;
			boolean var16_equal;
			boolean var17_equal;
			com.altova.mapforce.IEnumerable var18_filter;
			com.altova.mapforce.IEnumerable var19_filter;
			public Enumerator(seq403_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq69_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Cell).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_vmf15_inputtoresult = com.mapforce.vmf.vmf15_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))));
				var6_equal = com.altova.functions.Core.equal("Linear Fluorescent", var5_vmf15_inputtoresult);
				var7_equal = com.altova.functions.Core.equal("Photoluminescent", var5_vmf15_inputtoresult);
				var8_equal = com.altova.functions.Core.equal("Induction", var5_vmf15_inputtoresult);
				var9_equal = com.altova.functions.Core.equal("Compact Fluorescent", var5_vmf15_inputtoresult);
				var10_equal = com.altova.functions.Core.equal("Solid State Lighting", var5_vmf15_inputtoresult);
				var11_equal = com.altova.functions.Core.equal("Other", var5_vmf15_inputtoresult);
				var12_equal = com.altova.functions.Core.equal("Self-Luminous", var5_vmf15_inputtoresult);
				var13_equal = com.altova.functions.Core.equal("Neon", var5_vmf15_inputtoresult);
				var14_equal = com.altova.functions.Core.equal("Plasma", var5_vmf15_inputtoresult);
				var15_equal = com.altova.functions.Core.equal("High Intensity Discharge", var5_vmf15_inputtoresult);
				var16_equal = com.altova.functions.Core.equal("Incandescent", var5_vmf15_inputtoresult);
				var17_equal = com.altova.functions.Core.equal("Halogen", var5_vmf15_inputtoresult);
				var18_filter = new com.altova.functions.Core.SequenceCache((new seq404_filter(var3_Cell)));
				var19_filter = new com.altova.functions.Core.SequenceCache((new seq405_filter(var3_Cell)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("LightingSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq406_join(var18_filter, var8_equal, var12_equal, var16_equal, var19_filter, var7_equal, var17_equal, var10_equal, var6_equal, var9_equal, var11_equal, var13_equal, var3_Cell, var15_equal, var14_equal)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq404_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq404_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq404_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq404_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq405_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq405_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq405_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq405_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq406_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		boolean var2_shared;
		boolean var3_shared;
		boolean var4_shared;
		com.altova.mapforce.IEnumerable var5_shared;
		boolean var6_shared;
		boolean var7_shared;
		boolean var8_shared;
		boolean var9_shared;
		boolean var10_shared;
		boolean var11_shared;
		boolean var12_shared;
		com.altova.mapforce.IEnumerable var13_shared;
		boolean var14_shared;
		boolean var15_shared;
	
		public seq406_join(com.altova.mapforce.IEnumerable var1_shared, boolean var2_shared, boolean var3_shared, boolean var4_shared, com.altova.mapforce.IEnumerable var5_shared, boolean var6_shared, boolean var7_shared, boolean var8_shared, boolean var9_shared, boolean var10_shared, boolean var11_shared, boolean var12_shared, com.altova.mapforce.IEnumerable var13_shared, boolean var14_shared, boolean var15_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
			this.var6_shared = var6_shared;
			this.var7_shared = var7_shared;
			this.var8_shared = var8_shared;
			this.var9_shared = var9_shared;
			this.var10_shared = var10_shared;
			this.var11_shared = var11_shared;
			this.var12_shared = var12_shared;
			this.var13_shared = var13_shared;
			this.var14_shared = var14_shared;
			this.var15_shared = var15_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq406_join closure;
			IEnumerator var16_filter;
			IEnumerator var17_filter;
			IEnumerator var18_filter;
			IEnumerator var19_filter;
			IEnumerator var20_filter;
			IEnumerator var21_filter;
			IEnumerator var22_filter;
			public Enumerator(seq406_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("LampType", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq407_join(closure.var2_shared, closure.var3_shared, closure.var4_shared, closure.var6_shared, closure.var7_shared, closure.var8_shared, closure.var9_shared, closure.var10_shared, closure.var11_shared, closure.var12_shared, closure.var14_shared, closure.var15_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var16_filter = (closure.var13_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var16_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 3; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("BallastType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf16_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var16_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				var17_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var17_filter.moveNext()) {state = 7; return false; }
				if (!(com.altova.functions.Core.equal("Occupancy sensor", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var17_filter.current())))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("LightingControlTypeOccupancy", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Occupancy Sensors"));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				var18_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var18_filter.moveNext()) {state = 10; return false; }
				if (!(com.altova.functions.Core.equal("Photocell", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var18_filter.current())))))) {state = 9; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("LightingControlTypeDaylighting", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Continuous"));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				var19_filter = (closure.var13_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var19_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))))) {state = 12; return false; }
				if (!(com.altova.functions.Core.exists(com.mapforce.vmf.vmf17_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PercentPremisesServed", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString((java.math.BigDecimal)com.altova.functions.Core.first(com.mapforce.vmf.vmf17_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				var20_filter = (closure.var5_shared).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var20_filter.moveNext()) {state = 16; return false; }
				if (!(com.altova.functions.Core.equal("Exterior", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var20_filter.current())))))) {state = 15; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OutsideLighting", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.booleanToString(com.altova.functions.Core.equal("Exterior", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var20_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if( var20_filter != null ) { var20_filter.close(); var20_filter = null; }
				var21_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 18;				
				if (!var21_filter.moveNext()) {state = 19; return false; }
				if (!(com.altova.functions.Core.exists(com.mapforce.vmf.vmf18_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var21_filter.current()))))))) {state = 18; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ControlTechnology", "http://nrel.gov/schemas/bedes-auc/2014"), com.mapforce.vmf.vmf18_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var21_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_19() throws Exception {
				state = 21;				
				if( var21_filter != null ) { var21_filter.close(); var21_filter = null; }
				var22_filter = (closure.var5_shared).enumerator();
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 21;				
				if (!var22_filter.moveNext()) {state = 22; return false; }
				if (!(com.altova.functions.Core.exists(com.mapforce.vmf.vmf19_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))) {state = 21; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.mapforce.vmf.vmf19_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var22_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_22() throws Exception {
				state = 0;				
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				if( var20_filter != null ) { var20_filter.close(); var20_filter = null; }
				if( var21_filter != null ) { var21_filter.close(); var21_filter = null; }
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq407_join implements IEnumerable
	{
		boolean var1_shared;
		boolean var2_shared;
		boolean var3_shared;
		boolean var4_shared;
		boolean var5_shared;
		boolean var6_shared;
		boolean var7_shared;
		boolean var8_shared;
		boolean var9_shared;
		boolean var10_shared;
		boolean var11_shared;
		boolean var12_shared;
	
		public seq407_join(boolean var1_shared, boolean var2_shared, boolean var3_shared, boolean var4_shared, boolean var5_shared, boolean var6_shared, boolean var7_shared, boolean var8_shared, boolean var9_shared, boolean var10_shared, boolean var11_shared, boolean var12_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
			this.var6_shared = var6_shared;
			this.var7_shared = var7_shared;
			this.var8_shared = var8_shared;
			this.var9_shared = var9_shared;
			this.var10_shared = var10_shared;
			this.var11_shared = var11_shared;
			this.var12_shared = var12_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq407_join closure;
			public Enumerator(seq407_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
					case 37:	if (moveNext_37()) return true; break;
					case 38:	if (moveNext_38()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 4;				
				if (!(closure.var3_shared)) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Incandescent", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq228_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 7;				
				if (!(closure.var7_shared)) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("LinearFluorescent", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq228_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 10;				
				if (!(closure.var8_shared)) {state = 10; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CompactFluorescent", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq228_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 13;				
				if (!(closure.var5_shared)) {state = 13; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Halogen", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq228_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 16;				
				if (!(closure.var11_shared)) {state = 16; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("HighIntensityDischarge", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq228_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 19;				
				if (!(closure.var6_shared)) {state = 19; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("SolidStateLighting", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq228_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_19() throws Exception {
				state = 22;				
				if (!(closure.var1_shared)) {state = 22; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Induction", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq228_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_22() throws Exception {
				state = 25;				
				if (!(closure.var10_shared)) {state = 25; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Neon", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.booleanToString(com.altova.CoreTypes.parseBoolean("true"))));
				pos++;
				return true;
			}
			private boolean moveNext_25() throws Exception {
				state = 28;				
				if (!(closure.var12_shared)) {state = 28; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Plasma", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.booleanToString(com.altova.CoreTypes.parseBoolean("true"))));
				pos++;
				return true;
			}
			private boolean moveNext_28() throws Exception {
				state = 31;				
				if (!(closure.var4_shared)) {state = 31; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Photoluminescent", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.booleanToString(com.altova.CoreTypes.parseBoolean("true"))));
				pos++;
				return true;
			}
			private boolean moveNext_31() throws Exception {
				state = 34;				
				if (!(closure.var2_shared)) {state = 34; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("SelfLuminous", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.booleanToString(com.altova.CoreTypes.parseBoolean("true"))));
				pos++;
				return true;
			}
			private boolean moveNext_34() throws Exception {
				state = 37;				
				if (!(closure.var9_shared)) {state = 37; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OtherCombination", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.booleanToString(com.altova.CoreTypes.parseBoolean("true"))));
				pos++;
				return true;
			}
			private boolean moveNext_37() throws Exception {
				state = 0;				
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq408_seq_(closure.var1_shared, closure.var2_shared, closure.var3_shared, closure.var4_shared, closure.var5_shared, closure.var6_shared, closure.var7_shared, closure.var8_shared, closure.var9_shared, closure.var10_shared, closure.var11_shared, closure.var12_shared))))))) {state = 38; return false; }
				return false;
			}
			private boolean moveNext_38() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Unknown", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.booleanToString(com.altova.CoreTypes.parseBoolean("true"))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq408_seq_ implements IEnumerable
	{
		boolean var1_shared;
		boolean var2_shared;
		boolean var3_shared;
		boolean var4_shared;
		boolean var5_shared;
		boolean var6_shared;
		boolean var7_shared;
		boolean var8_shared;
		boolean var9_shared;
		boolean var10_shared;
		boolean var11_shared;
		boolean var12_shared;
	
		public seq408_seq_(boolean var1_shared, boolean var2_shared, boolean var3_shared, boolean var4_shared, boolean var5_shared, boolean var6_shared, boolean var7_shared, boolean var8_shared, boolean var9_shared, boolean var10_shared, boolean var11_shared, boolean var12_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
			this.var6_shared = var6_shared;
			this.var7_shared = var7_shared;
			this.var8_shared = var8_shared;
			this.var9_shared = var9_shared;
			this.var10_shared = var10_shared;
			this.var11_shared = var11_shared;
			this.var12_shared = var12_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq408_seq_ closure;
			public Enumerator(seq408_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var3_shared;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var7_shared;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = closure.var8_shared;
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = closure.var5_shared;
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = closure.var11_shared;
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = closure.var6_shared;
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = closure.var1_shared;
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = closure.var10_shared;
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				current = closure.var12_shared;
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = closure.var4_shared;
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				current = closure.var2_shared;
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				current = closure.var9_shared;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq409_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq409_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq409_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq409_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq182_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq410_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq410_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq410_join closure;
			IEnumerator var3_shared;
			com.altova.mapforce.IEnumerable var4_Row;
			IEnumerator var5_filter;
			IEnumerator var14_shared;
			com.altova.mapforce.IEnumerable var15_Row;
			IEnumerator var16_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var17_filter;
			IEnumerator var8_filter;
			IEnumerator var9_filter;
			IEnumerator var10_filter;
			IEnumerator var11_filter;
			IEnumerator var12_filter;
			java.lang.String var13_cast;
			public Enumerator(seq410_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current()))));
				var5_filter = (var4_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 21;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var14_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq411_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq412_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 4; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				var7_filter = (var4_Row).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var7_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq413_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq414_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 8; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var8_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 10; return false; }
				var9_filter = (var4_Row).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var9_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq415_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq416_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 12; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 16;				
				if (!var10_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 14; return false; }
				var11_filter = (var4_Row).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var11_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq417_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq418_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 16; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 14;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 18;				
				if (!var12_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq419_seq_(((com.altova.mapforce.IMFNode)(var12_filter.current())), ((com.altova.mapforce.IMFNode)(var10_filter.current())), ((com.altova.mapforce.IMFNode)(var8_filter.current())), ((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 18; return false; }
				var13_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var12_filter.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("DomesticHotWaterType", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq420_join(((com.altova.mapforce.IMFNode)(var10_filter.current())), ((com.altova.mapforce.IMFNode)(var8_filter.current())), ((com.altova.mapforce.IMFNode)(var6_filter.current())), var4_Row, var13_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 23;				
				if (!var14_shared.moveNext()) {state = 22; return false; }
				var15_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var14_shared.current()))));
				var16_filter = (var15_Row).enumerator();
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 0;				
				if( var14_shared != null ) { var14_shared.close(); var14_shared = null; }
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if (!var16_filter.moveNext()) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq433_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq434_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 23; return false; }
				var17_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var16_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 21;				
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 25;				
				if (!var17_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 25; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq435_if_cast(((com.altova.mapforce.IMFNode)(var17_filter.current())), var15_Row, closure.var1_shared))))) {state = 25; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PrimaryFuel", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq451_if_cast(((com.altova.mapforce.IMFNode)(var17_filter.current())), var15_Row, closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				if( var14_shared != null ) { var14_shared.close(); var14_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq411_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq411_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq411_map closure;
			IEnumerator var2_r;
			public Enumerator(seq411_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(64L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq412_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq412_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq412_map closure;
			IEnumerator var2_r;
			public Enumerator(seq412_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(64L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq413_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq413_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq413_map closure;
			IEnumerator var2_r;
			public Enumerator(seq413_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(67L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq414_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq414_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq414_map closure;
			IEnumerator var2_r;
			public Enumerator(seq414_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(67L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq415_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq415_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq415_map closure;
			IEnumerator var2_r;
			public Enumerator(seq415_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(70L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq416_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq416_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq416_map closure;
			IEnumerator var2_r;
			public Enumerator(seq416_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(70L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq417_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq417_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq417_map closure;
			IEnumerator var2_r;
			public Enumerator(seq417_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(71L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq418_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq418_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq418_map closure;
			IEnumerator var2_r;
			public Enumerator(seq418_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(71L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq419_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IMFNode var3_current;
		com.altova.mapforce.IMFNode var4_current;
	
		public seq419_seq_(com.altova.mapforce.IMFNode var1_cur_Cell, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IMFNode var3_current, com.altova.mapforce.IMFNode var4_current)
		{
			this.var1_cur_Cell = var1_cur_Cell;
			this.var2_current = var2_current;
			this.var3_current = var3_current;
			this.var4_current = var4_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq419_seq_ closure;
			public Enumerator(seq419_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var4_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var3_current));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_cur_Cell));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq420_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IMFNode var3_current;
		com.altova.mapforce.IEnumerable var4_shared;
		java.lang.String var5_shared;
	
		public seq420_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IMFNode var3_current, com.altova.mapforce.IEnumerable var4_shared, java.lang.String var5_shared)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
			this.var3_current = var3_current;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq420_join closure;
			IEnumerator var6_filter;
			IEnumerator var11_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			IEnumerator var12_filter;
			IEnumerator var13_filter;
			IEnumerator var9_filter;
			IEnumerator var14_filter;
			boolean var10_cast;
			public Enumerator(seq420_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var6_filter = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var6_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq421_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq422_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 2; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 11;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				var11_filter = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var7_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 4; return false; }
				var8_filter = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var8_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq423_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq424_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 6; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var8_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var9_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq425_seq_(((com.altova.mapforce.IMFNode)(var9_filter.current())), closure.var1_current, ((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 8; return false; }
				var10_cast = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("StorageTank", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TankHeatingType", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq426_join(closure.var2_current, closure.var3_current, var10_cast)))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var11_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq429_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq430_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 11; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if (!(com.altova.CoreTypes.parseBoolean(closure.var5_shared))) {state = 0; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Other", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(closure.var5_shared));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var12_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 13; return false; }
				var13_filter = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 17;				
				if (!var13_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq431_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq432_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 15; return false; }
				var14_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var13_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 17;				
				if (!var14_filter.moveNext()) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq227_seq_(((com.altova.mapforce.IMFNode)(var14_filter.current())), ((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 17; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Instantaneous", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq228_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_18() throws Exception {
				state = 15;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq421_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq421_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq421_map closure;
			IEnumerator var2_r;
			public Enumerator(seq421_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(65L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq422_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq422_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq422_map closure;
			IEnumerator var2_r;
			public Enumerator(seq422_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(65L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq423_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq423_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq423_map closure;
			IEnumerator var2_r;
			public Enumerator(seq423_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(68L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq424_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq424_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq424_map closure;
			IEnumerator var2_r;
			public Enumerator(seq424_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(68L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq425_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IMFNode var3_current;
	
		public seq425_seq_(com.altova.mapforce.IMFNode var1_cur_Cell, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IMFNode var3_current)
		{
			this.var1_cur_Cell = var1_cur_Cell;
			this.var2_current = var2_current;
			this.var3_current = var3_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq425_seq_ closure;
			public Enumerator(seq425_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var3_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_cur_Cell));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq426_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
		boolean var3_shared;
	
		public seq426_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current, boolean var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq426_join closure;
			public Enumerator(seq426_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 4;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Direct", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq228_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq427_seq_(closure.var2_current, closure.var3_shared))))))) {state = 0; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Indirect", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IndirectTankHeatingSource", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq428_cond_box(closure.var3_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq427_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		boolean var2_shared;
	
		public seq427_seq_(com.altova.mapforce.IMFNode var1_current, boolean var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq427_seq_ closure;
			public Enumerator(seq427_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = closure.var2_shared;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq428_cond_box implements IEnumerable
	{
		boolean var1_shared;
	
		public seq428_cond_box(boolean var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq428_cond_box closure;
			public Enumerator(seq428_cond_box closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(closure.var1_shared)) {state = 0; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("HeatPump", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq228_seq_()));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq429_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq429_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq429_map closure;
			IEnumerator var2_r;
			public Enumerator(seq429_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(66L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq430_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq430_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq430_map closure;
			IEnumerator var2_r;
			public Enumerator(seq430_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(66L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq431_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq431_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq431_map closure;
			IEnumerator var2_r;
			public Enumerator(seq431_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(69L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq432_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq432_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq432_map closure;
			IEnumerator var2_r;
			public Enumerator(seq432_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(69L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq433_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq433_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq433_map closure;
			IEnumerator var2_r;
			public Enumerator(seq433_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(73L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq434_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq434_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq434_map closure;
			IEnumerator var2_r;
			public Enumerator(seq434_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(73L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq435_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq435_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq435_if_cast closure;
			public Enumerator(seq435_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq436_map(closure.var2_shared, closure.var3_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq436_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq436_map(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq436_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq436_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq437_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq438_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq439_map(((com.altova.mapforce.IMFNode)(var3_filter.current())), closure.var1_shared, closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq437_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq437_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq437_map closure;
			IEnumerator var2_r;
			public Enumerator(seq437_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(74L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq438_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq438_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq438_map closure;
			IEnumerator var2_r;
			public Enumerator(seq438_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(74L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq439_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq439_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq439_map closure;
			IEnumerator var4_filter;
			public Enumerator(seq439_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var4_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))) {state = 4; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 2;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq440_map(closure.var2_shared, closure.var3_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq440_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq440_map(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq440_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq440_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq441_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq442_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq443_map(((com.altova.mapforce.IMFNode)(var3_filter.current())), closure.var1_shared, closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq441_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq441_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq441_map closure;
			IEnumerator var2_r;
			public Enumerator(seq441_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(75L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq442_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq442_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq442_map closure;
			IEnumerator var2_r;
			public Enumerator(seq442_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(75L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq443_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq443_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq443_map closure;
			IEnumerator var4_filter;
			public Enumerator(seq443_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var4_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq444_map(closure.var2_shared, closure.var3_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq444_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq444_map(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq444_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq444_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq445_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq446_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq447_map(((com.altova.mapforce.IMFNode)(var3_filter.current())), closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq445_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq445_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq445_map closure;
			IEnumerator var2_r;
			public Enumerator(seq445_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(76L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq446_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq446_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq446_map closure;
			IEnumerator var2_r;
			public Enumerator(seq446_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(76L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq447_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq447_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq447_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq447_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))) {state = 4; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq448_map(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq448_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq448_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq448_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq448_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq312_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq449_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq449_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq449_map(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq449_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq449_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq239_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq240_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq450_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq450_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq450_map(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq450_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq450_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.exists(com.mapforce.vmf.vmf21_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq451_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq451_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq451_if_cast closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			IEnumerator var11_filter;
			IEnumerator var9_filter;
			IEnumerator var12_filter;
			IEnumerator var10_filter;
			IEnumerator var13_filter;
			IEnumerator var14_filter;
			IEnumerator var15_filter;
			public Enumerator(seq451_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 32:	if (moveNext_32()) return true; break;
					case 33:	if (moveNext_33()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
					case 35:	if (moveNext_35()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = "Electricity";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var4_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq437_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq438_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))) {state = 9; return false; }
				current = "Natural gas";
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 12;				
				var6_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var6_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq441_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq442_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 12; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 7;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 17;				
				if (!var7_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 14; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var7_filter.current())))))) {state = 16; return false; }
				var8_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 25;				
				var11_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 19;				
				if (!var8_filter.moveNext()) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq312_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 17; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var8_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 14;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 21;				
				if (!var9_filter.moveNext()) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq234_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq235_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 19; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 17;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 21;				
				if (!var10_filter.moveNext()) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 21; return false; }
				current = com.mapforce.vmf.vmf20_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var10_filter.current()))));
				pos++;
				return true;
			}
			private boolean moveNext_22() throws Exception {
				state = 19;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 27;				
				if (!var11_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq445_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 25; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq446_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 25; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 14;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 30;				
				if (!var12_filter.moveNext()) {state = 28; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 27; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var12_filter.current())))))) {state = 29; return false; }
				var13_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_28() throws Exception {
				state = 25;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_29() throws Exception {
				state = 27;				
				current = "Unknown";
				pos++;
				return true;
			}
			private boolean moveNext_30() throws Exception {
				state = 32;				
				if (!var13_filter.moveNext()) {state = 31; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq312_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 30; return false; }
				var14_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var13_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_31() throws Exception {
				state = 27;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_32() throws Exception {
				state = 34;				
				if (!var14_filter.moveNext()) {state = 33; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq239_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 32; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq240_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 32; return false; }
				var15_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var14_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_33() throws Exception {
				state = 30;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}
			private boolean moveNext_34() throws Exception {
				state = 34;				
				if (!var15_filter.moveNext()) {state = 35; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 34; return false; }
				if (!(com.altova.functions.Core.exists(com.mapforce.vmf.vmf21_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))) {state = 34; return false; }
				current = (java.lang.String)com.altova.functions.Core.first(com.mapforce.vmf.vmf21_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var15_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_35() throws Exception {
				state = 32;				
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq452_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq452_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq452_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Row;
			IEnumerator var4_filter;
			com.altova.mapforce.IEnumerable var5_Cell;
			IEnumerator var6_filter;
			com.altova.mapforce.IEnumerable var7_filter;
			public Enumerator(seq452_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq378_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq73_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current()))));
				var6_filter = (var5_Cell).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				if (!(com.altova.functions.Core.equal("Cooking", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 6; return false; }
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq380_filter(var3_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CookingSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq453_join(var5_Cell, var7_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq453_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq453_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq453_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			public Enumerator(seq453_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("Cooking", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Capacity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq385_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CapacityUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var6_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				var7_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 14;				
				if (!var7_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 14; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var7_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 17;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq387_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_17() throws Exception {
				state = 18;				
				var8_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 18;				
				if (!var8_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 18; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_19() throws Exception {
				state = 0;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq454_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq454_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq454_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Row;
			IEnumerator var4_filter;
			com.altova.mapforce.IEnumerable var5_Cell;
			IEnumerator var6_filter;
			com.altova.mapforce.IEnumerable var7_filter;
			public Enumerator(seq454_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq378_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq73_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current()))));
				var6_filter = (var5_Cell).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				if (!(com.altova.functions.Core.equal("Refrigeration", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 6; return false; }
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq380_filter(var3_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RefrigerationSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq455_join(var5_Cell, var7_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq455_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq455_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq455_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq455_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("Refrigeration", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq456_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				var6_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var6_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq456_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq456_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq456_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			public Enumerator(seq456_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq388_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var3_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq389_join(((com.altova.mapforce.IMFNode)(var3_filter.current())), closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq390_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq391_join(((com.altova.mapforce.IMFNode)(var4_filter.current())), closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var5_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq392_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 9; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq393_join(((com.altova.mapforce.IMFNode)(var5_filter.current())), closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var6_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var6_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq457_join(((com.altova.mapforce.IMFNode)(var6_filter.current())), closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				var7_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var7_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq385_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq458_join(((com.altova.mapforce.IMFNode)(var7_filter.current())), closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 0;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq457_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq457_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq457_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			public Enumerator(seq457_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_current)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq458_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq458_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq458_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			public Enumerator(seq458_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_current)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq385_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq459_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq459_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq459_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Row;
			IEnumerator var4_filter;
			com.altova.mapforce.IEnumerable var5_Cell;
			IEnumerator var6_filter;
			com.altova.mapforce.IEnumerable var7_filter;
			public Enumerator(seq459_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq378_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq73_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current()))));
				var6_filter = (var5_Cell).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				if (!(com.altova.functions.Core.equal("Dishwasher", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 6; return false; }
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq380_filter(var3_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("DishwasherSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq460_join(var5_Cell, var7_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq460_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq460_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq460_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq460_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("Dishwasher", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq456_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				var6_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var6_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq461_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq461_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq461_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Row;
			IEnumerator var4_filter;
			com.altova.mapforce.IEnumerable var5_Cell;
			IEnumerator var6_filter;
			com.altova.mapforce.IEnumerable var7_filter;
			public Enumerator(seq461_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq378_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq73_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current()))));
				var6_filter = (var5_Cell).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				if (!(com.altova.functions.Core.equal("Laundry", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 6; return false; }
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq380_filter(var3_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("LaundrySystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq462_join(var5_Cell, var7_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq462_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq462_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq462_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq462_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("Laundry", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq456_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				var6_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var6_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq463_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq463_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq463_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Row;
			IEnumerator var4_filter;
			com.altova.mapforce.IEnumerable var5_Cell;
			IEnumerator var6_filter;
			com.altova.mapforce.IEnumerable var7_filter;
			public Enumerator(seq463_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq378_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq73_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current()))));
				var6_filter = (var5_Cell).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				if (!(com.altova.functions.Core.equal("Pump", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 6; return false; }
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq380_filter(var3_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PumpSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq464_join(var5_Cell, var7_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq464_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq464_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq464_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq464_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("Pump", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var6_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq456_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq465_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq465_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq465_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq465_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq466_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq74_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq466_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq466_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq466_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq466_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq73_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq467_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_cur_Cell;
		com.altova.mapforce.IMFNode var3_cur_Cell;
	
		public seq467_seq_(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_cur_Cell, com.altova.mapforce.IMFNode var3_cur_Cell)
		{
			this.var1_current = var1_current;
			this.var2_cur_Cell = var2_cur_Cell;
			this.var3_cur_Cell = var3_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq467_seq_ closure;
			public Enumerator(seq467_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var3_cur_Cell));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.greater(com.altova.CoreTypes.nodeToString(closure.var2_cur_Cell), com.altova.CoreTypes.decimalToString(new java.math.BigDecimal("0.5")));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq468_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_cur_Cell;
		com.altova.mapforce.IEnumerable var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
	
		public seq468_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_cur_Cell, com.altova.mapforce.IEnumerable var3_shared, com.altova.mapforce.IEnumerable var4_shared)
		{
			this.var1_current = var1_current;
			this.var2_cur_Cell = var2_cur_Cell;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq468_join closure;
			IEnumerator var5_filter;
			com.altova.mapforce.IEnumerable var6_Row;
			IEnumerator var7_filter;
			com.altova.mapforce.IEnumerable var8_Cell;
			IEnumerator var9_filter;
			com.altova.mapforce.IEnumerable var10_filter;
			public Enumerator(seq468_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 4;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FanSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq469_join(closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 7;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_cur_Cell)))) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FanSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq473_join(closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				var5_filter = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq378_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				var6_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current()))));
				var7_filter = (var6_Row).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 0;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var7_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq73_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 10; return false; }
				var8_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current()))));
				var9_filter = (var8_Cell).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var9_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 12; return false; }
				if (!(com.altova.functions.Core.equal("Fan", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var9_filter.current())))))) {state = 12; return false; }
				var10_filter = new com.altova.functions.Core.SequenceCache((new seq380_filter(var6_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FanSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq477_join(var8_Cell, var10_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq469_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq469_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq469_join closure;
			IEnumerator var2_filter;
			IEnumerator var3_filter;
			public Enumerator(seq469_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq87_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("LinkedSystemID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("AHU1"))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq470_if_cast(((com.altova.mapforce.IMFNode)(var3_filter.current())), closure.var1_shared))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FanControlType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq472_if_cast(((com.altova.mapforce.IMFNode)(var3_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq470_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq470_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq470_if_cast closure;
			public Enumerator(seq470_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq471_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq471_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq471_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq471_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq471_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq208_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq472_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq472_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq472_if_cast closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq472_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = "Constant Volume";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))) {state = 7; return false; }
				current = "Variable Volume";
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq473_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq473_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq473_join closure;
			IEnumerator var2_filter;
			IEnumerator var3_filter;
			public Enumerator(seq473_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq35_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq36_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("LinkedSystemID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("AHU2"))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq474_if_cast(((com.altova.mapforce.IMFNode)(var3_filter.current())), closure.var1_shared))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FanControlType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq476_if_cast(((com.altova.mapforce.IMFNode)(var3_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq474_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq474_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq474_if_cast closure;
			public Enumerator(seq474_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq475_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq475_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq475_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq475_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq475_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq71_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq208_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq476_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq476_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq476_if_cast closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq476_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = "Constant Volume";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq71_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))) {state = 7; return false; }
				current = "Variable Volume";
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq477_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq477_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq477_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq477_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("Fan", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var6_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq456_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq478_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq478_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq478_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Row;
			IEnumerator var4_filter;
			com.altova.mapforce.IEnumerable var5_Cell;
			IEnumerator var6_filter;
			com.altova.mapforce.IEnumerable var7_filter;
			public Enumerator(seq478_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq378_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq73_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current()))));
				var6_filter = (var5_Cell).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				if (!(com.altova.functions.Core.equal("Motor", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 6; return false; }
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq380_filter(var3_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MotorSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq479_join(var5_Cell, var7_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq479_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq479_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq479_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq479_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("Motor", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var6_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq480_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq480_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq480_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq480_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			com.altova.mapforce.IEnumerable var5_box;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			public Enumerator(seq480_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq388_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var3_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq389_join(((com.altova.mapforce.IMFNode)(var3_filter.current())), closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq390_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 6; return false; }
				var5_box = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq481_seq_(var5_box)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var6_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var6_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq392_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 9; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq393_join(((com.altova.mapforce.IMFNode)(var6_filter.current())), closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				var7_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var7_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq457_join(((com.altova.mapforce.IMFNode)(var7_filter.current())), closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				var8_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var8_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq385_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq458_join(((com.altova.mapforce.IMFNode)(var8_filter.current())), closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 0;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq481_seq_ implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq481_seq_(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq481_seq_ closure;
			public Enumerator(seq481_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var1_shared);
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var1_shared);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq482_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq482_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq482_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Row;
			IEnumerator var4_filter;
			com.altova.mapforce.IEnumerable var5_Cell;
			IEnumerator var6_filter;
			com.altova.mapforce.IEnumerable var7_filter;
			public Enumerator(seq482_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq378_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq73_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current()))));
				var6_filter = (var5_Cell).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				if (!(com.altova.functions.Core.equal("Heat Recovery", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 6; return false; }
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq380_filter(var3_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("HeatRecoverySystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq483_join(var5_Cell, var7_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq483_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq483_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq483_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq483_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("HeatRecovery", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var6_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq456_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq484_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq484_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq484_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq484_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq182_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq485_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq485_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq485_join closure;
			IEnumerator var3_shared;
			com.altova.mapforce.IEnumerable var4_Row;
			IEnumerator var5_filter;
			IEnumerator var7_shared;
			com.altova.mapforce.IEnumerable var8_Row;
			IEnumerator var9_filter;
			IEnumerator var15_filter;
			IEnumerator var6_filter;
			IEnumerator var16_filter;
			IEnumerator var10_filter;
			IEnumerator var11_filter;
			IEnumerator var17_filter;
			IEnumerator var12_filter;
			IEnumerator var13_filter;
			IEnumerator var14_filter;
			public Enumerator(seq485_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box("AllWall1"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current()))));
				var5_filter = (var4_Row).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 10;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var7_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq277_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq278_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 5; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var6_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq486_if_cast(((com.altova.mapforce.IMFNode)(var6_filter.current())), var4_Row))))) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ExteriorWallConstruction", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq496_if_cast(((com.altova.mapforce.IMFNode)(var6_filter.current())), var4_Row)))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var7_shared.moveNext()) {state = 11; return false; }
				var8_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var7_shared.current()))));
				var9_filter = (var8_Row).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 25;				
				if( var7_shared != null ) { var7_shared.close(); var7_shared = null; }
				var15_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var9_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq277_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq278_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 12; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 16;				
				if (!var10_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 14; return false; }
				var11_filter = (var8_Row).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var11_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq28_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq29_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 16; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 14;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var12_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 18; return false; }
				var13_filter = (var8_Row).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 22;				
				if (!var13_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq40_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 20; return false; }
				var14_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var13_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 22;				
				if (!var14_filter.moveNext()) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq499_if_any(((com.altova.mapforce.IMFNode)(var12_filter.current())), ((com.altova.mapforce.IMFNode)(var14_filter.current())), ((com.altova.mapforce.IMFNode)(var10_filter.current())), var8_Row))))) {state = 22; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ExteriorWallFinish", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq507_if_any(((com.altova.mapforce.IMFNode)(var12_filter.current())), ((com.altova.mapforce.IMFNode)(var14_filter.current())), ((com.altova.mapforce.IMFNode)(var10_filter.current())), var8_Row)))));
				pos++;
				return true;
			}
			private boolean moveNext_23() throws Exception {
				state = 20;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 27;				
				if (!var15_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq25_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 25; return false; }
				var16_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var15_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 0;				
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 29;				
				if (!var16_filter.moveNext()) {state = 28; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq18_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 27; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq19_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 27; return false; }
				var17_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var16_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_28() throws Exception {
				state = 25;				
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				return false;
			}
			private boolean moveNext_29() throws Exception {
				state = 29;				
				if (!var17_filter.moveNext()) {state = 30; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 29; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("WallRValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var17_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_30() throws Exception {
				state = 27;				
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var7_shared != null ) { var7_shared.close(); var7_shared = null; }
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq486_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq486_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq486_if_cast closure;
			public Enumerator(seq486_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq487_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq487_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq487_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq487_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq487_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq28_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq29_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq488_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq488_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq488_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq488_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq488_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq489_map(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq489_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq489_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq489_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq489_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq56_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq57_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq490_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq490_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq490_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq490_map closure;
			IEnumerator var3_filter;
			boolean var4_cast;
			public Enumerator(seq490_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				var4_cast = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))));
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq491_seq_(var4_cast))))))) {state = 4; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 2;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq492_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq491_seq_ implements IEnumerable
	{
		boolean var1_shared;
	
		public seq491_seq_(boolean var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq491_seq_ closure;
			public Enumerator(seq491_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_shared;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = closure.var1_shared;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq492_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq492_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq492_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq492_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq40_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq493_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq493_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq493_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq493_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq493_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq494_map(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq494_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq494_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq494_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq494_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq64_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq495_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq495_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq495_map(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq495_map closure;
			IEnumerator var2_Cell;
			public Enumerator(seq495_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_Cell = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_Cell.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var2_Cell.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_Cell != null ) { var2_Cell.close(); var2_Cell = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_Cell != null ) { var2_Cell.close(); var2_Cell = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq496_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq496_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq496_if_cast closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			IEnumerator var9_filter;
			IEnumerator var10_filter;
			public Enumerator(seq496_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = "Masonry";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq28_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq29_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var5_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq56_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq57_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 9; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq497_seq_(((com.altova.mapforce.IMFNode)(var4_filter.current())), ((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 13; return false; }
				current = "Steel frame";
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 16;				
				var7_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var7_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq40_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 16; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 11;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var8_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 18; return false; }
				var9_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 22;				
				if (!var9_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq64_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 20; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 22;				
				if (!var10_filter.moveNext()) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq498_seq_(((com.altova.mapforce.IMFNode)(var10_filter.current())), ((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 24; return false; }
				current = "Wood frame";
				pos++;
				return true;
			}
			private boolean moveNext_23() throws Exception {
				state = 20;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 22;				
				current = "Other";
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq497_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq497_seq_(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq497_seq_ closure;
			public Enumerator(seq497_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq498_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq498_seq_(com.altova.mapforce.IMFNode var1_cur_n, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_cur_n = var1_cur_n;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq498_seq_ closure;
			public Enumerator(seq498_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_cur_n));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq499_if_any implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IMFNode var3_current;
		com.altova.mapforce.IEnumerable var4_shared;
	
		public seq499_if_any(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IMFNode var3_current, com.altova.mapforce.IEnumerable var4_shared)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
			this.var3_current = var3_current;
			this.var4_shared = var4_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq499_if_any closure;
			public Enumerator(seq499_if_any closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq500_seq_(closure.var1_current, closure.var2_current, closure.var3_current))))))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq501_map(closure.var4_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq500_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IMFNode var3_current;
	
		public seq500_seq_(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IMFNode var3_current)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
			this.var3_current = var3_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq500_seq_ closure;
			public Enumerator(seq500_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var3_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq501_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq501_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq501_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq501_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq32_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq33_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq502_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq502_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq502_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq502_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq502_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))) {state = 4; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 2;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq503_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq503_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq503_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq503_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq503_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq56_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq57_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq504_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq504_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq504_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq504_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq504_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq505_map(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq505_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq505_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq505_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq505_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq64_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq506_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq506_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq506_map(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq506_map closure;
			IEnumerator var2_filter;
			boolean var3_cast;
			public Enumerator(seq506_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_cast = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq224_seq_(var3_cast)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq507_if_any implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IMFNode var3_current;
		com.altova.mapforce.IEnumerable var4_shared;
	
		public seq507_if_any(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IMFNode var3_current, com.altova.mapforce.IEnumerable var4_shared)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
			this.var3_current = var3_current;
			this.var4_shared = var4_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq507_if_any closure;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			IEnumerator var9_filter;
			IEnumerator var10_filter;
			public Enumerator(seq507_if_any closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq508_seq_(closure.var1_current, closure.var2_current, closure.var3_current))))))) {state = 2; return false; }
				current = "Brick";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var5_filter = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq32_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq33_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 5; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var6_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 7; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 9; return false; }
				current = "Metal panel";
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 12;				
				var7_filter = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var7_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq56_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq57_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 12; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 7;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 16;				
				if (!var8_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 14; return false; }
				var9_filter = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var9_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq64_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 16; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 14;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 18;				
				if (!var10_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq227_seq_(((com.altova.mapforce.IMFNode)(var10_filter.current())), ((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 18; return false; }
				current = "Metal";
				pos++;
				return true;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq508_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IMFNode var3_current;
	
		public seq508_seq_(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IMFNode var3_current)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
			this.var3_current = var3_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq508_seq_ closure;
			public Enumerator(seq508_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var3_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq509_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq509_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq509_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq509_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq182_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq510_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq510_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq510_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq510_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq25_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq511_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq511_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq511_join closure;
			IEnumerator var3_shared;
			com.altova.mapforce.IEnumerable var4_Row;
			IEnumerator var5_filter;
			IEnumerator var11_shared;
			IEnumerator var12_filter;
			IEnumerator var14_shared;
			IEnumerator var6_filter;
			com.altova.mapforce.IEnumerable var15_Row;
			IEnumerator var13_filter;
			IEnumerator var16_filter;
			IEnumerator var18_shared;
			IEnumerator var7_filter;
			IEnumerator var19_filter;
			IEnumerator var21_shared;
			IEnumerator var17_filter;
			IEnumerator var8_filter;
			IEnumerator var22_filter;
			IEnumerator var20_filter;
			IEnumerator var24_shared;
			IEnumerator var9_filter;
			IEnumerator var25_filter;
			IEnumerator var23_filter;
			IEnumerator var10_filter;
			IEnumerator var26_filter;
			public Enumerator(seq511_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 32:	if (moveNext_32()) return true; break;
					case 33:	if (moveNext_33()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
					case 35:	if (moveNext_35()) return true; break;
					case 36:	if (moveNext_36()) return true; break;
					case 37:	if (moveNext_37()) return true; break;
					case 39:	if (moveNext_39()) return true; break;
					case 40:	if (moveNext_40()) return true; break;
					case 41:	if (moveNext_41()) return true; break;
					case 42:	if (moveNext_42()) return true; break;
					case 43:	if (moveNext_43()) return true; break;
					case 44:	if (moveNext_44()) return true; break;
					case 46:	if (moveNext_46()) return true; break;
					case 47:	if (moveNext_47()) return true; break;
					case 48:	if (moveNext_48()) return true; break;
					case 49:	if (moveNext_49()) return true; break;
					case 50:	if (moveNext_50()) return true; break;
					case 51:	if (moveNext_51()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box("Roof1"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current()))));
				var5_filter = (var4_Row).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 18;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var11_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq18_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq19_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 5; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var6_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 7; return false; }
				var7_filter = (var4_Row).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var7_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq87_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 9; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var8_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 11; return false; }
				var9_filter = (var4_Row).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var9_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 13; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var10_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RoofConstruction", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq512_if_any(((com.altova.mapforce.IMFNode)(var10_filter.current())), ((com.altova.mapforce.IMFNode)(var8_filter.current())), ((com.altova.mapforce.IMFNode)(var6_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var11_shared.moveNext()) {state = 19; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var11_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 25;				
				if( var11_shared != null ) { var11_shared.close(); var11_shared = null; }
				var14_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 22;				
				if (!var12_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq11_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq12_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 20; return false; }
				var13_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var12_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 22;				
				if (!var13_filter.moveNext()) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 22; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RoofFinish", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq514_if_cast(((com.altova.mapforce.IMFNode)(var13_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_23() throws Exception {
				state = 20;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 27;				
				if (!var14_shared.moveNext()) {state = 26; return false; }
				var15_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var14_shared.current()))));
				var16_filter = (var15_Row).enumerator();
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 32;				
				if( var14_shared != null ) { var14_shared.close(); var14_shared = null; }
				var18_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 29;				
				if (!var16_filter.moveNext()) {state = 28; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq18_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 27; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq19_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 27; return false; }
				var17_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var16_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_28() throws Exception {
				state = 25;				
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				return false;
			}
			private boolean moveNext_29() throws Exception {
				state = 29;				
				if (!var17_filter.moveNext()) {state = 30; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 29; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq515_if_cast(((com.altova.mapforce.IMFNode)(var17_filter.current())), var15_Row))))) {state = 29; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("DeckType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq519_if_cast(((com.altova.mapforce.IMFNode)(var17_filter.current())), var15_Row)))));
				pos++;
				return true;
			}
			private boolean moveNext_30() throws Exception {
				state = 27;				
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				return false;
			}
			private boolean moveNext_32() throws Exception {
				state = 34;				
				if (!var18_shared.moveNext()) {state = 33; return false; }
				var19_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var18_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_33() throws Exception {
				state = 39;				
				if( var18_shared != null ) { var18_shared.close(); var18_shared = null; }
				var21_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_34() throws Exception {
				state = 36;				
				if (!var19_filter.moveNext()) {state = 35; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))))) {state = 34; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))))) {state = 34; return false; }
				var20_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var19_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_35() throws Exception {
				state = 32;				
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				return false;
			}
			private boolean moveNext_36() throws Exception {
				state = 36;				
				if (!var20_filter.moveNext()) {state = 37; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var20_filter.current()))))))))) {state = 36; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RoofRValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var20_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_37() throws Exception {
				state = 34;				
				if( var20_filter != null ) { var20_filter.close(); var20_filter = null; }
				return false;
			}
			private boolean moveNext_39() throws Exception {
				state = 41;				
				if (!var21_shared.moveNext()) {state = 40; return false; }
				var22_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var21_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_40() throws Exception {
				state = 46;				
				if( var21_shared != null ) { var21_shared.close(); var21_shared = null; }
				var24_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_41() throws Exception {
				state = 43;				
				if (!var22_filter.moveNext()) {state = 42; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq13_map(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))))) {state = 41; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq14_map(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))))) {state = 41; return false; }
				var23_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var22_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_42() throws Exception {
				state = 39;				
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				return false;
			}
			private boolean moveNext_43() throws Exception {
				state = 43;				
				if (!var23_filter.moveNext()) {state = 44; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var23_filter.current()))))))))) {state = 43; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RoofExteriorSolarAbsorptance", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.functions.Core.subtract(new java.math.BigDecimal("1"), com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var23_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_44() throws Exception {
				state = 41;				
				if( var23_filter != null ) { var23_filter.close(); var23_filter = null; }
				return false;
			}
			private boolean moveNext_46() throws Exception {
				state = 48;				
				if (!var24_shared.moveNext()) {state = 47; return false; }
				var25_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var24_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_47() throws Exception {
				state = 0;				
				if( var24_shared != null ) { var24_shared.close(); var24_shared = null; }
				return false;
			}
			private boolean moveNext_48() throws Exception {
				state = 50;				
				if (!var25_filter.moveNext()) {state = 49; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq11_map(((com.altova.mapforce.IMFNode)(var25_filter.current()))))))))) {state = 48; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq12_map(((com.altova.mapforce.IMFNode)(var25_filter.current()))))))))) {state = 48; return false; }
				var26_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var25_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_49() throws Exception {
				state = 46;				
				if( var25_filter != null ) { var25_filter.close(); var25_filter = null; }
				return false;
			}
			private boolean moveNext_50() throws Exception {
				state = 50;				
				if (!var26_filter.moveNext()) {state = 51; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var26_filter.current()))))))))) {state = 50; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq520_seq_(((com.altova.mapforce.IMFNode)(var26_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_51() throws Exception {
				state = 48;				
				if( var26_filter != null ) { var26_filter.close(); var26_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_shared != null ) { var11_shared.close(); var11_shared = null; }
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				if( var14_shared != null ) { var14_shared.close(); var14_shared = null; }
				if( var20_filter != null ) { var20_filter.close(); var20_filter = null; }
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				if( var18_shared != null ) { var18_shared.close(); var18_shared = null; }
				if( var23_filter != null ) { var23_filter.close(); var23_filter = null; }
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				if( var21_shared != null ) { var21_shared.close(); var21_shared = null; }
				if( var26_filter != null ) { var26_filter.close(); var26_filter = null; }
				if( var25_filter != null ) { var25_filter.close(); var25_filter = null; }
				if( var24_shared != null ) { var24_shared.close(); var24_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq512_if_any implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IMFNode var3_current;
	
		public seq512_if_any(com.altova.mapforce.IMFNode var1_cur_n, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IMFNode var3_current)
		{
			this.var1_cur_n = var1_cur_n;
			this.var2_current = var2_current;
			this.var3_current = var3_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq512_if_any closure;
			public Enumerator(seq512_if_any closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq513_seq_(closure.var1_cur_n, closure.var2_current, closure.var3_current))))))) {state = 2; return false; }
				current = "Built up";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = "Unknown";
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq513_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IMFNode var3_current;
	
		public seq513_seq_(com.altova.mapforce.IMFNode var1_cur_n, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IMFNode var3_current)
		{
			this.var1_cur_n = var1_cur_n;
			this.var2_current = var2_current;
			this.var3_current = var3_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq513_seq_ closure;
			public Enumerator(seq513_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var3_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_cur_n));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq514_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq514_if_cast(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq514_if_cast closure;
			public Enumerator(seq514_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_cur_n)))) {state = 2; return false; }
				current = "Metal";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = "Unknown";
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq515_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq515_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq515_if_cast closure;
			public Enumerator(seq515_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq516_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq516_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq516_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq516_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq516_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq87_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq517_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq517_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq517_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq517_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq517_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))) {state = 4; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 2;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq518_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq518_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq518_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq518_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq518_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq495_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq519_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq519_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq519_if_cast closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq519_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = "Concrete";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq87_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))) {state = 9; return false; }
				current = "Steel";
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 12;				
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var5_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 12; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 7;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 14;				
				if (!var6_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 14; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 16; return false; }
				current = "Wood";
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 14;				
				current = "Unknown";
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq520_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq520_seq_(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq520_seq_ closure;
			public Enumerator(seq520_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Roof condition"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_cur_Cell)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq521_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq521_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq521_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			IEnumerator var8_shared;
			com.altova.mapforce.IEnumerable var5_Row;
			IEnumerator var9_filter;
			IEnumerator var6_filter;
			IEnumerator var15_shared;
			com.altova.mapforce.IEnumerable var10_Row;
			IEnumerator var16_filter;
			IEnumerator var11_filter;
			IEnumerator var7_filter;
			com.altova.mapforce.IEnumerable var17_Row;
			IEnumerator var18_filter;
			IEnumerator var12_filter;
			IEnumerator var13_filter;
			IEnumerator var19_filter;
			IEnumerator var14_filter;
			public Enumerator(seq521_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 32:	if (moveNext_32()) return true; break;
					case 33:	if (moveNext_33()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), closure.var2_shared);
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FenestrationType", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq522_join(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var3_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_shared.moveNext()) {state = 5; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 13;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var8_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq182_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 6; return false; }
				var5_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current()))));
				var6_filter = (var5_Row).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var6_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq89_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq90_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 8; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 10;				
				if (!var7_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq527_if_cast(((com.altova.mapforce.IMFNode)(var7_filter.current())), var5_Row))))) {state = 10; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FenestrationFrameMaterial", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq531_if_cast(((com.altova.mapforce.IMFNode)(var7_filter.current())), var5_Row)))));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var8_shared.moveNext()) {state = 14; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var8_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 26;				
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				var15_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 17;				
				if (!var9_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq182_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 15; return false; }
				var10_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current()))));
				var11_filter = (var10_Row).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 19;				
				if (!var11_filter.moveNext()) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq232_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq233_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 17; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 15;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 21;				
				if (!var12_filter.moveNext()) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 19; return false; }
				var13_filter = (var10_Row).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 17;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 23;				
				if (!var13_filter.moveNext()) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq239_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq240_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 21; return false; }
				var14_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var13_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 19;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 23;				
				if (!var14_filter.moveNext()) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq227_seq_(((com.altova.mapforce.IMFNode)(var14_filter.current())), ((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 23; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("GlassType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Low e"));
				pos++;
				return true;
			}
			private boolean moveNext_24() throws Exception {
				state = 21;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 28;				
				if (!var15_shared.moveNext()) {state = 27; return false; }
				var16_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var15_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 0;				
				if( var15_shared != null ) { var15_shared.close(); var15_shared = null; }
				return false;
			}
			private boolean moveNext_28() throws Exception {
				state = 30;				
				if (!var16_filter.moveNext()) {state = 29; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq182_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 28; return false; }
				var17_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var16_filter.current()))));
				var18_filter = (var17_Row).enumerator();
				return false;
			}
			private boolean moveNext_29() throws Exception {
				state = 26;				
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				return false;
			}
			private boolean moveNext_30() throws Exception {
				state = 32;				
				if (!var18_filter.moveNext()) {state = 31; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq362_map(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))))) {state = 30; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq363_map(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))))) {state = 30; return false; }
				var19_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var18_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_31() throws Exception {
				state = 28;				
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				return false;
			}
			private boolean moveNext_32() throws Exception {
				state = 32;				
				if (!var19_filter.moveNext()) {state = 33; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))))) {state = 32; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq532_if_cast(((com.altova.mapforce.IMFNode)(var19_filter.current())), var17_Row))))) {state = 32; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FenestrationGlassLayers", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq540_if_cast(((com.altova.mapforce.IMFNode)(var19_filter.current())), var17_Row)))));
				pos++;
				return true;
			}
			private boolean moveNext_33() throws Exception {
				state = 30;				
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				if( var15_shared != null ) { var15_shared.close(); var15_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq522_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq522_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq522_join closure;
			IEnumerator var2_shared;
			IEnumerator var3_filter;
			com.altova.mapforce.IEnumerable var4_Row;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq522_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var2_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq182_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				var4_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current()))));
				var5_filter = (var4_Row).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq89_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq90_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var6_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq523_if_cast(((com.altova.mapforce.IMFNode)(var6_filter.current())), var4_Row))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Window", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq228_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq523_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq523_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq523_if_cast closure;
			public Enumerator(seq523_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq524_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq524_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq524_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq524_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq524_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq91_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq92_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq525_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq525_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq525_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq525_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq525_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))) {state = 4; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 2;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq526_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq526_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq526_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq526_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq526_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq318_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq319_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq495_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq527_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq527_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq527_if_cast closure;
			public Enumerator(seq527_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq528_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq528_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq528_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq528_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq528_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq91_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq92_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq529_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq529_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq529_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq529_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq529_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))) {state = 4; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 2;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq530_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq530_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq530_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq530_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq530_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq318_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq319_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq495_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq531_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq531_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq531_if_cast closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq531_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = "Aluminum no thermal break";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq91_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq92_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))) {state = 9; return false; }
				current = "Aluminum thermal break";
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 12;				
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var5_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq318_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq319_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 12; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 7;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 14;				
				if (!var6_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 14; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 16; return false; }
				current = "Wood";
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 14;				
				current = "Unknown";
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq532_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq532_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq532_if_cast closure;
			public Enumerator(seq532_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq533_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq533_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq533_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq533_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq533_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq366_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq367_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq534_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq534_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq534_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq534_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq534_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq535_map(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq535_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq535_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq535_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq535_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq232_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq233_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq536_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq536_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq536_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq536_map closure;
			IEnumerator var3_filter;
			boolean var4_cast;
			public Enumerator(seq536_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				var4_cast = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))));
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq491_seq_(var4_cast))))))) {state = 4; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 2;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq537_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq537_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq537_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq537_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq537_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq234_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq235_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq538_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq538_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq538_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq538_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq538_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq539_map(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq539_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq539_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq539_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq539_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq239_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq240_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq495_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq540_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq540_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq540_if_cast closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			IEnumerator var9_filter;
			IEnumerator var10_filter;
			public Enumerator(seq540_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = "Single pane";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq366_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq367_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var5_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq232_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq233_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 9; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq497_seq_(((com.altova.mapforce.IMFNode)(var4_filter.current())), ((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 13; return false; }
				current = "Double pane";
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 16;				
				var7_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var7_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq234_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq235_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 16; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 11;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var8_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 18; return false; }
				var9_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 22;				
				if (!var9_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq239_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq240_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 20; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 22;				
				if (!var10_filter.moveNext()) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq498_seq_(((com.altova.mapforce.IMFNode)(var10_filter.current())), ((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 24; return false; }
				current = "Triple pane";
				pos++;
				return true;
			}
			private boolean moveNext_23() throws Exception {
				state = 20;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 22;				
				current = "Unknown";
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq541_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq541_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq541_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq541_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq182_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq542_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq542_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq542_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			IEnumerator var6_shared;
			IEnumerator var7_filter;
			IEnumerator var5_filter;
			IEnumerator var9_shared;
			IEnumerator var10_filter;
			IEnumerator var8_filter;
			IEnumerator var12_shared;
			IEnumerator var13_filter;
			IEnumerator var11_filter;
			IEnumerator var15_shared;
			IEnumerator var16_filter;
			IEnumerator var14_filter;
			IEnumerator var18_shared;
			com.altova.mapforce.IEnumerable var19_Row;
			IEnumerator var17_filter;
			IEnumerator var20_filter;
			IEnumerator var21_filter;
			public Enumerator(seq542_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 32:	if (moveNext_32()) return true; break;
					case 33:	if (moveNext_33()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
					case 35:	if (moveNext_35()) return true; break;
					case 36:	if (moveNext_36()) return true; break;
					case 38:	if (moveNext_38()) return true; break;
					case 39:	if (moveNext_39()) return true; break;
					case 40:	if (moveNext_40()) return true; break;
					case 41:	if (moveNext_41()) return true; break;
					case 42:	if (moveNext_42()) return true; break;
					case 43:	if (moveNext_43()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box("Foundation1"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 10;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var6_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq44_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq45_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("GroundCoupling", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Basement", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq543_join(closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var6_shared.moveNext()) {state = 11; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 17;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				var9_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var7_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq174_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq175_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 12; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 14;				
				if (!var8_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 14; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_filter.current())))))) {state = 14; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("GroundCoupling", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("SlabOnGrade", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq228_seq_()))));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 19;				
				if (!var9_shared.moveNext()) {state = 18; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var9_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 24;				
				if( var9_shared != null ) { var9_shared.close(); var9_shared = null; }
				var12_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 21;				
				if (!var10_filter.moveNext()) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq177_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq178_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 19; return false; }
				var11_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var10_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 17;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 21;				
				if (!var11_filter.moveNext()) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 21; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var11_filter.current())))))) {state = 21; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("GroundCoupling", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Crawlspace", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq228_seq_()))));
				pos++;
				return true;
			}
			private boolean moveNext_22() throws Exception {
				state = 19;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 26;				
				if (!var12_shared.moveNext()) {state = 25; return false; }
				var13_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var12_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 31;				
				if( var12_shared != null ) { var12_shared.close(); var12_shared = null; }
				var15_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 28;				
				if (!var13_filter.moveNext()) {state = 27; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq549_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq550_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 26; return false; }
				var14_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var13_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 24;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_28() throws Exception {
				state = 28;				
				if (!var14_filter.moveNext()) {state = 29; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 28; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var14_filter.current())))))) {state = 28; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("GroundCoupling", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Other", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var14_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_29() throws Exception {
				state = 26;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}
			private boolean moveNext_31() throws Exception {
				state = 33;				
				if (!var15_shared.moveNext()) {state = 32; return false; }
				var16_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var15_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_32() throws Exception {
				state = 38;				
				if( var15_shared != null ) { var15_shared.close(); var15_shared = null; }
				var18_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_33() throws Exception {
				state = 35;				
				if (!var16_filter.moveNext()) {state = 34; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq250_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 33; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq251_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 33; return false; }
				var17_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var16_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_34() throws Exception {
				state = 31;				
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				return false;
			}
			private boolean moveNext_35() throws Exception {
				state = 35;				
				if (!var17_filter.moveNext()) {state = 36; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 35; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var17_filter.current())))))) {state = 35; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("GroundCoupling", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Unknown", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var17_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_36() throws Exception {
				state = 33;				
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				return false;
			}
			private boolean moveNext_38() throws Exception {
				state = 40;				
				if (!var18_shared.moveNext()) {state = 39; return false; }
				var19_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var18_shared.current()))));
				var20_filter = (var19_Row).enumerator();
				return false;
			}
			private boolean moveNext_39() throws Exception {
				state = 0;				
				if( var18_shared != null ) { var18_shared.close(); var18_shared = null; }
				return false;
			}
			private boolean moveNext_40() throws Exception {
				state = 42;				
				if (!var20_filter.moveNext()) {state = 41; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq41_map(((com.altova.mapforce.IMFNode)(var20_filter.current()))))))))) {state = 40; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq42_map(((com.altova.mapforce.IMFNode)(var20_filter.current()))))))))) {state = 40; return false; }
				var21_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var20_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_41() throws Exception {
				state = 38;				
				if( var20_filter != null ) { var20_filter.close(); var20_filter = null; }
				return false;
			}
			private boolean moveNext_42() throws Exception {
				state = 42;				
				if (!var21_filter.moveNext()) {state = 43; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var21_filter.current()))))))))) {state = 42; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq551_if_cast(((com.altova.mapforce.IMFNode)(var21_filter.current())), var19_Row))))) {state = 42; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorConstructionType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq556_if_cast(((com.altova.mapforce.IMFNode)(var21_filter.current())), var19_Row)))));
				pos++;
				return true;
			}
			private boolean moveNext_43() throws Exception {
				state = 40;				
				if( var21_filter != null ) { var21_filter.close(); var21_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_shared != null ) { var9_shared.close(); var9_shared = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_shared != null ) { var12_shared.close(); var12_shared = null; }
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				if( var15_shared != null ) { var15_shared.close(); var15_shared = null; }
				if( var21_filter != null ) { var21_filter.close(); var21_filter = null; }
				if( var20_filter != null ) { var20_filter.close(); var20_filter = null; }
				if( var18_shared != null ) { var18_shared.close(); var18_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq543_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq543_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq543_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_filter;
			IEnumerator var4_shared;
			IEnumerator var5_filter;
			public Enumerator(seq543_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq25_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_filter = new com.altova.functions.Core.SequenceCache((new seq544_filter(((com.altova.mapforce.IMFNode)(var2_filter.current())))));
				var4_shared = (var3_filter).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_shared.moveNext()) {state = 5; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_shared != null ) { var4_shared.close(); var4_shared = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current()))), com.altova.CoreTypes.decimalToString(new java.math.BigDecimal("0.5"))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq546_map(var3_filter))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FoundationWallRValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal((java.lang.String)com.altova.functions.Core.last((new seq548_cond_join(((com.altova.mapforce.IMFNode)(var5_filter.current())), var3_filter)))))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_shared != null ) { var4_shared.close(); var4_shared = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq544_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq544_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq544_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq544_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq545_filter(closure.var1_current))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq87_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq545_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq545_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq545_filter closure;
			IEnumerator var2_Row;
			public Enumerator(seq545_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_Row = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_Row.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var2_Row.current()))))))))) {state = 2; return false; }
				current = var2_Row.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_Row != null ) { var2_Row.close(); var2_Row = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_Row != null ) { var2_Row.close(); var2_Row = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq546_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq546_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq546_map closure;
			IEnumerator var2_shared;
			public Enumerator(seq546_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq547_map(((com.altova.mapforce.IMFNode)(var2_shared.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq547_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq547_map(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq547_map closure;
			IEnumerator var2_Cell;
			public Enumerator(seq547_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_Cell = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_Cell.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var2_Cell.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_Cell != null ) { var2_Cell.close(); var2_Cell = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_Cell != null ) { var2_Cell.close(); var2_Cell = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq548_cond_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq548_cond_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq548_cond_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			public Enumerator(seq548_cond_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.nodeToString(closure.var1_current), com.altova.CoreTypes.decimalToString(new java.math.BigDecimal("0.5"))))) {state = 0; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq549_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq549_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq549_map closure;
			IEnumerator var2_r;
			public Enumerator(seq549_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(38L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq550_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq550_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq550_map closure;
			IEnumerator var2_r;
			public Enumerator(seq550_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(38L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq551_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq551_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq551_if_cast closure;
			public Enumerator(seq551_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq552_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq552_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq552_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq552_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq552_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq35_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq36_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq553_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq553_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq553_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq553_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq553_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))) {state = 4; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 2;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq554_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq554_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq554_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq554_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq554_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq71_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq555_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq555_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq555_map(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq555_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq555_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq556_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq556_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq556_if_cast closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq556_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = "Concrete solid";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq35_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq36_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))) {state = 9; return false; }
				current = "Steel frame";
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 12;				
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var5_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq71_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 12; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 7;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 14;				
				if (!var6_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 14; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 14; return false; }
				current = "Wood frame";
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq557_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq557_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq557_join closure;
			IEnumerator var3_filter;
			com.altova.mapforce.IEnumerable var4_Row;
			IEnumerator var5_filter;
			com.altova.mapforce.IEnumerable var6_Cell;
			IEnumerator var7_filter;
			com.altova.mapforce.IEnumerable var8_filter;
			public Enumerator(seq557_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 4;				
				if (!(com.altova.functions.Core.exists(closure.var2_shared))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CriticalITSystem", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ITSystemType", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq378_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				var4_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current()))));
				var5_filter = (var4_Row).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq73_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				var6_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current()))));
				var7_filter = (var6_Cell).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var7_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 9; return false; }
				if (!(com.altova.functions.Core.equal("Critical IT System", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var7_filter.current())))))) {state = 9; return false; }
				var8_filter = new com.altova.functions.Core.SequenceCache((new seq380_filter(var4_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CriticalITSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq558_join(var6_Cell, var8_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq558_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq558_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq558_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq558_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("ITSystem", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq456_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				var6_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var6_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq559_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq559_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq559_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Row;
			IEnumerator var4_filter;
			com.altova.mapforce.IEnumerable var5_Cell;
			IEnumerator var6_filter;
			com.altova.mapforce.IEnumerable var7_filter;
			public Enumerator(seq559_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq378_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq73_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current()))));
				var6_filter = (var5_Cell).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				if (!(com.altova.functions.Core.equal("Plug Load", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 6; return false; }
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq380_filter(var3_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PlugLoad", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq560_join(var5_Cell, var7_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq560_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq560_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq560_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq560_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("PlugLoad", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq456_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				var6_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var6_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq561_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq561_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq561_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Row;
			IEnumerator var4_filter;
			com.altova.mapforce.IEnumerable var5_Cell;
			IEnumerator var6_filter;
			com.altova.mapforce.IEnumerable var7_filter;
			public Enumerator(seq561_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq378_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq73_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current()))));
				var6_filter = (var5_Cell).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				if (!(com.altova.functions.Core.equal("Process Load", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 6; return false; }
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq380_filter(var3_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ProcessLoad", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq562_join(var5_Cell, var7_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq562_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq562_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq562_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq562_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("ProcessLoad", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq456_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				var6_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var6_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq563_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq563_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq563_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Row;
			IEnumerator var4_filter;
			com.altova.mapforce.IEnumerable var5_Cell;
			IEnumerator var6_filter;
			com.altova.mapforce.IEnumerable var7_filter;
			public Enumerator(seq563_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq378_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq73_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current()))));
				var6_filter = (var5_Cell).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				if (!(com.altova.functions.Core.equal("Conveyance", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 6; return false; }
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq380_filter(var3_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ConveyanceSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq564_join(var5_Cell, var7_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq564_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq564_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq564_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq564_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("Conveyance", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var6_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq456_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq565_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq565_map(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq565_map closure;
			IEnumerator var2_Name;
			public Enumerator(seq565_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_Name = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_n)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_Name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_Name.current()))), "L0 - Annual Summary");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq566_if_equal implements IEnumerable
	{
		java.lang.String var1_shared;
	
		public seq566_if_equal(java.lang.String var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq566_if_equal closure;
			public Enumerator(seq566_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Core.equal(closure.var1_shared, "PV"))) {state = 2; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PV", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq228_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Other", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OtherEnergyGenerationTechnology", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(closure.var1_shared))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq567_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq567_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq567_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Row;
			IEnumerator var4_filter;
			com.altova.mapforce.IEnumerable var5_Cell;
			IEnumerator var6_filter;
			com.altova.mapforce.IEnumerable var7_filter;
			public Enumerator(seq567_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq378_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq73_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current()))));
				var6_filter = (var5_Cell).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				if (!(com.altova.functions.Core.equal("Pool", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 6; return false; }
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq380_filter(var3_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Pool", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq568_join(var5_Cell, var7_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq568_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq568_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq568_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq568_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("Pool", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var6_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq456_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq569_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq569_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq569_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Row;
			IEnumerator var4_filter;
			com.altova.mapforce.IEnumerable var5_Cell;
			IEnumerator var6_filter;
			com.altova.mapforce.IEnumerable var7_filter;
			public Enumerator(seq569_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq378_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq73_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current()))));
				var6_filter = (var5_Cell).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				if (!(com.altova.functions.Core.equal("Water Use", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 6; return false; }
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq380_filter(var3_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("WaterUse", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq570_join(var5_Cell, var7_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq570_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq570_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq570_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq570_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("WaterUse", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq456_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				var6_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var6_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq571_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq571_map(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq571_map closure;
			IEnumerator var2_Name;
			public Enumerator(seq571_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_Name = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_n)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_Name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_Name.current()))), "L2 - EEM Summary");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq572_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq572_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq572_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq572_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq11_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq573_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq573_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq573_join closure;
			IEnumerator var3_filter;
			com.altova.mapforce.IEnumerable var4_Cell;
			IEnumerator var5_filter;
			public Enumerator(seq573_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq40_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				var4_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current()))));
				var5_filter = (var4_Cell).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var5_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Measure", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq574_join(((com.altova.mapforce.IMFNode)(var5_filter.current())), closure.var1_shared, var4_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq574_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq574_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq574_join closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			com.altova.mapforce.IEnumerable var9_filter;
			public Enumerator(seq574_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var4_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var4_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq575_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("SystemCategoryAffected", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("LongDescription", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_current)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				var5_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureSavingsAnalysis", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq576_join(((com.altova.mapforce.IMFNode)(var5_filter.current())), closure.var2_shared, closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var6_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var6_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq385_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 9; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UsefulLife", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				var7_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var7_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureFirstCost", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.doubleToDecimal(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				var8_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var8_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq390_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				var9_filter = new com.altova.functions.Core.SequenceCache((new seq580_filter(closure.var2_shared)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq582_join(((com.altova.mapforce.IMFNode)(var8_filter.current())), var9_filter, closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 0;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq575_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq575_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq575_map closure;
			IEnumerator var2_n;
			public Enumerator(seq575_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(12L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq576_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq576_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq576_join closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq576_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualSavingsCost", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.doubleToInteger(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(closure.var1_current))))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualSavingsByFuels", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq577_join(closure.var2_shared, closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var4_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("SummerPeakElectricityReduction", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.doubleToDecimal(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FundingFromIncentives", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.doubleToDecimal(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var6_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 10;				
				if (!var6_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq392_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("SimplePayback", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.doubleToDecimal(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq577_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq577_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq577_join closure;
			IEnumerator var3_filter;
			IEnumerator var5_filter;
			double var4_cast;
			double var6_cast;
			java.lang.String var7_cast;
			public Enumerator(seq577_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				var4_cast = com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualSavingsByFuel", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq578_join(closure.var1_shared, var4_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var5_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 5; return false; }
				var6_cast = com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current()))));
				var7_cast = com.altova.CoreTypes.doubleToString(var6_cast);
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualSavingsByFuel", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq579_seq_(var7_cast, var6_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq578_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		double var2_shared;
	
		public seq578_join(com.altova.mapforce.IEnumerable var1_shared, double var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq578_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq578_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 7;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf24_inputtoresult.eval(com.altova.CoreTypes.doubleToString(closure.var2_shared))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EnergyResource", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf23_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualSavingsNativeUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.doubleToDecimal(closure.var2_shared))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq579_seq_ implements IEnumerable
	{
		java.lang.String var1_shared;
		double var2_shared;
	
		public seq579_seq_(java.lang.String var1_shared, double var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq579_seq_ closure;
			public Enumerator(seq579_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EnergyResource", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf25_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf26_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualSavingsNativeUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.doubleToDecimal(closure.var2_shared))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq580_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq580_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq580_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq580_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq581_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq581_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq581_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq581_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq581_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq582_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq582_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq582_join closure;
			IEnumerator var4_filter;
			public Enumerator(seq582_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq583_join(closure.var1_current, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var4_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var4_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 3; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq584_join(((com.altova.mapforce.IMFNode)(var4_filter.current())), closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq583_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq583_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq583_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			public Enumerator(seq583_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.doubleToString(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(closure.var1_current)))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq390_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq584_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq584_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq584_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			public Enumerator(seq584_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.doubleToString(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(closure.var1_current)))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq585_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq585_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq585_join closure;
			IEnumerator var3_shared;
			com.altova.mapforce.IEnumerable var4_Worksheet;
			IEnumerator var5_filter;
			IEnumerator var16_shared;
			IEnumerator var17_filter;
			com.altova.mapforce.IEnumerable var6_Row;
			IEnumerator var7_filter;
			IEnumerator var18_filter;
			IEnumerator var8_filter;
			IEnumerator var19_filter;
			com.altova.mapforce.IEnumerable var9_filter;
			com.altova.mapforce.IEnumerable var10_filter;
			com.altova.mapforce.IEnumerable var11_filter;
			com.altova.mapforce.IEnumerable var12_filter;
			com.altova.mapforce.IEnumerable var13_filter;
			com.altova.mapforce.IEnumerable var14_filter;
			com.altova.mapforce.IEnumerable var15_filter;
			public Enumerator(seq585_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current()))));
				var5_filter = (var4_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 11;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var16_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq586_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 4; return false; }
				var6_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current()))));
				var7_filter = (var6_Row).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var7_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq18_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq19_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 6; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var8_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 8; return false; }
				var9_filter = new com.altova.functions.Core.SequenceCache((new seq587_filter(var4_Worksheet)));
				var10_filter = new com.altova.functions.Core.SequenceCache((new seq588_filter(var4_Worksheet)));
				var11_filter = new com.altova.functions.Core.SequenceCache((new seq589_filter(var4_Worksheet)));
				var12_filter = new com.altova.functions.Core.SequenceCache((new seq591_filter(var4_Worksheet)));
				var13_filter = new com.altova.functions.Core.SequenceCache((new seq592_filter(var4_Worksheet)));
				var14_filter = new com.altova.functions.Core.SequenceCache((new seq593_filter(var6_Row)));
				var15_filter = new com.altova.functions.Core.SequenceCache((new seq595_filter(var6_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Scenarios", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq597_seq_(((com.altova.mapforce.IMFNode)(var8_filter.current())), var14_filter, var6_Row, var9_filter, var13_filter, var15_filter, var11_filter, var12_filter, var10_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var16_shared.moveNext()) {state = 12; return false; }
				var17_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var16_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				if( var16_shared != null ) { var16_shared.close(); var16_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AuditorContactID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var17_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq565_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 13; return false; }
				var18_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var17_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 17;				
				if (!var18_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq18_map(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))))) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq19_map(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))))) {state = 15; return false; }
				var19_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var18_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 17;				
				if (!var19_filter.moveNext()) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))))) {state = 17; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AuditDate", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.dateToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_18() throws Exception {
				state = 15;				
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				if( var16_shared != null ) { var16_shared.close(); var16_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq586_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq586_map(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq586_map closure;
			IEnumerator var2_Name;
			public Enumerator(seq586_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_Name = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_n)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_Name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_Name.current()))), "L0 - Metered Energy");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq587_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq587_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq587_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq587_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq6_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq588_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq588_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq588_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq588_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq571_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq589_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq589_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq589_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq589_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq590_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq590_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq590_map(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq590_map closure;
			IEnumerator var2_Name;
			public Enumerator(seq590_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_Name = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_n)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_Name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_Name.current()))), "L0 - Delivered Energy");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq591_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq591_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq591_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq591_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq23_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq592_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq592_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq592_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq592_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq565_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq593_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq593_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq593_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq593_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq594_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq40_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq594_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq594_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq594_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq594_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq13_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq595_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq595_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq595_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq595_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq596_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq33_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq596_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq596_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq596_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq596_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq32_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq597_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
		com.altova.mapforce.IEnumerable var5_shared;
		com.altova.mapforce.IEnumerable var6_shared;
		com.altova.mapforce.IEnumerable var7_shared;
		com.altova.mapforce.IEnumerable var8_shared;
		com.altova.mapforce.IEnumerable var9_shared;
	
		public seq597_seq_(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared, com.altova.mapforce.IEnumerable var4_shared, com.altova.mapforce.IEnumerable var5_shared, com.altova.mapforce.IEnumerable var6_shared, com.altova.mapforce.IEnumerable var7_shared, com.altova.mapforce.IEnumerable var8_shared, com.altova.mapforce.IEnumerable var9_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
			this.var6_shared = var6_shared;
			this.var7_shared = var7_shared;
			this.var8_shared = var8_shared;
			this.var9_shared = var9_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq597_seq_ closure;
			public Enumerator(seq597_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Scenario", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq598_join(closure.var1_current, closure.var2_shared, closure.var3_shared, closure.var4_shared, closure.var5_shared, closure.var6_shared, closure.var7_shared, closure.var8_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Scenario", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq661_join(closure.var9_shared)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq598_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
		com.altova.mapforce.IEnumerable var5_shared;
		com.altova.mapforce.IEnumerable var6_shared;
		com.altova.mapforce.IEnumerable var7_shared;
		com.altova.mapforce.IEnumerable var8_shared;
	
		public seq598_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared, com.altova.mapforce.IEnumerable var4_shared, com.altova.mapforce.IEnumerable var5_shared, com.altova.mapforce.IEnumerable var6_shared, com.altova.mapforce.IEnumerable var7_shared, com.altova.mapforce.IEnumerable var8_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
			this.var6_shared = var6_shared;
			this.var7_shared = var7_shared;
			this.var8_shared = var8_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq598_join closure;
			IEnumerator var9_shared;
			IEnumerator var10_filter;
			IEnumerator var12_shared;
			IEnumerator var13_filter;
			IEnumerator var11_filter;
			IEnumerator var15_shared;
			IEnumerator var16_filter;
			IEnumerator var14_filter;
			IEnumerator var18_shared;
			IEnumerator var19_filter;
			IEnumerator var17_filter;
			IEnumerator var20_filter;
			public Enumerator(seq598_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 32:	if (moveNext_32()) return true; break;
					case 33:	if (moveNext_33()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TemporalStatus", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf27_inputtoresult.eval(com.altova.CoreTypes.nodeToString(closure.var1_current))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("WeatherType", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq599_join(closure.var4_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUses", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq600_join(closure.var3_shared, closure.var4_shared, closure.var5_shared, closure.var6_shared, closure.var7_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeriesData", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq621_join(closure.var2_shared, closure.var3_shared, closure.var7_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AllResourceTotals", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq648_join(closure.var5_shared, closure.var6_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				var9_shared = (closure.var8_shared).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var9_shared.moveNext()) {state = 8; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var9_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 14;				
				if( var9_shared != null ) { var9_shared.close(); var9_shared = null; }
				var12_shared = (closure.var8_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var10_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq28_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq29_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 9; return false; }
				var11_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var10_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var11_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 11; return false; }
				if (!(com.altova.functions.Core.exists((new seq653_if_equal(((com.altova.mapforce.IMFNode)(var11_filter.current())), closure.var4_shared))))) {state = 11; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualHeatingDegreeDays", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal((java.lang.String)com.altova.functions.Core.last((new seq654_if_equal(((com.altova.mapforce.IMFNode)(var11_filter.current())), closure.var4_shared)))))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 16;				
				if (!var12_shared.moveNext()) {state = 15; return false; }
				var13_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var12_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 21;				
				if( var12_shared != null ) { var12_shared.close(); var12_shared = null; }
				var15_shared = (closure.var8_shared).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var13_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq28_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq29_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 16; return false; }
				var14_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var13_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 14;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 18;				
				if (!var14_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 18; return false; }
				if (!(com.altova.functions.Core.exists((new seq655_if_equal(((com.altova.mapforce.IMFNode)(var14_filter.current())), closure.var4_shared))))) {state = 18; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualCoolingDegreeDays", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal((java.lang.String)com.altova.functions.Core.last((new seq656_if_equal(((com.altova.mapforce.IMFNode)(var14_filter.current())), closure.var4_shared)))))));
				pos++;
				return true;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 23;				
				if (!var15_shared.moveNext()) {state = 22; return false; }
				var16_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var15_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 28;				
				if( var15_shared != null ) { var15_shared.close(); var15_shared = null; }
				var18_shared = (closure.var8_shared).enumerator();
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if (!var16_filter.moveNext()) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq28_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq29_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 23; return false; }
				var17_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var16_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 21;				
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 25;				
				if (!var17_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 25; return false; }
				if (!(com.altova.functions.Core.exists((new seq657_if_equal(((com.altova.mapforce.IMFNode)(var17_filter.current())), closure.var4_shared))))) {state = 25; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("HDDBaseTemperature", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal((java.lang.String)com.altova.functions.Core.last((new seq658_if_equal(((com.altova.mapforce.IMFNode)(var17_filter.current())), closure.var4_shared)))))));
				pos++;
				return true;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				return false;
			}
			private boolean moveNext_28() throws Exception {
				state = 30;				
				if (!var18_shared.moveNext()) {state = 29; return false; }
				var19_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var18_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_29() throws Exception {
				state = 0;				
				if( var18_shared != null ) { var18_shared.close(); var18_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("LinkedPremises", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Facility", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("LinkedFacilityID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("Building1"))))))));
				pos++;
				return true;
			}
			private boolean moveNext_30() throws Exception {
				state = 32;				
				if (!var19_filter.moveNext()) {state = 31; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq28_map(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))))) {state = 30; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq29_map(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))))) {state = 30; return false; }
				var20_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var19_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_31() throws Exception {
				state = 28;				
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				return false;
			}
			private boolean moveNext_32() throws Exception {
				state = 32;				
				if (!var20_filter.moveNext()) {state = 33; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var20_filter.current()))))))))) {state = 32; return false; }
				if (!(com.altova.functions.Core.exists((new seq659_if_equal(((com.altova.mapforce.IMFNode)(var20_filter.current())), closure.var4_shared))))) {state = 32; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CDDBaseTemperature", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal((java.lang.String)com.altova.functions.Core.last((new seq660_if_equal(((com.altova.mapforce.IMFNode)(var20_filter.current())), closure.var4_shared)))))));
				pos++;
				return true;
			}
			private boolean moveNext_33() throws Exception {
				state = 30;				
				if( var20_filter != null ) { var20_filter.close(); var20_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_shared != null ) { var9_shared.close(); var9_shared = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_shared != null ) { var12_shared.close(); var12_shared = null; }
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				if( var15_shared != null ) { var15_shared.close(); var15_shared = null; }
				if( var20_filter != null ) { var20_filter.close(); var20_filter = null; }
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				if( var18_shared != null ) { var18_shared.close(); var18_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq599_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq599_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq599_join closure;
			IEnumerator var2_shared;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq599_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq68_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq69_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Actual", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("WeatherDataSource", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf28_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq600_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
		com.altova.mapforce.IEnumerable var5_shared;
	
		public seq600_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared, com.altova.mapforce.IEnumerable var4_shared, com.altova.mapforce.IEnumerable var5_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq600_join closure;
			IEnumerator var6_shared;
			IEnumerator var7_filter;
			IEnumerator var11_shared;
			IEnumerator var12_filter;
			double var8_cast;
			IEnumerator var16_filter;
			com.altova.mapforce.IEnumerable var9_box;
			com.altova.mapforce.IEnumerable var10_filter;
			double var13_cast;
			IEnumerator var20_shared;
			com.altova.mapforce.IEnumerable var14_box;
			IEnumerator var17_filter;
			com.altova.mapforce.IEnumerable var15_filter;
			com.altova.mapforce.IEnumerable var21_Row;
			IEnumerator var22_filter;
			IEnumerator var25_shared;
			com.altova.mapforce.IEnumerable var18_vmf40_inputtoresult;
			com.altova.mapforce.IEnumerable var26_Row;
			com.altova.mapforce.IEnumerable var19_filter;
			IEnumerator var27_filter;
			IEnumerator var23_filter;
			com.altova.mapforce.IEnumerable var24_filter;
			IEnumerator var28_filter;
			java.lang.String var29_cast;
			com.altova.mapforce.IEnumerable var30_filter;
			public Enumerator(seq600_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var6_shared = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var6_shared.moveNext()) {state = 3; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 7;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				var11_shared = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var7_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 4; return false; }
				var8_cast = com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var7_filter.current()))));
				var9_box = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.mapforce.vmf.vmf32_inputtoresult.eval(var8_cast))));
				var10_filter = new com.altova.functions.Core.SequenceCache((new seq601_filter(closure.var1_shared)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUse", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq603_join(var10_filter, closure.var2_shared, closure.var3_shared, var8_cast, var9_box)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var11_shared.moveNext()) {state = 8; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 12;				
				if( var11_shared != null ) { var11_shared.close(); var11_shared = null; }
				var16_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var12_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq385_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 9; return false; }
				var13_cast = com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var12_filter.current()))));
				var14_box = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.mapforce.vmf.vmf38_inputtoresult.eval(var13_cast))));
				var15_filter = new com.altova.functions.Core.SequenceCache((new seq601_filter(closure.var1_shared)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUse", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq606_join(var15_filter, closure.var2_shared, closure.var3_shared, var13_cast, var14_box)));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var16_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 12; return false; }
				var17_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var16_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 17;				
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				var20_shared = (closure.var5_shared).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 14;				
				if (!var17_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 14; return false; }
				if (!(com.altova.functions.Core.exists(com.mapforce.vmf.vmf40_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))) {state = 14; return false; }
				var18_vmf40_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf40_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var17_filter.current())))));
				var19_filter = new com.altova.functions.Core.SequenceCache((new seq609_filter(closure.var1_shared)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUse", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq611_join(closure.var2_shared, closure.var3_shared, closure.var4_shared, var19_filter, var18_vmf40_inputtoresult)));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 19;				
				if (!var20_shared.moveNext()) {state = 18; return false; }
				var21_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var20_shared.current()))));
				var22_filter = (var21_Row).enumerator();
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 24;				
				if( var20_shared != null ) { var20_shared.close(); var20_shared = null; }
				var25_shared = (closure.var5_shared).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 21;				
				if (!var22_filter.moveNext()) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq91_map(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))))) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq92_map(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))))) {state = 19; return false; }
				var23_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var22_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 17;				
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 21;				
				if (!var23_filter.moveNext()) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var23_filter.current()))))))))) {state = 21; return false; }
				var24_filter = new com.altova.functions.Core.SequenceCache((new seq609_filter(closure.var1_shared)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUse", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq614_join(((com.altova.mapforce.IMFNode)(var23_filter.current())), closure.var2_shared, closure.var3_shared, var24_filter, var21_Row)));
				pos++;
				return true;
			}
			private boolean moveNext_22() throws Exception {
				state = 19;				
				if( var23_filter != null ) { var23_filter.close(); var23_filter = null; }
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 26;				
				if (!var25_shared.moveNext()) {state = 25; return false; }
				var26_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var25_shared.current()))));
				var27_filter = (var26_Row).enumerator();
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 0;				
				if( var25_shared != null ) { var25_shared.close(); var25_shared = null; }
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 28;				
				if (!var27_filter.moveNext()) {state = 27; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq91_map(((com.altova.mapforce.IMFNode)(var27_filter.current()))))))))) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq92_map(((com.altova.mapforce.IMFNode)(var27_filter.current()))))))))) {state = 26; return false; }
				var28_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var27_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 24;				
				if( var27_filter != null ) { var27_filter.close(); var27_filter = null; }
				return false;
			}
			private boolean moveNext_28() throws Exception {
				state = 28;				
				if (!var28_filter.moveNext()) {state = 29; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq385_map(((com.altova.mapforce.IMFNode)(var28_filter.current()))))))))) {state = 28; return false; }
				if (!(com.altova.functions.Core.exists(com.mapforce.vmf.vmf47_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var28_filter.current()))))))) {state = 28; return false; }
				var29_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var28_filter.current())));
				var30_filter = new com.altova.functions.Core.SequenceCache((new seq609_filter(closure.var1_shared)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUse", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq617_join(var26_Row, closure.var2_shared, closure.var3_shared, var30_filter, var29_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_29() throws Exception {
				state = 26;				
				if( var28_filter != null ) { var28_filter.close(); var28_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_shared != null ) { var11_shared.close(); var11_shared = null; }
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				if( var23_filter != null ) { var23_filter.close(); var23_filter = null; }
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				if( var20_shared != null ) { var20_shared.close(); var20_shared = null; }
				if( var28_filter != null ) { var28_filter.close(); var28_filter = null; }
				if( var27_filter != null ) { var27_filter.close(); var27_filter = null; }
				if( var25_shared != null ) { var25_shared.close(); var25_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq601_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq601_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq601_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq601_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq602_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq12_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq602_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq602_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq602_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq602_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq11_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq603_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
		double var4_shared;
		com.altova.mapforce.IEnumerable var5_shared;
	
		public seq603_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared, double var4_shared, com.altova.mapforce.IEnumerable var5_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq603_join closure;
			IEnumerator var6_shared;
			IEnumerator var7_filter;
			IEnumerator var8_shared;
			IEnumerator var9_filter;
			IEnumerator var11_shared;
			IEnumerator var12_filter;
			IEnumerator var10_filter;
			com.altova.mapforce.IEnumerable var13_Cell;
			IEnumerator var14_filter;
			public Enumerator(seq603_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box("Resource1"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var6_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var6_shared.moveNext()) {state = 4; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 8;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceBoundary", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf30_inputtoresult.eval(closure.var4_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var7_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EnergyResource", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf29_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var7_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf31_inputtoresult.eval(closure.var4_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PercentResource", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var5_shared);
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EndUse", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf33_inputtoresult.eval(closure.var4_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PercentEndUse", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var5_shared);
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualFuelUseNativeUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.doubleToDecimal(closure.var4_shared))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 14;				
				var8_shared = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 16;				
				if (!var8_shared.moveNext()) {state = 15; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var8_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 21;				
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				var11_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var9_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq15_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq16_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 16; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 14;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 18;				
				if (!var10_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 18; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualFuelUseConsistentUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.functions.Core.divide(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var10_filter.current())))), new java.math.BigDecimal("1000")))));
				pos++;
				return true;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 23;				
				if (!var11_shared.moveNext()) {state = 22; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var11_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 0;				
				if( var11_shared != null ) { var11_shared.close(); var11_shared = null; }
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if (!var12_filter.moveNext()) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq192_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq196_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 23; return false; }
				var13_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var12_filter.current()))));
				var14_filter = (var13_Cell).enumerator();
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 21;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 25;				
				if (!var14_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 25; return false; }
				if (!(com.altova.functions.Core.exists(com.mapforce.vmf.vmf34_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))) {state = 25; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq604_join(var13_Cell, closure.var1_shared))))))) {state = 25; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Utility", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq605_join(((com.altova.mapforce.IMFNode)(var14_filter.current())), var13_Cell, closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_shared != null ) { var11_shared.close(); var11_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq604_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq604_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq604_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			public Enumerator(seq604_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.equal(com.mapforce.vmf.vmf29_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))), com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current()))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq605_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq605_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq605_join closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			public Enumerator(seq605_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var4_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var4_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq604_join(closure.var2_shared, closure.var3_shared))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RateSchedule", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RateStructureName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeteringConfiguration", "http://nrel.gov/schemas/bedes-auc/2014"), com.mapforce.vmf.vmf34_inputtoresult.eval(com.altova.CoreTypes.nodeToString(closure.var1_current)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq604_join(closure.var2_shared, closure.var3_shared))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UtilityAccountNumber", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 0;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq606_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
		double var4_shared;
		com.altova.mapforce.IEnumerable var5_shared;
	
		public seq606_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared, double var4_shared, com.altova.mapforce.IEnumerable var5_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq606_join closure;
			IEnumerator var6_shared;
			IEnumerator var7_filter;
			IEnumerator var8_shared;
			IEnumerator var9_filter;
			IEnumerator var11_shared;
			IEnumerator var12_filter;
			IEnumerator var10_filter;
			com.altova.mapforce.IEnumerable var13_Cell;
			IEnumerator var14_filter;
			public Enumerator(seq606_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box("Resource2"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var6_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var6_shared.moveNext()) {state = 4; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 8;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceBoundary", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf36_inputtoresult.eval(closure.var4_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var7_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq385_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EnergyResource", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf35_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var7_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf37_inputtoresult.eval(closure.var4_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PercentResource", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var5_shared);
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EndUse", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf39_inputtoresult.eval(closure.var4_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PercentEndUse", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var5_shared);
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualFuelUseNativeUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.doubleToDecimal(closure.var4_shared))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 14;				
				var8_shared = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 16;				
				if (!var8_shared.moveNext()) {state = 15; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var8_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 21;				
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				var11_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var9_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq15_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq16_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 16; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 14;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 18;				
				if (!var10_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 18; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualFuelUseConsistentUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.functions.Core.divide(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var10_filter.current())))), new java.math.BigDecimal("1000")))));
				pos++;
				return true;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 23;				
				if (!var11_shared.moveNext()) {state = 22; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var11_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 0;				
				if( var11_shared != null ) { var11_shared.close(); var11_shared = null; }
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if (!var12_filter.moveNext()) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq192_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq196_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 23; return false; }
				var13_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var12_filter.current()))));
				var14_filter = (var13_Cell).enumerator();
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 21;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 25;				
				if (!var14_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 25; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq607_join(var13_Cell, closure.var1_shared))))))) {state = 25; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Utility", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq608_join(((com.altova.mapforce.IMFNode)(var14_filter.current())), var13_Cell, closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_shared != null ) { var11_shared.close(); var11_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq607_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq607_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq607_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			public Enumerator(seq607_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq385_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.equal(com.mapforce.vmf.vmf35_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))), com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current()))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq608_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq608_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq608_join closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			public Enumerator(seq608_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var4_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var4_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq607_join(closure.var2_shared, closure.var3_shared))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RateSchedule", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RateStructureName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var5_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 5; return false; }
				if (!(com.altova.functions.Core.exists(com.mapforce.vmf.vmf34_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq607_join(closure.var2_shared, closure.var3_shared))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeteringConfiguration", "http://nrel.gov/schemas/bedes-auc/2014"), com.mapforce.vmf.vmf34_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UtilityAccountNumber", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_current)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq609_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq609_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq609_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq609_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq610_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq64_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq610_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq610_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq610_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq610_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq611_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
		com.altova.mapforce.IEnumerable var5_shared;
	
		public seq611_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared, com.altova.mapforce.IEnumerable var4_shared, com.altova.mapforce.IEnumerable var5_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq611_join closure;
			IEnumerator var6_shared;
			IEnumerator var7_filter;
			IEnumerator var8_shared;
			IEnumerator var9_filter;
			IEnumerator var10_shared;
			IEnumerator var11_filter;
			IEnumerator var12_shared;
			IEnumerator var13_filter;
			IEnumerator var14_shared;
			IEnumerator var15_filter;
			IEnumerator var16_shared;
			IEnumerator var17_filter;
			IEnumerator var18_shared;
			IEnumerator var19_filter;
			IEnumerator var21_shared;
			IEnumerator var22_filter;
			IEnumerator var20_filter;
			com.altova.mapforce.IEnumerable var23_Cell;
			IEnumerator var24_filter;
			public Enumerator(seq611_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 32:	if (moveNext_32()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
					case 35:	if (moveNext_35()) return true; break;
					case 36:	if (moveNext_36()) return true; break;
					case 37:	if (moveNext_37()) return true; break;
					case 38:	if (moveNext_38()) return true; break;
					case 39:	if (moveNext_39()) return true; break;
					case 41:	if (moveNext_41()) return true; break;
					case 42:	if (moveNext_42()) return true; break;
					case 43:	if (moveNext_43()) return true; break;
					case 44:	if (moveNext_44()) return true; break;
					case 45:	if (moveNext_45()) return true; break;
					case 46:	if (moveNext_46()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box("Resource3"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EnergyResource", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var5_shared);
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var6_shared = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var6_shared.moveNext()) {state = 5; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 9;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				var8_shared = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var7_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceBoundary", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf41_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var7_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var8_shared.moveNext()) {state = 10; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var8_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 14;				
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				var10_shared = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var9_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var9_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 16;				
				if (!var10_shared.moveNext()) {state = 15; return false; }
				var11_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var10_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 19;				
				if( var10_shared != null ) { var10_shared.close(); var10_shared = null; }
				var12_shared = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 16;				
				if (!var11_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 16; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PercentResource", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.mapforce.vmf.vmf42_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var11_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_17() throws Exception {
				state = 14;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 21;				
				if (!var12_shared.moveNext()) {state = 20; return false; }
				var13_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var12_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 24;				
				if( var12_shared != null ) { var12_shared.close(); var12_shared = null; }
				var14_shared = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 21;				
				if (!var13_filter.moveNext()) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 21; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EndUse", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf43_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var13_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_22() throws Exception {
				state = 19;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 26;				
				if (!var14_shared.moveNext()) {state = 25; return false; }
				var15_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var14_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 29;				
				if( var14_shared != null ) { var14_shared.close(); var14_shared = null; }
				var16_shared = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 26;				
				if (!var15_filter.moveNext()) {state = 27; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 26; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PercentEndUse", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.mapforce.vmf.vmf42_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var15_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_27() throws Exception {
				state = 24;				
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				return false;
			}
			private boolean moveNext_29() throws Exception {
				state = 31;				
				if (!var16_shared.moveNext()) {state = 30; return false; }
				var17_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var16_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_30() throws Exception {
				state = 34;				
				if( var16_shared != null ) { var16_shared.close(); var16_shared = null; }
				var18_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_31() throws Exception {
				state = 31;				
				if (!var17_filter.moveNext()) {state = 32; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 31; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualFuelUseNativeUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var17_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_32() throws Exception {
				state = 29;				
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				return false;
			}
			private boolean moveNext_34() throws Exception {
				state = 36;				
				if (!var18_shared.moveNext()) {state = 35; return false; }
				var19_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var18_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_35() throws Exception {
				state = 41;				
				if( var18_shared != null ) { var18_shared.close(); var18_shared = null; }
				var21_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_36() throws Exception {
				state = 38;				
				if (!var19_filter.moveNext()) {state = 37; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq15_map(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))))) {state = 36; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq16_map(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))))) {state = 36; return false; }
				var20_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var19_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_37() throws Exception {
				state = 34;				
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				return false;
			}
			private boolean moveNext_38() throws Exception {
				state = 38;				
				if (!var20_filter.moveNext()) {state = 39; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var20_filter.current()))))))))) {state = 38; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualFuelUseConsistentUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.functions.Core.divide(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var20_filter.current())))), new java.math.BigDecimal("1000")))));
				pos++;
				return true;
			}
			private boolean moveNext_39() throws Exception {
				state = 36;				
				if( var20_filter != null ) { var20_filter.close(); var20_filter = null; }
				return false;
			}
			private boolean moveNext_41() throws Exception {
				state = 43;				
				if (!var21_shared.moveNext()) {state = 42; return false; }
				var22_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var21_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_42() throws Exception {
				state = 0;				
				if( var21_shared != null ) { var21_shared.close(); var21_shared = null; }
				return false;
			}
			private boolean moveNext_43() throws Exception {
				state = 45;				
				if (!var22_filter.moveNext()) {state = 44; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq192_map(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))))) {state = 43; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq196_map(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))))) {state = 43; return false; }
				var23_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var22_filter.current()))));
				var24_filter = (var23_Cell).enumerator();
				return false;
			}
			private boolean moveNext_44() throws Exception {
				state = 41;				
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				return false;
			}
			private boolean moveNext_45() throws Exception {
				state = 45;				
				if (!var24_filter.moveNext()) {state = 46; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var24_filter.current()))))))))) {state = 45; return false; }
				if (!(com.altova.functions.Core.exists(com.mapforce.vmf.vmf34_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var24_filter.current()))))))) {state = 45; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq612_map(closure.var5_shared, var23_Cell))))))) {state = 45; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Utility", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq613_join(((com.altova.mapforce.IMFNode)(var24_filter.current())), closure.var5_shared, var23_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_46() throws Exception {
				state = 43;				
				if( var24_filter != null ) { var24_filter.close(); var24_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var10_shared != null ) { var10_shared.close(); var10_shared = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_shared != null ) { var12_shared.close(); var12_shared = null; }
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				if( var14_shared != null ) { var14_shared.close(); var14_shared = null; }
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				if( var16_shared != null ) { var16_shared.close(); var16_shared = null; }
				if( var20_filter != null ) { var20_filter.close(); var20_filter = null; }
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				if( var18_shared != null ) { var18_shared.close(); var18_shared = null; }
				if( var24_filter != null ) { var24_filter.close(); var24_filter = null; }
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				if( var21_shared != null ) { var21_shared.close(); var21_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq612_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq612_map(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq612_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq612_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!(com.altova.functions.Core.exists(com.mapforce.vmf.vmf44_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))) {state = 2; return false; }
				current = com.altova.functions.Core.equal((java.lang.String)com.altova.functions.Core.first(com.mapforce.vmf.vmf44_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))), (java.lang.String)com.altova.functions.Core.first(closure.var1_shared));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq613_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq613_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq613_join closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			public Enumerator(seq613_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var4_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var4_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq612_map(closure.var2_shared, closure.var3_shared))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RateSchedule", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RateStructureName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeteringConfiguration", "http://nrel.gov/schemas/bedes-auc/2014"), com.mapforce.vmf.vmf34_inputtoresult.eval(com.altova.CoreTypes.nodeToString(closure.var1_current)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				var5_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq612_map(closure.var2_shared, closure.var3_shared))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UtilityAccountNumber", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 0;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq614_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
		com.altova.mapforce.IEnumerable var5_shared;
	
		public seq614_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared, com.altova.mapforce.IEnumerable var4_shared, com.altova.mapforce.IEnumerable var5_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq614_join closure;
			IEnumerator var6_shared;
			IEnumerator var7_filter;
			IEnumerator var8_shared;
			IEnumerator var9_filter;
			IEnumerator var10_shared;
			IEnumerator var11_filter;
			IEnumerator var12_shared;
			IEnumerator var13_filter;
			IEnumerator var14_filter;
			IEnumerator var16_shared;
			IEnumerator var15_filter;
			IEnumerator var17_filter;
			IEnumerator var19_shared;
			IEnumerator var20_filter;
			IEnumerator var18_filter;
			com.altova.mapforce.IEnumerable var21_Cell;
			IEnumerator var22_filter;
			public Enumerator(seq614_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 32:	if (moveNext_32()) return true; break;
					case 33:	if (moveNext_33()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
					case 35:	if (moveNext_35()) return true; break;
					case 37:	if (moveNext_37()) return true; break;
					case 38:	if (moveNext_38()) return true; break;
					case 39:	if (moveNext_39()) return true; break;
					case 40:	if (moveNext_40()) return true; break;
					case 41:	if (moveNext_41()) return true; break;
					case 42:	if (moveNext_42()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box("Resource4"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EnergyResource", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf45_inputtoresult.eval(com.altova.CoreTypes.nodeToString(closure.var1_current))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var6_shared = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var6_shared.moveNext()) {state = 5; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 9;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Gallons"));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var7_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceBoundary", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf41_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var7_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				var8_shared = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var8_shared.moveNext()) {state = 11; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var8_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 15;				
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				var10_shared = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var9_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PercentResource", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.mapforce.vmf.vmf42_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var9_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 17;				
				if (!var10_shared.moveNext()) {state = 16; return false; }
				var11_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var10_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 20;				
				if( var10_shared != null ) { var10_shared.close(); var10_shared = null; }
				var12_shared = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 17;				
				if (!var11_filter.moveNext()) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 17; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EndUse", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf43_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var11_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_18() throws Exception {
				state = 15;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 22;				
				if (!var12_shared.moveNext()) {state = 21; return false; }
				var13_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var12_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 25;				
				if( var12_shared != null ) { var12_shared.close(); var12_shared = null; }
				var14_filter = (closure.var5_shared).enumerator();
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 22;				
				if (!var13_filter.moveNext()) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 22; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PercentEndUse", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.mapforce.vmf.vmf42_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var13_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_23() throws Exception {
				state = 20;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 27;				
				if (!var14_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq184_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 25; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq185_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 25; return false; }
				var15_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var14_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 30;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				var16_shared = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 27;				
				if (!var15_filter.moveNext()) {state = 28; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 27; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualFuelUseNativeUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var15_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_28() throws Exception {
				state = 25;				
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				return false;
			}
			private boolean moveNext_30() throws Exception {
				state = 32;				
				if (!var16_shared.moveNext()) {state = 31; return false; }
				var17_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var16_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_31() throws Exception {
				state = 37;				
				if( var16_shared != null ) { var16_shared.close(); var16_shared = null; }
				var19_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_32() throws Exception {
				state = 34;				
				if (!var17_filter.moveNext()) {state = 33; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq15_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 32; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq16_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 32; return false; }
				var18_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var17_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_33() throws Exception {
				state = 30;				
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				return false;
			}
			private boolean moveNext_34() throws Exception {
				state = 34;				
				if (!var18_filter.moveNext()) {state = 35; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))))) {state = 34; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualFuelUseConsistentUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.functions.Core.divide(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var18_filter.current())))), new java.math.BigDecimal("1000")))));
				pos++;
				return true;
			}
			private boolean moveNext_35() throws Exception {
				state = 32;				
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				return false;
			}
			private boolean moveNext_37() throws Exception {
				state = 39;				
				if (!var19_shared.moveNext()) {state = 38; return false; }
				var20_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var19_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_38() throws Exception {
				state = 0;				
				if( var19_shared != null ) { var19_shared.close(); var19_shared = null; }
				return false;
			}
			private boolean moveNext_39() throws Exception {
				state = 41;				
				if (!var20_filter.moveNext()) {state = 40; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq192_map(((com.altova.mapforce.IMFNode)(var20_filter.current()))))))))) {state = 39; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq196_map(((com.altova.mapforce.IMFNode)(var20_filter.current()))))))))) {state = 39; return false; }
				var21_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var20_filter.current()))));
				var22_filter = (var21_Cell).enumerator();
				return false;
			}
			private boolean moveNext_40() throws Exception {
				state = 37;				
				if( var20_filter != null ) { var20_filter.close(); var20_filter = null; }
				return false;
			}
			private boolean moveNext_41() throws Exception {
				state = 41;				
				if (!var22_filter.moveNext()) {state = 42; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))))) {state = 41; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq615_map(var21_Cell))))))) {state = 41; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Utility", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq616_join(((com.altova.mapforce.IMFNode)(var22_filter.current())), var21_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_42() throws Exception {
				state = 39;				
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var10_shared != null ) { var10_shared.close(); var10_shared = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_shared != null ) { var12_shared.close(); var12_shared = null; }
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				if( var16_shared != null ) { var16_shared.close(); var16_shared = null; }
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				if( var20_filter != null ) { var20_filter.close(); var20_filter = null; }
				if( var19_shared != null ) { var19_shared.close(); var19_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq615_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq615_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq615_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq615_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!(com.altova.functions.Core.exists(com.mapforce.vmf.vmf46_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))) {state = 2; return false; }
				current = com.altova.functions.Core.equal("Fuel oil", (java.lang.String)com.altova.functions.Core.first(com.mapforce.vmf.vmf46_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq616_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq616_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq616_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq616_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq615_map(closure.var2_shared))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RateSchedule", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RateStructureName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				if (!(com.altova.functions.Core.exists(com.mapforce.vmf.vmf34_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq615_map(closure.var2_shared))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeteringConfiguration", "http://nrel.gov/schemas/bedes-auc/2014"), com.mapforce.vmf.vmf34_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UtilityAccountNumber", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_current)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq617_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
		java.lang.String var5_shared;
	
		public seq617_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared, com.altova.mapforce.IEnumerable var4_shared, java.lang.String var5_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq617_join closure;
			IEnumerator var6_shared;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			IEnumerator var10_shared;
			IEnumerator var9_filter;
			IEnumerator var11_filter;
			IEnumerator var12_shared;
			IEnumerator var13_filter;
			IEnumerator var14_shared;
			IEnumerator var15_filter;
			IEnumerator var16_filter;
			IEnumerator var18_shared;
			IEnumerator var17_filter;
			IEnumerator var19_filter;
			IEnumerator var21_shared;
			IEnumerator var22_filter;
			IEnumerator var20_filter;
			com.altova.mapforce.IEnumerable var23_Cell;
			IEnumerator var24_filter;
			com.altova.mapforce.IEnumerable var25_vmf48_inputtoresult;
			public Enumerator(seq617_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 32:	if (moveNext_32()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
					case 35:	if (moveNext_35()) return true; break;
					case 36:	if (moveNext_36()) return true; break;
					case 37:	if (moveNext_37()) return true; break;
					case 38:	if (moveNext_38()) return true; break;
					case 39:	if (moveNext_39()) return true; break;
					case 41:	if (moveNext_41()) return true; break;
					case 42:	if (moveNext_42()) return true; break;
					case 43:	if (moveNext_43()) return true; break;
					case 44:	if (moveNext_44()) return true; break;
					case 45:	if (moveNext_45()) return true; break;
					case 46:	if (moveNext_46()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box("Resource5"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EnergyResource", "http://nrel.gov/schemas/bedes-auc/2014"), com.mapforce.vmf.vmf47_inputtoresult.eval(closure.var5_shared));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var6_shared = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var6_shared.moveNext()) {state = 5; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 9;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				var8_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var7_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceBoundary", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf41_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var7_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var8_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq318_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq319_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 9; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var8_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 14;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				var10_shared = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var9_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq385_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var9_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 16;				
				if (!var10_shared.moveNext()) {state = 15; return false; }
				var11_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var10_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 19;				
				if( var10_shared != null ) { var10_shared.close(); var10_shared = null; }
				var12_shared = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 16;				
				if (!var11_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 16; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PercentResource", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.mapforce.vmf.vmf42_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var11_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_17() throws Exception {
				state = 14;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 21;				
				if (!var12_shared.moveNext()) {state = 20; return false; }
				var13_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var12_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 24;				
				if( var12_shared != null ) { var12_shared.close(); var12_shared = null; }
				var14_shared = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 21;				
				if (!var13_filter.moveNext()) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 21; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EndUse", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf43_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var13_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_22() throws Exception {
				state = 19;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 26;				
				if (!var14_shared.moveNext()) {state = 25; return false; }
				var15_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var14_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 29;				
				if( var14_shared != null ) { var14_shared.close(); var14_shared = null; }
				var16_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 26;				
				if (!var15_filter.moveNext()) {state = 27; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 26; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PercentEndUse", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.mapforce.vmf.vmf42_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var15_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_27() throws Exception {
				state = 24;				
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				return false;
			}
			private boolean moveNext_29() throws Exception {
				state = 31;				
				if (!var16_filter.moveNext()) {state = 30; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq184_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 29; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq185_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 29; return false; }
				var17_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var16_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_30() throws Exception {
				state = 34;				
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				var18_shared = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_31() throws Exception {
				state = 31;				
				if (!var17_filter.moveNext()) {state = 32; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 31; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualFuelUseNativeUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var17_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_32() throws Exception {
				state = 29;				
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				return false;
			}
			private boolean moveNext_34() throws Exception {
				state = 36;				
				if (!var18_shared.moveNext()) {state = 35; return false; }
				var19_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var18_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_35() throws Exception {
				state = 41;				
				if( var18_shared != null ) { var18_shared.close(); var18_shared = null; }
				var21_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_36() throws Exception {
				state = 38;				
				if (!var19_filter.moveNext()) {state = 37; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq15_map(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))))) {state = 36; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq16_map(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))))) {state = 36; return false; }
				var20_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var19_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_37() throws Exception {
				state = 34;				
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				return false;
			}
			private boolean moveNext_38() throws Exception {
				state = 38;				
				if (!var20_filter.moveNext()) {state = 39; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var20_filter.current()))))))))) {state = 38; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualFuelUseConsistentUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.functions.Core.divide(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var20_filter.current())))), new java.math.BigDecimal("1000")))));
				pos++;
				return true;
			}
			private boolean moveNext_39() throws Exception {
				state = 36;				
				if( var20_filter != null ) { var20_filter.close(); var20_filter = null; }
				return false;
			}
			private boolean moveNext_41() throws Exception {
				state = 43;				
				if (!var21_shared.moveNext()) {state = 42; return false; }
				var22_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var21_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_42() throws Exception {
				state = 0;				
				if( var21_shared != null ) { var21_shared.close(); var21_shared = null; }
				return false;
			}
			private boolean moveNext_43() throws Exception {
				state = 45;				
				if (!var22_filter.moveNext()) {state = 44; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq192_map(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))))) {state = 43; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq196_map(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))))) {state = 43; return false; }
				var23_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var22_filter.current()))));
				var24_filter = (var23_Cell).enumerator();
				return false;
			}
			private boolean moveNext_44() throws Exception {
				state = 41;				
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				return false;
			}
			private boolean moveNext_45() throws Exception {
				state = 45;				
				if (!var24_filter.moveNext()) {state = 46; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var24_filter.current()))))))))) {state = 45; return false; }
				var25_vmf48_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf48_inputtoresult.eval(closure.var5_shared));
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq618_cond_map(var23_Cell, var25_vmf48_inputtoresult))))))) {state = 45; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Utility", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq619_join(((com.altova.mapforce.IMFNode)(var24_filter.current())), var23_Cell, closure.var5_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_46() throws Exception {
				state = 43;				
				if( var24_filter != null ) { var24_filter.close(); var24_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var10_shared != null ) { var10_shared.close(); var10_shared = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_shared != null ) { var12_shared.close(); var12_shared = null; }
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				if( var14_shared != null ) { var14_shared.close(); var14_shared = null; }
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				if( var20_filter != null ) { var20_filter.close(); var20_filter = null; }
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				if( var18_shared != null ) { var18_shared.close(); var18_shared = null; }
				if( var24_filter != null ) { var24_filter.close(); var24_filter = null; }
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				if( var21_shared != null ) { var21_shared.close(); var21_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq618_cond_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq618_cond_map(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq618_cond_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq618_cond_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.exists(closure.var2_shared))) {state = 0; return false; }
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var3_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				if (!(com.altova.functions.Core.exists(com.mapforce.vmf.vmf49_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))) {state = 3; return false; }
				current = com.altova.functions.Core.equal((java.lang.String)com.altova.functions.Core.first(closure.var2_shared), (java.lang.String)com.altova.functions.Core.first(com.mapforce.vmf.vmf49_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq619_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		java.lang.String var3_shared;
	
		public seq619_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, java.lang.String var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq619_join closure;
			IEnumerator var4_filter;
			com.altova.mapforce.IEnumerable var5_vmf48_inputtoresult;
			public Enumerator(seq619_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RateSchedule", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq620_map(closure.var2_shared, closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var4_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var4_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 3; return false; }
				if (!(com.altova.functions.Core.exists(com.mapforce.vmf.vmf50_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))) {state = 3; return false; }
				var5_vmf48_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf48_inputtoresult.eval(closure.var3_shared));
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq618_cond_map(closure.var2_shared, var5_vmf48_inputtoresult))))))) {state = 3; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeteringConfiguration", "http://nrel.gov/schemas/bedes-auc/2014"), com.mapforce.vmf.vmf50_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UtilityAccountNumber", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_current)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq620_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		java.lang.String var2_shared;
	
		public seq620_map(com.altova.mapforce.IEnumerable var1_shared, java.lang.String var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq620_map closure;
			IEnumerator var3_filter;
			com.altova.mapforce.IEnumerable var4_vmf48_inputtoresult;
			public Enumerator(seq620_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				var4_vmf48_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf48_inputtoresult.eval(closure.var2_shared));
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq618_cond_map(closure.var1_shared, var4_vmf48_inputtoresult))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RateStructureName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq621_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq621_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq621_join closure;
			IEnumerator var4_shared;
			com.altova.mapforce.IEnumerable var5_Cell;
			com.altova.mapforce.IEnumerable var6_r;
			IEnumerator var8_shared;
			com.altova.mapforce.IEnumerable var7_filter;
			com.altova.mapforce.IEnumerable var9_Cell;
			IEnumerator var10_filter;
			IEnumerator var13_shared;
			com.altova.mapforce.IEnumerable var14_Cell;
			IEnumerator var15_filter;
			IEnumerator var17_shared;
			com.altova.mapforce.IEnumerable var11_r;
			double var12_cast;
			com.altova.mapforce.IEnumerable var18_Cell;
			IEnumerator var19_filter;
			IEnumerator var21_shared;
			double var16_cast;
			com.altova.mapforce.IEnumerable var22_Cell;
			IEnumerator var23_filter;
			IEnumerator var25_shared;
			double var20_cast;
			com.altova.mapforce.IEnumerable var26_Cell;
			IEnumerator var27_filter;
			IEnumerator var29_shared;
			double var24_cast;
			com.altova.mapforce.IEnumerable var30_Cell;
			IEnumerator var31_filter;
			IEnumerator var33_shared;
			double var28_cast;
			com.altova.mapforce.IEnumerable var34_Cell;
			IEnumerator var35_filter;
			IEnumerator var37_shared;
			double var32_cast;
			com.altova.mapforce.IEnumerable var38_Cell;
			IEnumerator var39_filter;
			IEnumerator var41_shared;
			double var36_cast;
			IEnumerator var42_filter;
			IEnumerator var47_shared;
			double var40_cast;
			IEnumerator var48_filter;
			com.altova.mapforce.IEnumerable var43_Cell;
			IEnumerator var53_shared;
			IEnumerator var44_filter;
			IEnumerator var54_filter;
			com.altova.mapforce.IEnumerable var49_Cell;
			IEnumerator var59_shared;
			java.lang.String var45_cast;
			IEnumerator var50_filter;
			double var46_cast;
			IEnumerator var60_filter;
			com.altova.mapforce.IEnumerable var55_Cell;
			java.lang.String var51_cast;
			IEnumerator var56_filter;
			double var52_cast;
			com.altova.mapforce.IEnumerable var61_Cell;
			java.lang.String var57_cast;
			IEnumerator var62_filter;
			double var58_cast;
			java.lang.String var63_cast;
			double var64_cast;
			public Enumerator(seq621_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 32:	if (moveNext_32()) return true; break;
					case 33:	if (moveNext_33()) return true; break;
					case 35:	if (moveNext_35()) return true; break;
					case 36:	if (moveNext_36()) return true; break;
					case 37:	if (moveNext_37()) return true; break;
					case 38:	if (moveNext_38()) return true; break;
					case 40:	if (moveNext_40()) return true; break;
					case 41:	if (moveNext_41()) return true; break;
					case 42:	if (moveNext_42()) return true; break;
					case 43:	if (moveNext_43()) return true; break;
					case 45:	if (moveNext_45()) return true; break;
					case 46:	if (moveNext_46()) return true; break;
					case 47:	if (moveNext_47()) return true; break;
					case 48:	if (moveNext_48()) return true; break;
					case 49:	if (moveNext_49()) return true; break;
					case 50:	if (moveNext_50()) return true; break;
					case 52:	if (moveNext_52()) return true; break;
					case 53:	if (moveNext_53()) return true; break;
					case 54:	if (moveNext_54()) return true; break;
					case 55:	if (moveNext_55()) return true; break;
					case 56:	if (moveNext_56()) return true; break;
					case 57:	if (moveNext_57()) return true; break;
					case 59:	if (moveNext_59()) return true; break;
					case 60:	if (moveNext_60()) return true; break;
					case 61:	if (moveNext_61()) return true; break;
					case 62:	if (moveNext_62()) return true; break;
					case 63:	if (moveNext_63()) return true; break;
					case 64:	if (moveNext_64()) return true; break;
					case 66:	if (moveNext_66()) return true; break;
					case 67:	if (moveNext_67()) return true; break;
					case 68:	if (moveNext_68()) return true; break;
					case 69:	if (moveNext_69()) return true; break;
					case 70:	if (moveNext_70()) return true; break;
					case 71:	if (moveNext_71()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var4_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var4_shared.moveNext()) {state = 3; return false; }
				var5_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_shared.current()))));
				var6_r = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), ((com.altova.mapforce.IMFNode)(var4_shared.current()))));
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq622_filter(var5_Cell)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeries", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq624_join(var7_filter, var6_r, var5_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var4_shared != null ) { var4_shared.close(); var4_shared = null; }
				var8_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var8_shared.moveNext()) {state = 6; return false; }
				var9_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var8_shared.current()))));
				var10_filter = (var9_Cell).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 10;				
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				var13_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var10_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 7; return false; }
				var11_r = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), ((com.altova.mapforce.IMFNode)(var8_shared.current()))));
				var12_cast = com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var10_filter.current()))));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeries", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq626_join(var12_cast, var11_r, var9_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var13_shared.moveNext()) {state = 11; return false; }
				var14_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var13_shared.current()))));
				var15_filter = (var14_Cell).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 15;				
				if( var13_shared != null ) { var13_shared.close(); var13_shared = null; }
				var17_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var15_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 12; return false; }
				var16_cast = com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var15_filter.current()))));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeries", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq628_join(var14_Cell, var16_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 17;				
				if (!var17_shared.moveNext()) {state = 16; return false; }
				var18_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var17_shared.current()))));
				var19_filter = (var18_Cell).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 20;				
				if( var17_shared != null ) { var17_shared.close(); var17_shared = null; }
				var21_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 17;				
				if (!var19_filter.moveNext()) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))))) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))))) {state = 17; return false; }
				var20_cast = com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var19_filter.current()))));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeries", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq630_join(var18_Cell, var20_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_18() throws Exception {
				state = 15;				
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 22;				
				if (!var21_shared.moveNext()) {state = 21; return false; }
				var22_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var21_shared.current()))));
				var23_filter = (var22_Cell).enumerator();
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 25;				
				if( var21_shared != null ) { var21_shared.close(); var21_shared = null; }
				var25_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 22;				
				if (!var23_filter.moveNext()) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq385_map(((com.altova.mapforce.IMFNode)(var23_filter.current()))))))))) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var23_filter.current()))))))))) {state = 22; return false; }
				var24_cast = com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var23_filter.current()))));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeries", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq632_join(var22_Cell, var24_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_23() throws Exception {
				state = 20;				
				if( var23_filter != null ) { var23_filter.close(); var23_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 27;				
				if (!var25_shared.moveNext()) {state = 26; return false; }
				var26_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var25_shared.current()))));
				var27_filter = (var26_Cell).enumerator();
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 30;				
				if( var25_shared != null ) { var25_shared.close(); var25_shared = null; }
				var29_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 27;				
				if (!var27_filter.moveNext()) {state = 28; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq390_map(((com.altova.mapforce.IMFNode)(var27_filter.current()))))))))) {state = 27; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var27_filter.current()))))))))) {state = 27; return false; }
				var28_cast = com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var27_filter.current()))));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeries", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq634_join(var26_Cell, var28_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_28() throws Exception {
				state = 25;				
				if( var27_filter != null ) { var27_filter.close(); var27_filter = null; }
				return false;
			}
			private boolean moveNext_30() throws Exception {
				state = 32;				
				if (!var29_shared.moveNext()) {state = 31; return false; }
				var30_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var29_shared.current()))));
				var31_filter = (var30_Cell).enumerator();
				return false;
			}
			private boolean moveNext_31() throws Exception {
				state = 35;				
				if( var29_shared != null ) { var29_shared.close(); var29_shared = null; }
				var33_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_32() throws Exception {
				state = 32;				
				if (!var31_filter.moveNext()) {state = 33; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var31_filter.current()))))))))) {state = 32; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var31_filter.current()))))))))) {state = 32; return false; }
				var32_cast = com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var31_filter.current()))));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeries", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq636_join(var30_Cell, var32_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_33() throws Exception {
				state = 30;				
				if( var31_filter != null ) { var31_filter.close(); var31_filter = null; }
				return false;
			}
			private boolean moveNext_35() throws Exception {
				state = 37;				
				if (!var33_shared.moveNext()) {state = 36; return false; }
				var34_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var33_shared.current()))));
				var35_filter = (var34_Cell).enumerator();
				return false;
			}
			private boolean moveNext_36() throws Exception {
				state = 40;				
				if( var33_shared != null ) { var33_shared.close(); var33_shared = null; }
				var37_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_37() throws Exception {
				state = 37;				
				if (!var35_filter.moveNext()) {state = 38; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq392_map(((com.altova.mapforce.IMFNode)(var35_filter.current()))))))))) {state = 37; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var35_filter.current()))))))))) {state = 37; return false; }
				var36_cast = com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var35_filter.current()))));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeries", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq638_join(var34_Cell, var36_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_38() throws Exception {
				state = 35;				
				if( var35_filter != null ) { var35_filter.close(); var35_filter = null; }
				return false;
			}
			private boolean moveNext_40() throws Exception {
				state = 42;				
				if (!var37_shared.moveNext()) {state = 41; return false; }
				var38_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var37_shared.current()))));
				var39_filter = (var38_Cell).enumerator();
				return false;
			}
			private boolean moveNext_41() throws Exception {
				state = 45;				
				if( var37_shared != null ) { var37_shared.close(); var37_shared = null; }
				var41_shared = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_42() throws Exception {
				state = 42;				
				if (!var39_filter.moveNext()) {state = 43; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq575_map(((com.altova.mapforce.IMFNode)(var39_filter.current()))))))))) {state = 42; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var39_filter.current()))))))))) {state = 42; return false; }
				var40_cast = com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var39_filter.current()))));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeries", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq640_join(var38_Cell, closure.var2_shared, var40_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_43() throws Exception {
				state = 40;				
				if( var39_filter != null ) { var39_filter.close(); var39_filter = null; }
				return false;
			}
			private boolean moveNext_45() throws Exception {
				state = 47;				
				if (!var41_shared.moveNext()) {state = 46; return false; }
				var42_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var41_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_46() throws Exception {
				state = 52;				
				if( var41_shared != null ) { var41_shared.close(); var41_shared = null; }
				var47_shared = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_47() throws Exception {
				state = 49;				
				if (!var42_filter.moveNext()) {state = 48; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var42_filter.current()))))))))) {state = 47; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq64_map(((com.altova.mapforce.IMFNode)(var42_filter.current()))))))))) {state = 47; return false; }
				var43_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var42_filter.current()))));
				var44_filter = (var43_Cell).enumerator();
				return false;
			}
			private boolean moveNext_48() throws Exception {
				state = 45;				
				if( var42_filter != null ) { var42_filter.close(); var42_filter = null; }
				return false;
			}
			private boolean moveNext_49() throws Exception {
				state = 49;				
				if (!var44_filter.moveNext()) {state = 50; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var44_filter.current()))))))))) {state = 49; return false; }
				var45_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var44_filter.current())));
				var46_cast = com.altova.CoreTypes.parseDouble(var45_cast);
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeries", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq644_join(var43_Cell, var46_cast, var45_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_50() throws Exception {
				state = 47;				
				if( var44_filter != null ) { var44_filter.close(); var44_filter = null; }
				return false;
			}
			private boolean moveNext_52() throws Exception {
				state = 54;				
				if (!var47_shared.moveNext()) {state = 53; return false; }
				var48_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var47_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_53() throws Exception {
				state = 59;				
				if( var47_shared != null ) { var47_shared.close(); var47_shared = null; }
				var53_shared = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_54() throws Exception {
				state = 56;				
				if (!var48_filter.moveNext()) {state = 55; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var48_filter.current()))))))))) {state = 54; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq64_map(((com.altova.mapforce.IMFNode)(var48_filter.current()))))))))) {state = 54; return false; }
				var49_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var48_filter.current()))));
				var50_filter = (var49_Cell).enumerator();
				return false;
			}
			private boolean moveNext_55() throws Exception {
				state = 52;				
				if( var48_filter != null ) { var48_filter.close(); var48_filter = null; }
				return false;
			}
			private boolean moveNext_56() throws Exception {
				state = 56;				
				if (!var50_filter.moveNext()) {state = 57; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var50_filter.current()))))))))) {state = 56; return false; }
				var51_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var50_filter.current())));
				var52_cast = com.altova.CoreTypes.parseDouble(var51_cast);
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeries", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq645_join(var49_Cell, var52_cast, var51_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_57() throws Exception {
				state = 54;				
				if( var50_filter != null ) { var50_filter.close(); var50_filter = null; }
				return false;
			}
			private boolean moveNext_59() throws Exception {
				state = 61;				
				if (!var53_shared.moveNext()) {state = 60; return false; }
				var54_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var53_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_60() throws Exception {
				state = 66;				
				if( var53_shared != null ) { var53_shared.close(); var53_shared = null; }
				var59_shared = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_61() throws Exception {
				state = 63;				
				if (!var54_filter.moveNext()) {state = 62; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var54_filter.current()))))))))) {state = 61; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq64_map(((com.altova.mapforce.IMFNode)(var54_filter.current()))))))))) {state = 61; return false; }
				var55_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var54_filter.current()))));
				var56_filter = (var55_Cell).enumerator();
				return false;
			}
			private boolean moveNext_62() throws Exception {
				state = 59;				
				if( var54_filter != null ) { var54_filter.close(); var54_filter = null; }
				return false;
			}
			private boolean moveNext_63() throws Exception {
				state = 63;				
				if (!var56_filter.moveNext()) {state = 64; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var56_filter.current()))))))))) {state = 63; return false; }
				var57_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var56_filter.current())));
				var58_cast = com.altova.CoreTypes.parseDouble(var57_cast);
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeries", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq646_join(var55_Cell, var58_cast, var57_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_64() throws Exception {
				state = 61;				
				if( var56_filter != null ) { var56_filter.close(); var56_filter = null; }
				return false;
			}
			private boolean moveNext_66() throws Exception {
				state = 68;				
				if (!var59_shared.moveNext()) {state = 67; return false; }
				var60_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var59_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_67() throws Exception {
				state = 0;				
				if( var59_shared != null ) { var59_shared.close(); var59_shared = null; }
				return false;
			}
			private boolean moveNext_68() throws Exception {
				state = 70;				
				if (!var60_filter.moveNext()) {state = 69; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var60_filter.current()))))))))) {state = 68; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq64_map(((com.altova.mapforce.IMFNode)(var60_filter.current()))))))))) {state = 68; return false; }
				var61_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var60_filter.current()))));
				var62_filter = (var61_Cell).enumerator();
				return false;
			}
			private boolean moveNext_69() throws Exception {
				state = 66;				
				if( var60_filter != null ) { var60_filter.close(); var60_filter = null; }
				return false;
			}
			private boolean moveNext_70() throws Exception {
				state = 70;				
				if (!var62_filter.moveNext()) {state = 71; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq385_map(((com.altova.mapforce.IMFNode)(var62_filter.current()))))))))) {state = 70; return false; }
				var63_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var62_filter.current())));
				var64_cast = com.altova.CoreTypes.parseDouble(var63_cast);
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeries", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq647_join(var61_Cell, var64_cast, var63_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_71() throws Exception {
				state = 68;				
				if( var62_filter != null ) { var62_filter.close(); var62_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_shared != null ) { var4_shared.close(); var4_shared = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				if( var13_shared != null ) { var13_shared.close(); var13_shared = null; }
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				if( var17_shared != null ) { var17_shared.close(); var17_shared = null; }
				if( var23_filter != null ) { var23_filter.close(); var23_filter = null; }
				if( var21_shared != null ) { var21_shared.close(); var21_shared = null; }
				if( var27_filter != null ) { var27_filter.close(); var27_filter = null; }
				if( var25_shared != null ) { var25_shared.close(); var25_shared = null; }
				if( var31_filter != null ) { var31_filter.close(); var31_filter = null; }
				if( var29_shared != null ) { var29_shared.close(); var29_shared = null; }
				if( var35_filter != null ) { var35_filter.close(); var35_filter = null; }
				if( var33_shared != null ) { var33_shared.close(); var33_shared = null; }
				if( var39_filter != null ) { var39_filter.close(); var39_filter = null; }
				if( var37_shared != null ) { var37_shared.close(); var37_shared = null; }
				if( var44_filter != null ) { var44_filter.close(); var44_filter = null; }
				if( var42_filter != null ) { var42_filter.close(); var42_filter = null; }
				if( var41_shared != null ) { var41_shared.close(); var41_shared = null; }
				if( var50_filter != null ) { var50_filter.close(); var50_filter = null; }
				if( var48_filter != null ) { var48_filter.close(); var48_filter = null; }
				if( var47_shared != null ) { var47_shared.close(); var47_shared = null; }
				if( var56_filter != null ) { var56_filter.close(); var56_filter = null; }
				if( var54_filter != null ) { var54_filter.close(); var54_filter = null; }
				if( var53_shared != null ) { var53_shared.close(); var53_shared = null; }
				if( var62_filter != null ) { var62_filter.close(); var62_filter = null; }
				if( var60_filter != null ) { var60_filter.close(); var60_filter = null; }
				if( var59_shared != null ) { var59_shared.close(); var59_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq622_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq622_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq622_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq622_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq623_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq623_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq623_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq623_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq623_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq624_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq624_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq624_join closure;
			IEnumerator var4_shared;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var8_shared;
			double var9_cast;
			public Enumerator(seq624_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 4;				
				if (!(com.altova.functions.Core.exists(closure.var2_shared))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ReadingType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf51_inputtoresult.eval(com.altova.CoreTypes.integerToDouble(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var2_shared))))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				var4_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_shared.moveNext()) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeriesReadingQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf52_inputtoresult.eval(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_shared.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if( var4_shared != null ) { var4_shared.close(); var4_shared = null; }
				var5_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("StartTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var6_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EndTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				var7_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 14;				
				if (!var7_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 14; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalFrequency", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf53_inputtoresult.eval(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var7_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 17;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				var8_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 17;				
				if (!var8_shared.moveNext()) {state = 18; return false; }
				var9_cast = com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_shared.current()))));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalReading", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq625_seq_(var9_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_18() throws Exception {
				state = 0;				
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUseID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("Resource1"))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var4_shared != null ) { var4_shared.close(); var4_shared = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq625_seq_ implements IEnumerable
	{
		double var1_shared;
	
		public seq625_seq_(double var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq625_seq_ closure;
			public Enumerator(seq625_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Source", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf54_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.doubleToDecimal(closure.var1_shared));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq626_join implements IEnumerable
	{
		double var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq626_join(double var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq626_join closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq626_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 4;				
				if (!(com.altova.functions.Core.exists(closure.var2_shared))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ReadingType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf55_inputtoresult.eval(com.altova.CoreTypes.integerToDouble(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var2_shared))))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeriesReadingQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf56_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				var4_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("StartTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var5_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 9; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EndTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var6_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var6_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalFrequency", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf57_inputtoresult.eval(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalReading", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq627_seq_(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUseID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("Resource1"))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq627_seq_ implements IEnumerable
	{
		double var1_shared;
	
		public seq627_seq_(double var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq627_seq_ closure;
			public Enumerator(seq627_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Source", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf58_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.doubleToDecimal(closure.var1_shared));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq628_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		double var2_shared;
	
		public seq628_join(com.altova.mapforce.IEnumerable var1_shared, double var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq628_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq628_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ReadingType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf60_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeriesReadingQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf61_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("StartTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EndTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalFrequency", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf59_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalReading", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq629_seq_(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUseID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("Resource1"))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq629_seq_ implements IEnumerable
	{
		double var1_shared;
	
		public seq629_seq_(double var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq629_seq_ closure;
			public Enumerator(seq629_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Source", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf62_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.doubleToDecimal(closure.var1_shared));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq630_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		double var2_shared;
	
		public seq630_join(com.altova.mapforce.IEnumerable var1_shared, double var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq630_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq630_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ReadingType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf64_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeriesReadingQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf65_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("StartTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EndTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalFrequency", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf63_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalReading", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq631_seq_(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUseID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("Resource1"))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq631_seq_ implements IEnumerable
	{
		double var1_shared;
	
		public seq631_seq_(double var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq631_seq_ closure;
			public Enumerator(seq631_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Source", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf66_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.doubleToDecimal(closure.var1_shared));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq632_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		double var2_shared;
	
		public seq632_join(com.altova.mapforce.IEnumerable var1_shared, double var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq632_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq632_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ReadingType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf68_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeriesReadingQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf69_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("StartTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EndTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalFrequency", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf67_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalReading", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq633_seq_(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUseID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("Resource2"))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq633_seq_ implements IEnumerable
	{
		double var1_shared;
	
		public seq633_seq_(double var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq633_seq_ closure;
			public Enumerator(seq633_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Source", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf70_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.doubleToDecimal(closure.var1_shared));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq634_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		double var2_shared;
	
		public seq634_join(com.altova.mapforce.IEnumerable var1_shared, double var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq634_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq634_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ReadingType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf72_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeriesReadingQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf73_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("StartTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EndTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalFrequency", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf71_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalReading", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq635_seq_(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUseID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("Resource2"))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq635_seq_ implements IEnumerable
	{
		double var1_shared;
	
		public seq635_seq_(double var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq635_seq_ closure;
			public Enumerator(seq635_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Source", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf74_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.doubleToDecimal(closure.var1_shared));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq636_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		double var2_shared;
	
		public seq636_join(com.altova.mapforce.IEnumerable var1_shared, double var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq636_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq636_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ReadingType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf76_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeriesReadingQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf77_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("StartTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EndTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalFrequency", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf75_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalReading", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq637_seq_(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUseID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("Resource3"))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq637_seq_ implements IEnumerable
	{
		double var1_shared;
	
		public seq637_seq_(double var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq637_seq_ closure;
			public Enumerator(seq637_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Source", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf78_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.doubleToDecimal(closure.var1_shared));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq638_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		double var2_shared;
	
		public seq638_join(com.altova.mapforce.IEnumerable var1_shared, double var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq638_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq638_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ReadingType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf80_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeriesReadingQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf81_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("StartTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EndTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalFrequency", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf79_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalReading", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq639_seq_(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUseID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("Resource3"))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq639_seq_ implements IEnumerable
	{
		double var1_shared;
	
		public seq639_seq_(double var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq639_seq_ closure;
			public Enumerator(seq639_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Source", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf82_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.doubleToDecimal(closure.var1_shared));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq640_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		double var3_shared;
	
		public seq640_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, double var3_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq640_join closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			public Enumerator(seq640_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ReadingType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf84_inputtoresult.eval(closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeriesReadingQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf85_inputtoresult.eval(closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("StartTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EndTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalFrequency", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf83_inputtoresult.eval(closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalReading", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq641_seq_(closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq642_join(closure.var2_shared)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq641_seq_ implements IEnumerable
	{
		double var1_shared;
	
		public seq641_seq_(double var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq641_seq_ closure;
			public Enumerator(seq641_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Source", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf86_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.doubleToDecimal(closure.var1_shared));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq642_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq642_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq642_join closure;
			IEnumerator var2_filter;
			IEnumerator var3_filter;
			public Enumerator(seq642_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq11_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq12_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq575_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq643_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq643_seq_ implements IEnumerable
	{
	
		public seq643_seq_()
		{
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq643_seq_ closure;
			public Enumerator(seq643_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Time Series Description"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Total Metered Energy Cost"));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq644_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		double var2_shared;
		java.lang.String var3_shared;
	
		public seq644_join(com.altova.mapforce.IEnumerable var1_shared, double var2_shared, java.lang.String var3_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq644_join closure;
			IEnumerator var4_filter;
			public Enumerator(seq644_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ReadingType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf87_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeriesReadingQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf88_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("StartTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalFrequency", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf89_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalReading", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(closure.var3_shared))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUseID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("Resource4"))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq645_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		double var2_shared;
		java.lang.String var3_shared;
	
		public seq645_join(com.altova.mapforce.IEnumerable var1_shared, double var2_shared, java.lang.String var3_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq645_join closure;
			IEnumerator var4_filter;
			public Enumerator(seq645_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ReadingType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf90_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeriesReadingQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf91_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("StartTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalFrequency", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf92_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalReading", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(closure.var3_shared))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUseID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("Resource4"))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq646_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		double var2_shared;
		java.lang.String var3_shared;
	
		public seq646_join(com.altova.mapforce.IEnumerable var1_shared, double var2_shared, java.lang.String var3_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq646_join closure;
			IEnumerator var4_filter;
			public Enumerator(seq646_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ReadingType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf93_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeriesReadingQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf94_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("StartTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalFrequency", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf95_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalReading", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(closure.var3_shared))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUseID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("Resource5"))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq647_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		double var2_shared;
		java.lang.String var3_shared;
	
		public seq647_join(com.altova.mapforce.IEnumerable var1_shared, double var2_shared, java.lang.String var3_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq647_join closure;
			IEnumerator var4_filter;
			public Enumerator(seq647_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ReadingType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf96_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeriesReadingQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf97_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq76_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("StartTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalFrequency", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf98_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalReading", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(closure.var3_shared))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUseID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("Resource5"))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq648_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq648_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq648_join closure;
			IEnumerator var3_shared;
			com.altova.mapforce.IEnumerable var4_Row;
			IEnumerator var5_filter;
			IEnumerator var9_shared;
			com.altova.mapforce.IEnumerable var10_Row;
			com.altova.mapforce.IEnumerable var11_filter;
			com.altova.mapforce.IEnumerable var6_Cell;
			IEnumerator var12_shared;
			IEnumerator var7_filter;
			IEnumerator var13_filter;
			java.lang.String var8_cast;
			java.lang.String var14_cast;
			public Enumerator(seq648_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current()))));
				var5_filter = (var4_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 9;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var9_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq15_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq16_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 4; return false; }
				var6_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current()))));
				var7_filter = (var6_Cell).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var7_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 6; return false; }
				var8_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var7_filter.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AllResourceTotal", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq649_join(var4_Row, closure.var2_shared, var6_Cell, var8_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var9_shared.moveNext()) {state = 10; return false; }
				var10_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var9_shared.current()))));
				var11_filter = new com.altova.functions.Core.SequenceCache((new seq650_filter(var10_Row)));
				var12_shared = (var11_filter).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var9_shared != null ) { var9_shared.close(); var9_shared = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var12_shared.moveNext()) {state = 12; return false; }
				var13_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var12_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var12_shared != null ) { var12_shared.close(); var12_shared = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var13_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 13; return false; }
				var14_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var13_filter.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AllResourceTotal", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq652_join(var11_filter, var10_Row, closure.var2_shared, var14_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_shared != null ) { var12_shared.close(); var12_shared = null; }
				if( var9_shared != null ) { var9_shared.close(); var9_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq649_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
		java.lang.String var4_shared;
	
		public seq649_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared, java.lang.String var4_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq649_join closure;
			IEnumerator var5_shared;
			IEnumerator var6_filter;
			IEnumerator var7_shared;
			IEnumerator var8_filter;
			IEnumerator var9_filter;
			IEnumerator var10_shared;
			IEnumerator var11_filter;
			IEnumerator var12_filter;
			IEnumerator var13_filter;
			public Enumerator(seq649_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var5_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var5_shared.moveNext()) {state = 3; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 7;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				var7_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var6_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq575_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EndUse", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf100_inputtoresult.eval(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var7_shared.moveNext()) {state = 8; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 12;				
				if( var7_shared != null ) { var7_shared.close(); var7_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceBoundary", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf99_inputtoresult.eval(com.altova.CoreTypes.parseDouble(closure.var4_shared))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var8_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq575_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 9; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TemporalStatus", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf101_inputtoresult.eval(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("SiteEnergyUse", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.functions.Core.divide(com.altova.CoreTypes.parseDecimal(closure.var4_shared), new java.math.BigDecimal("1000")))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 14;				
				var9_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 14;				
				if (!var9_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq385_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 14; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("SiteEnergyUseIntensity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var9_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 17;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				var10_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 19;				
				if (!var10_shared.moveNext()) {state = 18; return false; }
				var11_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var10_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 22;				
				if( var10_shared != null ) { var10_shared.close(); var10_shared = null; }
				var12_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 19;				
				if (!var11_filter.moveNext()) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq575_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 19; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EnergyCost", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var11_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_20() throws Exception {
				state = 17;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 24;				
				if (!var12_filter.moveNext()) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq71_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 22; return false; }
				var13_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var12_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 0;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 24;				
				if (!var13_filter.moveNext()) {state = 25; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 24; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ElectricitySourcedFromOnsiteRenewableSystems", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.functions.Core.divide(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var13_filter.current())))), new java.math.BigDecimal("3.412")))));
				pos++;
				return true;
			}
			private boolean moveNext_25() throws Exception {
				state = 22;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_shared != null ) { var7_shared.close(); var7_shared = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var10_shared != null ) { var10_shared.close(); var10_shared = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq650_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq650_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq650_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq650_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq651_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq71_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq651_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq651_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq651_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq651_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq652_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
		java.lang.String var4_shared;
	
		public seq652_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared, java.lang.String var4_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq652_join closure;
			IEnumerator var5_shared;
			IEnumerator var6_filter;
			IEnumerator var7_shared;
			IEnumerator var8_filter;
			IEnumerator var9_shared;
			IEnumerator var10_filter;
			IEnumerator var11_filter;
			IEnumerator var12_filter;
			public Enumerator(seq652_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var5_shared = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var5_shared.moveNext()) {state = 3; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 7;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				var7_shared = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var6_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq575_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EndUse", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf100_inputtoresult.eval(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var7_shared.moveNext()) {state = 8; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 12;				
				if( var7_shared != null ) { var7_shared.close(); var7_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceBoundary", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf102_inputtoresult.eval(com.altova.CoreTypes.parseDouble(closure.var4_shared))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var8_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq575_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 9; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TemporalStatus", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf101_inputtoresult.eval(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("SiteEnergyUse", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.functions.Core.divide(com.altova.CoreTypes.parseDecimal(closure.var4_shared), new java.math.BigDecimal("1000")))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 14;				
				var9_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 16;				
				if (!var9_shared.moveNext()) {state = 15; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 19;				
				if( var9_shared != null ) { var9_shared.close(); var9_shared = null; }
				var11_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 16;				
				if (!var10_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq385_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 16; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("SiteEnergyUseIntensity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var10_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_17() throws Exception {
				state = 14;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 21;				
				if (!var11_filter.moveNext()) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq66_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq67_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 19; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 0;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 21;				
				if (!var12_filter.moveNext()) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 21; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EnergyCost", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var12_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_22() throws Exception {
				state = 19;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_shared != null ) { var7_shared.close(); var7_shared = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_shared != null ) { var9_shared.close(); var9_shared = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq653_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq653_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq653_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var6_shared;
			IEnumerator var4_filter;
			IEnumerator var7_filter;
			IEnumerator var5_filter;
			IEnumerator var8_filter;
			public Enumerator(seq653_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 11;				
				var6_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq35_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq36_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var6_shared.moveNext()) {state = 12; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var7_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq35_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq36_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var8_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_filter.current())))), new java.math.BigDecimal("1.8")));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq654_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq654_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq654_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var6_shared;
			IEnumerator var4_filter;
			IEnumerator var7_filter;
			IEnumerator var5_filter;
			IEnumerator var8_filter;
			public Enumerator(seq654_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 11;				
				var6_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq35_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq36_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var6_shared.moveNext()) {state = 12; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var7_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq35_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq36_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var8_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_filter.current())))), new java.math.BigDecimal("1.8")));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq655_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq655_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq655_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var6_shared;
			IEnumerator var4_filter;
			IEnumerator var7_filter;
			IEnumerator var5_filter;
			IEnumerator var8_filter;
			public Enumerator(seq655_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 11;				
				var6_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq71_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var6_shared.moveNext()) {state = 12; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var7_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq71_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var8_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_filter.current())))), new java.math.BigDecimal("1.8")));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq656_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq656_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq656_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var6_shared;
			IEnumerator var4_filter;
			IEnumerator var7_filter;
			IEnumerator var5_filter;
			IEnumerator var8_filter;
			public Enumerator(seq656_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 11;				
				var6_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq71_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var6_shared.moveNext()) {state = 12; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var7_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq71_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var8_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_filter.current())))), new java.math.BigDecimal("1.8")));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq657_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq657_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq657_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var6_shared;
			IEnumerator var4_filter;
			IEnumerator var7_filter;
			IEnumerator var5_filter;
			IEnumerator var8_filter;
			public Enumerator(seq657_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 11;				
				var6_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq35_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq36_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var6_shared.moveNext()) {state = 12; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var7_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq35_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq36_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var8_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.add(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_filter.current())))), new java.math.BigDecimal("1.8")), new java.math.BigDecimal("32")));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq658_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq658_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq658_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var6_shared;
			IEnumerator var4_filter;
			IEnumerator var7_filter;
			IEnumerator var5_filter;
			IEnumerator var8_filter;
			public Enumerator(seq658_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 11;				
				var6_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq35_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq36_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var6_shared.moveNext()) {state = 12; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var7_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq35_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq36_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var8_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.add(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_filter.current())))), new java.math.BigDecimal("1.8")), new java.math.BigDecimal("32")));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq659_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq659_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq659_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var6_shared;
			IEnumerator var4_filter;
			IEnumerator var7_filter;
			IEnumerator var5_filter;
			IEnumerator var8_filter;
			public Enumerator(seq659_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 11;				
				var6_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq71_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var6_shared.moveNext()) {state = 12; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var7_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq71_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var8_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.add(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_filter.current())))), new java.math.BigDecimal("1.8")), new java.math.BigDecimal("32")));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq660_if_equal implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq660_if_equal(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq660_if_equal closure;
			IEnumerator var3_shared;
			IEnumerator var6_shared;
			IEnumerator var4_filter;
			IEnumerator var7_filter;
			IEnumerator var5_filter;
			IEnumerator var8_filter;
			public Enumerator(seq660_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(closure.var1_current), "IP"))) {state = 2; return false; }
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 11;				
				var6_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq71_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var6_shared.moveNext()) {state = 12; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var7_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq71_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var8_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.CoreTypes.decimalToString(com.altova.functions.Core.add(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_filter.current())))), new java.math.BigDecimal("1.8")), new java.math.BigDecimal("32")));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq661_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq661_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq661_join closure;
			IEnumerator var2_shared;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq661_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ScenarioName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("RecommendedPackage1"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var2_shared.moveNext()) {state = 4; return false; }
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 10;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ScenarioType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PackageOfMeasures", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq662_join(closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq32_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq33_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TemporalStatus", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf103_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq667_join(closure.var1_shared)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq662_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq662_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq662_join closure;
			IEnumerator var2_shared;
			IEnumerator var3_filter;
			IEnumerator var5_shared;
			com.altova.mapforce.IEnumerable var6_Row;
			IEnumerator var4_filter;
			IEnumerator var7_filter;
			IEnumerator var10_shared;
			IEnumerator var11_filter;
			IEnumerator var14_shared;
			IEnumerator var8_filter;
			IEnumerator var15_filter;
			IEnumerator var12_filter;
			IEnumerator var17_shared;
			com.altova.mapforce.IEnumerable var9_filter;
			IEnumerator var18_filter;
			java.lang.String var13_cast;
			IEnumerator var16_filter;
			IEnumerator var20_shared;
			IEnumerator var21_filter;
			IEnumerator var19_filter;
			IEnumerator var23_shared;
			IEnumerator var24_filter;
			IEnumerator var22_filter;
			IEnumerator var25_filter;
			public Enumerator(seq662_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 32:	if (moveNext_32()) return true; break;
					case 33:	if (moveNext_33()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
					case 35:	if (moveNext_35()) return true; break;
					case 37:	if (moveNext_37()) return true; break;
					case 38:	if (moveNext_38()) return true; break;
					case 39:	if (moveNext_39()) return true; break;
					case 40:	if (moveNext_40()) return true; break;
					case 41:	if (moveNext_41()) return true; break;
					case 42:	if (moveNext_42()) return true; break;
					case 44:	if (moveNext_44()) return true; break;
					case 45:	if (moveNext_45()) return true; break;
					case 46:	if (moveNext_46()) return true; break;
					case 47:	if (moveNext_47()) return true; break;
					case 48:	if (moveNext_48()) return true; break;
					case 49:	if (moveNext_49()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 9;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				var5_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq32_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq33_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualSavingsCost", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var5_shared.moveNext()) {state = 10; return false; }
				var6_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current()))));
				var7_filter = (var6_Row).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 16;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				var10_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var7_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 11; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var8_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 13; return false; }
				var9_filter = new com.altova.functions.Core.SequenceCache((new seq663_filter(var6_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualSavingsByFuel", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq665_join(((com.altova.mapforce.IMFNode)(var8_filter.current())), var9_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var10_shared.moveNext()) {state = 17; return false; }
				var11_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var10_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 23;				
				if( var10_shared != null ) { var10_shared.close(); var10_shared = null; }
				var14_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var11_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq32_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq33_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 18; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 20;				
				if (!var12_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 20; return false; }
				var13_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var12_filter.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualSavingsByFuel", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq666_seq_(var13_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if (!var14_shared.moveNext()) {state = 24; return false; }
				var15_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var14_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 30;				
				if( var14_shared != null ) { var14_shared.close(); var14_shared = null; }
				var17_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 27;				
				if (!var15_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq32_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 25; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq33_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 25; return false; }
				var16_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var15_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 27;				
				if (!var16_filter.moveNext()) {state = 28; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 27; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("SummerPeakElectricityReduction", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var16_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_28() throws Exception {
				state = 25;				
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				return false;
			}
			private boolean moveNext_30() throws Exception {
				state = 32;				
				if (!var17_shared.moveNext()) {state = 31; return false; }
				var18_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var17_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_31() throws Exception {
				state = 37;				
				if( var17_shared != null ) { var17_shared.close(); var17_shared = null; }
				var20_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_32() throws Exception {
				state = 34;				
				if (!var18_filter.moveNext()) {state = 33; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq32_map(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))))) {state = 32; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq33_map(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))))) {state = 32; return false; }
				var19_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var18_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_33() throws Exception {
				state = 30;				
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				return false;
			}
			private boolean moveNext_34() throws Exception {
				state = 34;				
				if (!var19_filter.moveNext()) {state = 35; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))))) {state = 34; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PackageFirstCost", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var19_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_35() throws Exception {
				state = 32;				
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				return false;
			}
			private boolean moveNext_37() throws Exception {
				state = 39;				
				if (!var20_shared.moveNext()) {state = 38; return false; }
				var21_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var20_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_38() throws Exception {
				state = 44;				
				if( var20_shared != null ) { var20_shared.close(); var20_shared = null; }
				var23_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_39() throws Exception {
				state = 41;				
				if (!var21_filter.moveNext()) {state = 40; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq32_map(((com.altova.mapforce.IMFNode)(var21_filter.current()))))))))) {state = 39; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq33_map(((com.altova.mapforce.IMFNode)(var21_filter.current()))))))))) {state = 39; return false; }
				var22_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var21_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_40() throws Exception {
				state = 37;				
				if( var21_filter != null ) { var21_filter.close(); var21_filter = null; }
				return false;
			}
			private boolean moveNext_41() throws Exception {
				state = 41;				
				if (!var22_filter.moveNext()) {state = 42; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))))) {state = 41; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FundingFromIncentives", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var22_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_42() throws Exception {
				state = 39;				
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				return false;
			}
			private boolean moveNext_44() throws Exception {
				state = 46;				
				if (!var23_shared.moveNext()) {state = 45; return false; }
				var24_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var23_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_45() throws Exception {
				state = 0;				
				if( var23_shared != null ) { var23_shared.close(); var23_shared = null; }
				return false;
			}
			private boolean moveNext_46() throws Exception {
				state = 48;				
				if (!var24_filter.moveNext()) {state = 47; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq32_map(((com.altova.mapforce.IMFNode)(var24_filter.current()))))))))) {state = 46; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq33_map(((com.altova.mapforce.IMFNode)(var24_filter.current()))))))))) {state = 46; return false; }
				var25_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var24_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_47() throws Exception {
				state = 44;				
				if( var24_filter != null ) { var24_filter.close(); var24_filter = null; }
				return false;
			}
			private boolean moveNext_48() throws Exception {
				state = 48;				
				if (!var25_filter.moveNext()) {state = 49; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq392_map(((com.altova.mapforce.IMFNode)(var25_filter.current()))))))))) {state = 48; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("SimplePayback", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var25_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_49() throws Exception {
				state = 46;				
				if( var25_filter != null ) { var25_filter.close(); var25_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var10_shared != null ) { var10_shared.close(); var10_shared = null; }
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				if( var14_shared != null ) { var14_shared.close(); var14_shared = null; }
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				if( var17_shared != null ) { var17_shared.close(); var17_shared = null; }
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				if( var21_filter != null ) { var21_filter.close(); var21_filter = null; }
				if( var20_shared != null ) { var20_shared.close(); var20_shared = null; }
				if( var25_filter != null ) { var25_filter.close(); var25_filter = null; }
				if( var24_filter != null ) { var24_filter.close(); var24_filter = null; }
				if( var23_shared != null ) { var23_shared.close(); var23_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq663_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq663_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq663_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq663_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq664_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq33_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq664_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq664_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq664_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq664_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq32_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq665_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq665_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq665_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			IEnumerator var5_shared;
			IEnumerator var6_filter;
			public Enumerator(seq665_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EnergyResource", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf104_inputtoresult.eval(com.altova.CoreTypes.nodeToString(closure.var1_current))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 8;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var5_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf105_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var5_shared.moveNext()) {state = 9; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 0;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 10;				
				if (!var6_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq125_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualSavingsNativeUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq666_seq_ implements IEnumerable
	{
		java.lang.String var1_shared;
	
		public seq666_seq_(java.lang.String var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq666_seq_ closure;
			public Enumerator(seq666_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EnergyResource", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf106_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf107_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualSavingsNativeUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(closure.var1_shared))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq667_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq667_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq667_join closure;
			IEnumerator var2_shared;
			com.altova.mapforce.IEnumerable var3_Row;
			IEnumerator var4_filter;
			IEnumerator var6_shared;
			com.altova.mapforce.IEnumerable var7_Row;
			IEnumerator var8_filter;
			IEnumerator var5_filter;
			IEnumerator var9_filter;
			public Enumerator(seq667_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				var3_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_shared.current()))));
				var4_filter = (var3_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 9;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				var6_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq32_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq33_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq390_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq668_join(((com.altova.mapforce.IMFNode)(var5_filter.current())), var3_Row)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var6_shared.moveNext()) {state = 10; return false; }
				var7_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current()))));
				var8_filter = (var7_Row).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var8_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq32_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq33_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 11; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var8_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var9_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 13; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq669_join(((com.altova.mapforce.IMFNode)(var9_filter.current())), var7_Row)));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq668_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq668_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq668_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq668_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_current)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq390_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq669_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq669_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq669_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq669_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_current)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq670_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq670_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq670_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			java.lang.String var7_cast;
			public Enumerator(seq670_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq6_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq87_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var6_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 8; return false; }
				var7_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Contact", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq671_seq_(var7_cast, closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq671_seq_ implements IEnumerable
	{
		java.lang.String var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq671_seq_(java.lang.String var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq671_seq_ closure;
			public Enumerator(seq671_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), closure.var2_shared);
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ContactRole", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf108_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ContactName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(closure.var1_shared));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class Outer implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_ASHRAE_211_Form_Instance;
	
		public Outer(com.altova.mapforce.IMFNode var1_ASHRAE_211_Form_Instance)
		{
			this.var1_ASHRAE_211_Form_Instance = var1_ASHRAE_211_Form_Instance;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			Outer closure;
			IEnumerator var2_box;
			public Enumerator(Outer closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_box = ((new main(closure.var1_ASHRAE_211_Form_Instance))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_box.moveNext()) {state = 3; return false; }
				current = var2_box.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_box != null ) { var2_box.close(); var2_box = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_box != null ) { var2_box.close(); var2_box = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}



	// instances
	protected org.w3c.dom.Node varASHRAE_211_FormInstance;

	public void run(String ASHRAE_211_FormSourceFilename, String BuildingSync2TargetFilename) throws Exception {
		// open source streams
		writeTrace("Loading " + ASHRAE_211_FormSourceFilename + "...\n");
		com.altova.io.FileInput ASHRAE_211_FormSource = new com.altova.io.FileInput(ASHRAE_211_FormSourceFilename);
		// open target stream
		com.altova.io.FileOutput BuildingSync2Target = new com.altova.io.FileOutput(BuildingSync2TargetFilename);

		// run
	
		run(ASHRAE_211_FormSource, BuildingSync2Target);

		// close source streams
		ASHRAE_211_FormSource.close();
		// close target stream
		writeTrace("Saving " + BuildingSync2TargetFilename + "...\n");
		BuildingSync2Target.close();
	}


	// main entry point

	public void run(com.altova.io.Input ASHRAE_211_FormSource, com.altova.io.Output BuildingSync2Target) throws Exception {
		// Open the source(s)
		com.altova.xml.XLSXFileReader xlsxReader_ASHRAE_211_Form = new com.altova.xml.XLSXFileReader(ASHRAE_211_FormSource);
		org.w3c.dom.Document doc_ASHRAE_211_Form = xlsxReader_ASHRAE_211_Form.run();
		varASHRAE_211_FormInstance = doc_ASHRAE_211_Form;
		if (runDoesCloseAll)
			ASHRAE_211_FormSource.close();

		// Create the target
		org.w3c.dom.Document BuildingSync2Doc = (BuildingSync2Target.getType() == com.altova.io.Output.IO_DOM) ? BuildingSync2Target.getDocument() : XmlTreeOperations.createDocument();

		// Execute mapping

		main mapping = new main(new com.altova.xml.DOMDocumentAsMFNodeAdapter(varASHRAE_211_FormInstance, ASHRAE_211_FormSource.getFilename()));

		com.altova.xml.MFDOMWriter.write(mapping, BuildingSync2Doc);
		// Close the target
		XmlTreeOperations.saveDocument(BuildingSync2Doc, BuildingSync2Target, "UTF-8", false, false, true, false);

		
		if (runDoesCloseAll)
		{
			ASHRAE_211_FormSource.close();
			BuildingSync2Target.close();
		}
	}



}
