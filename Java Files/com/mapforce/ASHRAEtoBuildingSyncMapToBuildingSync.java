/**
 * ASHRAEtoBuildingSyncMapToBuildingSync.java
 *
 * This file was generated by MapForce 2016r2.
 *
 * YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
 * OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
 *
 * Refer to the MapForce Documentation for further details.
 * http://www.altova.com/mapforce
 */
package com.mapforce;
import com.altova.mapforce.*;
import com.altova.types.*;
import com.altova.xml.*;
import java.util.*;

public class ASHRAEtoBuildingSyncMapToBuildingSync extends com.altova.TraceProvider 
{
	private boolean runDoesCloseAll = true;
	public void setCloseObjectsAfterRun(boolean c) {runDoesCloseAll = c;}
	public boolean getCloseObjectsAfterRun() {return runDoesCloseAll;}

	
	static class main implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_ASHRAE_211_Form_Instance;
	
		public main(com.altova.mapforce.IMFNode var1_ASHRAE_211_Form_Instance)
		{
			this.var1_ASHRAE_211_Form_Instance = var1_ASHRAE_211_Form_Instance;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 2;
			Object current;
			main closure;
			com.altova.mapforce.IEnumerable var2_box;
			com.altova.mapforce.IEnumerable var3_box;
			com.altova.mapforce.IEnumerable var4_Workbook;
			public Enumerator(main closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_2() throws Exception {
				state = 0;				
				var2_box = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.box("Window1"));
				var3_box = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.box("Auditor1"));
				var4_Workbook = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Workbook", ""), closure.var1_ASHRAE_211_Form_Instance));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Audits", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq1_seq_(var3_box, var2_box, var4_Workbook)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq1_seq_ implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq1_seq_(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq1_seq_ closure;
			public Enumerator(seq1_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("xsi:schemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), com.altova.functions.Core.box("http://nrel.gov/schemas/bedes-auc/2014 file:///C:/Users/Robert/Documents/GitHub/BuildingSync/schema/BuildingSync.xsd"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Audit", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq2_join(closure.var1_shared, closure.var2_shared, closure.var3_shared)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq2_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq2_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq2_join closure;
			IEnumerator var4_shared;
			IEnumerator var5_filter;
			com.altova.mapforce.IEnumerable var6_Row;
			com.altova.mapforce.IEnumerable var7_filter;
			IEnumerator var8_filter;
			IEnumerator var9_filter;
			public Enumerator(seq2_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Sites", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Site", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq3_seq_(closure.var2_shared, closure.var3_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Systems", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq139_join(closure.var2_shared, closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var4_shared = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_shared.moveNext()) {state = 5; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var4_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 13;				
				if( var4_shared != null ) { var4_shared.close(); var4_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Report", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq544_join(closure.var1_shared, closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq530_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				var6_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current()))));
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq531_filter(var6_Row)));
				var8_filter = (var7_filter).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var8_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq12_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 8; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var8_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 10;				
				if (!var9_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 10; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Measures", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq532_join(var6_Row, var7_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Contacts", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq620_join(closure.var1_shared, closure.var3_shared)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_shared != null ) { var4_shared.close(); var4_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq3_seq_ implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq3_seq_(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq3_seq_ closure;
			public Enumerator(seq3_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Address", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq4_join(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Facilities", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq17_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq4_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq4_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq4_join closure;
			IEnumerator var2_shared;
			IEnumerator var3_filter;
			IEnumerator var6_shared;
			IEnumerator var4_filter;
			IEnumerator var7_filter;
			IEnumerator var10_shared;
			IEnumerator var8_filter;
			IEnumerator var11_filter;
			IEnumerator var5_filter;
			IEnumerator var14_shared;
			IEnumerator var12_filter;
			IEnumerator var15_filter;
			IEnumerator var9_filter;
			IEnumerator var16_filter;
			IEnumerator var13_filter;
			IEnumerator var17_filter;
			public Enumerator(seq4_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 32:	if (moveNext_32()) return true; break;
					case 33:	if (moveNext_33()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
					case 35:	if (moveNext_35()) return true; break;
					case 36:	if (moveNext_36()) return true; break;
					case 37:	if (moveNext_37()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("StreetAddressDetail", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Simplified", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq5_join(closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var2_shared.moveNext()) {state = 4; return false; }
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var2_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 12;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				var6_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq6_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq11_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq12_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var5_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 9; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("City", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var6_shared.moveNext()) {state = 13; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 21;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				var10_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 16;				
				if (!var7_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq6_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 14; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var8_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq13_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq14_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 16; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var8_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 14;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 18;				
				if (!var9_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 18; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("State", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var9_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 23;				
				if (!var10_shared.moveNext()) {state = 22; return false; }
				var11_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var10_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 30;				
				if( var10_shared != null ) { var10_shared.close(); var10_shared = null; }
				var14_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if (!var11_filter.moveNext()) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq6_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 23; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 21;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 27;				
				if (!var12_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq15_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 25; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq16_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 25; return false; }
				var13_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var12_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 27;				
				if (!var13_filter.moveNext()) {state = 28; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 27; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PostalCode", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.substringBefore(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var13_filter.current()))), "-")));
				pos++;
				return true;
			}
			private boolean moveNext_28() throws Exception {
				state = 25;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_30() throws Exception {
				state = 32;				
				if (!var14_shared.moveNext()) {state = 31; return false; }
				var15_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var14_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_31() throws Exception {
				state = 0;				
				if( var14_shared != null ) { var14_shared.close(); var14_shared = null; }
				return false;
			}
			private boolean moveNext_32() throws Exception {
				state = 34;				
				if (!var15_filter.moveNext()) {state = 33; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq6_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 32; return false; }
				var16_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var15_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_33() throws Exception {
				state = 30;				
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				return false;
			}
			private boolean moveNext_34() throws Exception {
				state = 36;				
				if (!var16_filter.moveNext()) {state = 35; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq15_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 34; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq16_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 34; return false; }
				var17_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var16_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_35() throws Exception {
				state = 32;				
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				return false;
			}
			private boolean moveNext_36() throws Exception {
				state = 36;				
				if (!var17_filter.moveNext()) {state = 37; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 36; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PostalCodePlus4", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.substringAfter(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var17_filter.current()))), "-")));
				pos++;
				return true;
			}
			private boolean moveNext_37() throws Exception {
				state = 34;				
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var10_shared != null ) { var10_shared.close(); var10_shared = null; }
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				if( var14_shared != null ) { var14_shared.close(); var14_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq5_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq5_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq5_join closure;
			IEnumerator var2_shared;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			public Enumerator(seq5_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var2_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq6_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 6; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("StreetAddress", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq6_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq6_map(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq6_map closure;
			IEnumerator var2_Name;
			public Enumerator(seq6_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_Name = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_n)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_Name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_Name.current()))), "L0 - Building");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq7_CoreAny implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_sequence;
	
		public seq7_CoreAny(com.altova.mapforce.IEnumerable var1_sequence)
		{
			this.var1_sequence = var1_sequence;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq7_CoreAny closure;
			IEnumerator var2_enum;
			public Enumerator(seq7_CoreAny closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_enum = (closure.var1_sequence).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_enum.moveNext()) {state = 3; return false; }
				if (!(((Boolean)(var2_enum.current())))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = com.altova.CoreTypes.parseBoolean("false");
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var2_enum != null ) { var2_enum.close(); var2_enum = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_enum != null ) { var2_enum.close(); var2_enum = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq8_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq8_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq8_map closure;
			IEnumerator var2_r;
			public Enumerator(seq8_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(5L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq9_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq9_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq9_map closure;
			IEnumerator var2_r;
			public Enumerator(seq9_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(5L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq10_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq10_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq10_map closure;
			IEnumerator var2_n;
			public Enumerator(seq10_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(2L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq11_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq11_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq11_map closure;
			IEnumerator var2_r;
			public Enumerator(seq11_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(6L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq12_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq12_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq12_map closure;
			IEnumerator var2_r;
			public Enumerator(seq12_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(6L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq13_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq13_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq13_map closure;
			IEnumerator var2_r;
			public Enumerator(seq13_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(7L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq14_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq14_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq14_map closure;
			IEnumerator var2_r;
			public Enumerator(seq14_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(7L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq15_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq15_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq15_map closure;
			IEnumerator var2_r;
			public Enumerator(seq15_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(8L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq16_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq16_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq16_map closure;
			IEnumerator var2_r;
			public Enumerator(seq16_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(8L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq17_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq17_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq17_join closure;
			IEnumerator var3_shared;
			com.altova.mapforce.IEnumerable var4_Worksheet;
			IEnumerator var5_filter;
			com.altova.mapforce.IEnumerable var6_Row;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			com.altova.mapforce.IEnumerable var9_box;
			com.altova.mapforce.IEnumerable var10_filter;
			com.altova.mapforce.IEnumerable var11_filter;
			com.altova.mapforce.IEnumerable var12_filter;
			com.altova.mapforce.IEnumerable var13_filter;
			com.altova.mapforce.IEnumerable var14_filter;
			com.altova.mapforce.IEnumerable var15_join;
			public Enumerator(seq17_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current()))));
				var5_filter = (var4_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq6_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 4; return false; }
				var6_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current()))));
				var7_filter = (var6_Row).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var7_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq18_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq19_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 6; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var8_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 8; return false; }
				var9_box = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.box("Wholebuilding"));
				var10_filter = new com.altova.functions.Core.SequenceCache((new seq20_filter(var4_Worksheet)));
				var11_filter = new com.altova.functions.Core.SequenceCache((new seq22_filter(var4_Worksheet)));
				var12_filter = new com.altova.functions.Core.SequenceCache((new seq24_filter(var6_Row)));
				var13_filter = new com.altova.functions.Core.SequenceCache((new seq28_filter(var6_Row)));
				var14_filter = new com.altova.functions.Core.SequenceCache((new seq32_filter(var6_Row)));
				var15_join = new com.altova.functions.Core.SequenceCache((new seq36_join(var6_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Facility", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq40_join(var12_filter, var13_filter, var6_Row, var10_filter, var14_filter, closure.var1_shared, var9_box, var15_join, var11_filter, ((com.altova.mapforce.IMFNode)(var8_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq18_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq18_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq18_map closure;
			IEnumerator var2_r;
			public Enumerator(seq18_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(3L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq19_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq19_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq19_map closure;
			IEnumerator var2_r;
			public Enumerator(seq19_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(3L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq20_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq20_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq20_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq20_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq21_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq21_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq21_map(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq21_map closure;
			IEnumerator var2_Name;
			public Enumerator(seq21_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_Name = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_n)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_Name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_Name.current()))), "L0 - Space Functions");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq22_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq22_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq22_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq22_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq23_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq23_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq23_map(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq23_map closure;
			IEnumerator var2_Name;
			public Enumerator(seq23_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_Name = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_n)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_Name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_Name.current()))), "L2 - Envelope");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq24_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq24_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq24_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq24_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq25_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq27_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq25_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq25_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq25_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq25_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq26_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq26_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq26_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq26_map closure;
			IEnumerator var2_r;
			public Enumerator(seq26_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(19L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq27_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq27_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq27_map closure;
			IEnumerator var2_r;
			public Enumerator(seq27_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(19L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq28_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq28_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq28_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq28_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq29_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq31_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq29_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq29_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq29_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq29_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq30_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq30_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq30_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq30_map closure;
			IEnumerator var2_r;
			public Enumerator(seq30_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(17L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq31_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq31_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq31_map closure;
			IEnumerator var2_r;
			public Enumerator(seq31_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(17L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq32_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq32_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq32_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq32_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq33_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq35_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq33_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq33_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq33_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq33_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq34_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq34_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq34_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq34_map closure;
			IEnumerator var2_r;
			public Enumerator(seq34_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(20L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq35_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq35_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq35_map closure;
			IEnumerator var2_r;
			public Enumerator(seq35_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(20L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq36_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq36_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq36_join closure;
			IEnumerator var2_filter;
			IEnumerator var3_filter;
			public Enumerator(seq36_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq38_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearOfConstruction", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq37_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq37_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq37_map closure;
			IEnumerator var2_r;
			public Enumerator(seq37_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(12L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq38_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq38_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq38_map closure;
			IEnumerator var2_r;
			public Enumerator(seq38_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(12L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq39_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq39_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq39_map closure;
			IEnumerator var2_n;
			public Enumerator(seq39_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(6L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq40_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
		com.altova.mapforce.IEnumerable var5_shared;
		com.altova.mapforce.IEnumerable var6_shared;
		com.altova.mapforce.IEnumerable var7_shared;
		com.altova.mapforce.IEnumerable var8_shared;
		com.altova.mapforce.IEnumerable var9_shared;
		com.altova.mapforce.IMFNode var10_cur_Cell;
	
		public seq40_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared, com.altova.mapforce.IEnumerable var4_shared, com.altova.mapforce.IEnumerable var5_shared, com.altova.mapforce.IEnumerable var6_shared, com.altova.mapforce.IEnumerable var7_shared, com.altova.mapforce.IEnumerable var8_shared, com.altova.mapforce.IEnumerable var9_shared, com.altova.mapforce.IMFNode var10_cur_Cell)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
			this.var6_shared = var6_shared;
			this.var7_shared = var7_shared;
			this.var8_shared = var8_shared;
			this.var9_shared = var9_shared;
			this.var10_cur_Cell = var10_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq40_join closure;
			IEnumerator var11_shared;
			IEnumerator var12_filter;
			IEnumerator var15_filter;
			IEnumerator var13_filter;
			IEnumerator var16_filter;
			IEnumerator var17_shared;
			IEnumerator var14_filter;
			IEnumerator var18_filter;
			IEnumerator var19_shared;
			IEnumerator var20_filter;
			IEnumerator var22_filter;
			IEnumerator var21_filter;
			IEnumerator var24_filter;
			IEnumerator var23_filter;
			IEnumerator var25_filter;
			IEnumerator var26_shared;
			IEnumerator var27_filter;
			public Enumerator(seq40_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 33:	if (moveNext_33()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
					case 35:	if (moveNext_35()) return true; break;
					case 36:	if (moveNext_36()) return true; break;
					case 38:	if (moveNext_38()) return true; break;
					case 39:	if (moveNext_39()) return true; break;
					case 40:	if (moveNext_40()) return true; break;
					case 41:	if (moveNext_41()) return true; break;
					case 43:	if (moveNext_43()) return true; break;
					case 44:	if (moveNext_44()) return true; break;
					case 45:	if (moveNext_45()) return true; break;
					case 46:	if (moveNext_46()) return true; break;
					case 47:	if (moveNext_47()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box("Building1"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PremisesName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var10_cur_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var11_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var11_shared.moveNext()) {state = 5; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 13;				
				if( var11_shared != null ) { var11_shared.close(); var11_shared = null; }
				var15_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var12_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 6; return false; }
				var13_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var13_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq41_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq42_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 8; return false; }
				var14_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var13_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 10;				
				if (!var14_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 10; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PremisesNotes", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.mapforce.vmf.vmf1_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var12_filter.current())))), "Spaces excluded from gross floor area: "), com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var14_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var15_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq43_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq44_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 13; return false; }
				var16_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var15_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 18;				
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyLevels", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq45_join(closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var16_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyClassification", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var16_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 19;				
				var17_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 21;				
				if (!var17_shared.moveNext()) {state = 20; return false; }
				var18_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var17_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 24;				
				if( var17_shared != null ) { var17_shared.close(); var17_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreas", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq49_join(closure.var1_shared, closure.var2_shared, closure.var3_shared, closure.var5_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_21() throws Exception {
				state = 21;				
				if (!var18_filter.moveNext()) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))))) {state = 21; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OwnershipStatus", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf3_inputtoresult.eval(com.altova.CoreTypes.decimalToInteger(com.altova.functions.Core.round(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var18_filter.current())))))))));
				pos++;
				return true;
			}
			private boolean moveNext_22() throws Exception {
				state = 19;				
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 25;				
				var19_shared = (closure.var8_shared).enumerator();
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 25;				
				if (!var19_shared.moveNext()) {state = 26; return false; }
				current = var19_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_26() throws Exception {
				state = 28;				
				if( var19_shared != null ) { var19_shared.close(); var19_shared = null; }
				var20_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_28() throws Exception {
				state = 30;				
				if (!var20_filter.moveNext()) {state = 29; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq56_map(((com.altova.mapforce.IMFNode)(var20_filter.current()))))))))) {state = 28; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq57_map(((com.altova.mapforce.IMFNode)(var20_filter.current()))))))))) {state = 28; return false; }
				var21_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var20_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_29() throws Exception {
				state = 33;				
				if( var20_filter != null ) { var20_filter.close(); var20_filter = null; }
				var22_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_30() throws Exception {
				state = 30;				
				if (!var21_filter.moveNext()) {state = 31; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var21_filter.current()))))))))) {state = 30; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearOfLastEnergyAudit", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var21_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_31() throws Exception {
				state = 28;				
				if( var21_filter != null ) { var21_filter.close(); var21_filter = null; }
				return false;
			}
			private boolean moveNext_33() throws Exception {
				state = 35;				
				if (!var22_filter.moveNext()) {state = 34; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq58_map(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))))) {state = 33; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq59_map(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))))) {state = 33; return false; }
				var23_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var22_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_34() throws Exception {
				state = 38;				
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				var24_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_35() throws Exception {
				state = 35;				
				if (!var23_filter.moveNext()) {state = 36; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var23_filter.current()))))))))) {state = 35; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RetrocommissioningDate", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.dateToString(com.altova.CoreTypes.parseDate(com.altova.functions.Core.concat(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var23_filter.current()))), "-07-01")))));
				pos++;
				return true;
			}
			private boolean moveNext_36() throws Exception {
				state = 33;				
				if( var23_filter != null ) { var23_filter.close(); var23_filter = null; }
				return false;
			}
			private boolean moveNext_38() throws Exception {
				state = 40;				
				if (!var24_filter.moveNext()) {state = 39; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq60_map(((com.altova.mapforce.IMFNode)(var24_filter.current()))))))))) {state = 38; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq61_map(((com.altova.mapforce.IMFNode)(var24_filter.current()))))))))) {state = 38; return false; }
				var25_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var24_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_39() throws Exception {
				state = 43;				
				if( var24_filter != null ) { var24_filter.close(); var24_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Subsections", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Subsection", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq62_join(closure.var3_shared, closure.var4_shared, closure.var6_shared, closure.var7_shared, closure.var8_shared, closure.var9_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_40() throws Exception {
				state = 40;				
				if (!var25_filter.moveNext()) {state = 41; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var25_filter.current()))))))))) {state = 40; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearOfLastMajorRemodel", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var25_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_41() throws Exception {
				state = 38;				
				if( var25_filter != null ) { var25_filter.close(); var25_filter = null; }
				return false;
			}
			private boolean moveNext_43() throws Exception {
				state = 44;				
				var26_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_44() throws Exception {
				state = 46;				
				if (!var26_shared.moveNext()) {state = 45; return false; }
				var27_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var26_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_45() throws Exception {
				state = 0;				
				if( var26_shared != null ) { var26_shared.close(); var26_shared = null; }
				return false;
			}
			private boolean moveNext_46() throws Exception {
				state = 46;				
				if (!var27_filter.moveNext()) {state = 47; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var27_filter.current()))))))))) {state = 46; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq129_join(closure.var1_shared, closure.var3_shared, closure.var5_shared, closure.var9_shared, ((com.altova.mapforce.IMFNode)(var27_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_47() throws Exception {
				state = 44;				
				if( var27_filter != null ) { var27_filter.close(); var27_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_shared != null ) { var11_shared.close(); var11_shared = null; }
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				if( var17_shared != null ) { var17_shared.close(); var17_shared = null; }
				if( var19_shared != null ) { var19_shared.close(); var19_shared = null; }
				if( var21_filter != null ) { var21_filter.close(); var21_filter = null; }
				if( var20_filter != null ) { var20_filter.close(); var20_filter = null; }
				if( var23_filter != null ) { var23_filter.close(); var23_filter = null; }
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				if( var25_filter != null ) { var25_filter.close(); var25_filter = null; }
				if( var24_filter != null ) { var24_filter.close(); var24_filter = null; }
				if( var27_filter != null ) { var27_filter.close(); var27_filter = null; }
				if( var26_shared != null ) { var26_shared.close(); var26_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq41_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq41_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq41_map closure;
			IEnumerator var2_r;
			public Enumerator(seq41_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(18L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq42_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq42_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq42_map closure;
			IEnumerator var2_r;
			public Enumerator(seq42_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(18L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq43_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq43_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq43_map closure;
			IEnumerator var2_r;
			public Enumerator(seq43_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(10L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq44_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq44_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq44_map closure;
			IEnumerator var2_r;
			public Enumerator(seq44_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(10L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq45_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq45_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq45_join closure;
			IEnumerator var2_filter;
			IEnumerator var3_filter;
			java.lang.String var4_cast;
			public Enumerator(seq45_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq46_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq47_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				var4_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyLevel", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq48_seq_(var4_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq46_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq46_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq46_map closure;
			IEnumerator var2_r;
			public Enumerator(seq46_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(36L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq47_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq47_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq47_map closure;
			IEnumerator var2_r;
			public Enumerator(seq47_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(36L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq48_seq_ implements IEnumerable
	{
		java.lang.String var1_shared;
	
		public seq48_seq_(java.lang.String var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq48_seq_ closure;
			public Enumerator(seq48_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupantQuantityType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf2_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupantQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(closure.var1_shared))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq49_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
	
		public seq49_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared, com.altova.mapforce.IEnumerable var4_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq49_join closure;
			IEnumerator var5_shared;
			IEnumerator var6_filter;
			IEnumerator var8_shared;
			java.lang.String var7_cast;
			IEnumerator var9_filter;
			IEnumerator var11_shared;
			java.lang.String var10_cast;
			IEnumerator var12_filter;
			IEnumerator var14_filter;
			java.lang.String var13_cast;
			IEnumerator var15_filter;
			java.lang.String var16_cast;
			public Enumerator(seq49_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var5_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var5_shared.moveNext()) {state = 3; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 7;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				var8_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var6_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 4; return false; }
				var7_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorArea", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq50_seq_(var7_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var8_shared.moveNext()) {state = 8; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var8_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 12;				
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				var11_shared = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var9_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 9; return false; }
				var10_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var9_filter.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorArea", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq51_seq_(var10_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var11_shared.moveNext()) {state = 13; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 17;				
				if( var11_shared != null ) { var11_shared.close(); var11_shared = null; }
				var14_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 14;				
				if (!var12_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 14; return false; }
				var13_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var12_filter.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorArea", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq52_seq_(var13_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 19;				
				if (!var14_filter.moveNext()) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq53_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq54_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 17; return false; }
				var15_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var14_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 0;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 19;				
				if (!var15_filter.moveNext()) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 19; return false; }
				var16_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var15_filter.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorArea", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq55_seq_(var16_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_20() throws Exception {
				state = 17;				
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_shared != null ) { var11_shared.close(); var11_shared = null; }
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq50_seq_ implements IEnumerable
	{
		java.lang.String var1_shared;
	
		public seq50_seq_(java.lang.String var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq50_seq_ closure;
			public Enumerator(seq50_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf4_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(closure.var1_shared))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq51_seq_ implements IEnumerable
	{
		java.lang.String var1_shared;
	
		public seq51_seq_(java.lang.String var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq51_seq_ closure;
			public Enumerator(seq51_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf5_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(closure.var1_shared))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq52_seq_ implements IEnumerable
	{
		java.lang.String var1_shared;
	
		public seq52_seq_(java.lang.String var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq52_seq_ closure;
			public Enumerator(seq52_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf6_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(closure.var1_shared))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq53_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq53_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq53_map closure;
			IEnumerator var2_r;
			public Enumerator(seq53_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(21L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq54_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq54_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq54_map closure;
			IEnumerator var2_r;
			public Enumerator(seq54_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(21L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq55_seq_ implements IEnumerable
	{
		java.lang.String var1_shared;
	
		public seq55_seq_(java.lang.String var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq55_seq_ closure;
			public Enumerator(seq55_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf7_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(closure.var1_shared))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq56_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq56_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq56_map closure;
			IEnumerator var2_r;
			public Enumerator(seq56_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(14L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq57_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq57_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq57_map closure;
			IEnumerator var2_r;
			public Enumerator(seq57_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(14L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq58_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq58_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq58_map closure;
			IEnumerator var2_r;
			public Enumerator(seq58_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(15L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq59_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq59_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq59_map closure;
			IEnumerator var2_r;
			public Enumerator(seq59_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(15L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq60_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq60_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq60_map closure;
			IEnumerator var2_r;
			public Enumerator(seq60_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(13L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq61_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq61_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq61_map closure;
			IEnumerator var2_r;
			public Enumerator(seq61_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(13L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq62_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
		com.altova.mapforce.IEnumerable var5_shared;
		com.altova.mapforce.IEnumerable var6_shared;
	
		public seq62_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared, com.altova.mapforce.IEnumerable var4_shared, com.altova.mapforce.IEnumerable var5_shared, com.altova.mapforce.IEnumerable var6_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
			this.var6_shared = var6_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq62_join closure;
			IEnumerator var7_shared;
			IEnumerator var8_shared;
			IEnumerator var9_filter;
			IEnumerator var11_shared;
			com.altova.mapforce.IEnumerable var12_Row;
			IEnumerator var10_filter;
			IEnumerator var13_filter;
			IEnumerator var15_filter;
			IEnumerator var14_filter;
			IEnumerator var17_filter;
			IEnumerator var16_filter;
			IEnumerator var18_filter;
			public Enumerator(seq62_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), closure.var4_shared);
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PremisesName", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var4_shared);
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var7_shared = (closure.var5_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var7_shared.moveNext()) {state = 5; return false; }
				current = var7_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if( var7_shared != null ) { var7_shared.close(); var7_shared = null; }
				var8_shared = (closure.var6_shared).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var8_shared.moveNext()) {state = 8; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var8_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 14;				
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				var11_shared = (closure.var6_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var9_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq64_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 9; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var10_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FootprintShape", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var10_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 16;				
				if (!var11_shared.moveNext()) {state = 15; return false; }
				var12_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var11_shared.current()))));
				var13_filter = (var12_Row).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 21;				
				if( var11_shared != null ) { var11_shared.close(); var11_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RoofID", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq68_join(closure.var6_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var13_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq18_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq19_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 16; return false; }
				var14_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var13_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 14;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 18;				
				if (!var14_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 18; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Sides", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Side", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq65_seq_(closure.var3_shared, var12_Row, ((com.altova.mapforce.IMFNode)(var14_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 22;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FoundationID", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq69_join(closure.var6_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_22() throws Exception {
				state = 23;				
				var15_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if (!var15_filter.moveNext()) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq72_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq73_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 23; return false; }
				var16_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var15_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 28;				
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				var17_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 25;				
				if (!var16_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 25; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorsAboveGrade", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var16_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				return false;
			}
			private boolean moveNext_28() throws Exception {
				state = 30;				
				if (!var17_filter.moveNext()) {state = 29; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq74_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 28; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq75_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 28; return false; }
				var18_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var17_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_29() throws Exception {
				state = 0;				
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ThermalZones", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ThermalZone", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Spaces", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq76_join(closure.var2_shared)))))));
				pos++;
				return true;
			}
			private boolean moveNext_30() throws Exception {
				state = 30;				
				if (!var18_filter.moveNext()) {state = 31; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))))) {state = 30; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorsBelowGrade", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var18_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_31() throws Exception {
				state = 28;				
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var7_shared != null ) { var7_shared.close(); var7_shared = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var11_shared != null ) { var11_shared.close(); var11_shared = null; }
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq63_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq63_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq63_map closure;
			IEnumerator var2_r;
			public Enumerator(seq63_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(11L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq64_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq64_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq64_map closure;
			IEnumerator var2_r;
			public Enumerator(seq64_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(11L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq65_seq_ implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IMFNode var3_cur_Cell;
	
		public seq65_seq_(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IMFNode var3_cur_Cell)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_cur_Cell = var3_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq65_seq_ closure;
			public Enumerator(seq65_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("WallID", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq66_seq_(closure.var3_cur_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("WindowID", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq67_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq66_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq66_seq_(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq66_seq_ closure;
			public Enumerator(seq66_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("AllWall1"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("WallArea", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(closure.var1_cur_Cell)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq67_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq67_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq67_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq67_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), closure.var1_shared);
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq15_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq16_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("WindowToWallRatio", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq68_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq68_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq68_join closure;
			IEnumerator var2_shared;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq68_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("Roof1"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var2_shared.moveNext()) {state = 4; return false; }
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RoofArea", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq69_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq69_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq69_join closure;
			IEnumerator var2_shared;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq69_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("Foundation1"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var2_shared.moveNext()) {state = 4; return false; }
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq71_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FoundationArea", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq70_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq70_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq70_map closure;
			IEnumerator var2_r;
			public Enumerator(seq70_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(4L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq71_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq71_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq71_map closure;
			IEnumerator var2_r;
			public Enumerator(seq71_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(4L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq72_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq72_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq72_map closure;
			IEnumerator var2_r;
			public Enumerator(seq72_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(23L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq73_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq73_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq73_map closure;
			IEnumerator var2_r;
			public Enumerator(seq73_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(23L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq74_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq74_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq74_map closure;
			IEnumerator var2_r;
			public Enumerator(seq74_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(24L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq75_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq75_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq75_map closure;
			IEnumerator var2_r;
			public Enumerator(seq75_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(24L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq76_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq76_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq76_join closure;
			IEnumerator var2_shared;
			com.altova.mapforce.IEnumerable var3_Row;
			IEnumerator var4_filter;
			IEnumerator var7_shared;
			com.altova.mapforce.IEnumerable var8_Row;
			IEnumerator var9_filter;
			IEnumerator var12_shared;
			IEnumerator var5_filter;
			com.altova.mapforce.IEnumerable var13_Row;
			IEnumerator var14_filter;
			IEnumerator var17_shared;
			com.altova.mapforce.IEnumerable var6_filter;
			IEnumerator var10_filter;
			com.altova.mapforce.IEnumerable var18_Row;
			IEnumerator var19_filter;
			IEnumerator var22_shared;
			com.altova.mapforce.IEnumerable var11_filter;
			IEnumerator var15_filter;
			com.altova.mapforce.IEnumerable var23_Row;
			IEnumerator var24_filter;
			IEnumerator var27_shared;
			com.altova.mapforce.IEnumerable var16_filter;
			IEnumerator var20_filter;
			com.altova.mapforce.IEnumerable var28_Row;
			IEnumerator var29_filter;
			com.altova.mapforce.IEnumerable var21_filter;
			IEnumerator var25_filter;
			com.altova.mapforce.IEnumerable var26_filter;
			IEnumerator var30_filter;
			com.altova.mapforce.IEnumerable var31_filter;
			public Enumerator(seq76_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 32:	if (moveNext_32()) return true; break;
					case 33:	if (moveNext_33()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
					case 35:	if (moveNext_35()) return true; break;
					case 37:	if (moveNext_37()) return true; break;
					case 38:	if (moveNext_38()) return true; break;
					case 39:	if (moveNext_39()) return true; break;
					case 40:	if (moveNext_40()) return true; break;
					case 41:	if (moveNext_41()) return true; break;
					case 42:	if (moveNext_42()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				var3_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_shared.current()))));
				var4_filter = (var3_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 9;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				var7_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				var6_filter = new com.altova.functions.Core.SequenceCache((new seq77_filter(var3_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Space", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq79_join(var3_Row, var6_filter, ((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var7_shared.moveNext()) {state = 10; return false; }
				var8_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var7_shared.current()))));
				var9_filter = (var8_Row).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 16;				
				if( var7_shared != null ) { var7_shared.close(); var7_shared = null; }
				var12_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var9_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 11; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var10_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 13; return false; }
				var11_filter = new com.altova.functions.Core.SequenceCache((new seq96_filter(var8_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Space", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq98_join(var8_Row, var11_filter, ((com.altova.mapforce.IMFNode)(var10_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var12_shared.moveNext()) {state = 17; return false; }
				var13_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var12_shared.current()))));
				var14_filter = (var13_Row).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 23;				
				if( var12_shared != null ) { var12_shared.close(); var12_shared = null; }
				var17_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var14_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 18; return false; }
				var15_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var14_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 20;				
				if (!var15_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 20; return false; }
				var16_filter = new com.altova.functions.Core.SequenceCache((new seq96_filter(var13_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Space", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq106_join(var13_Row, var16_filter, ((com.altova.mapforce.IMFNode)(var15_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if (!var17_shared.moveNext()) {state = 24; return false; }
				var18_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var17_shared.current()))));
				var19_filter = (var18_Row).enumerator();
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 30;				
				if( var17_shared != null ) { var17_shared.close(); var17_shared = null; }
				var22_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 27;				
				if (!var19_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))))) {state = 25; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))))) {state = 25; return false; }
				var20_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var19_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 27;				
				if (!var20_filter.moveNext()) {state = 28; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var20_filter.current()))))))))) {state = 27; return false; }
				var21_filter = new com.altova.functions.Core.SequenceCache((new seq96_filter(var18_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Space", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq113_join(var18_Row, var21_filter, ((com.altova.mapforce.IMFNode)(var20_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_28() throws Exception {
				state = 25;				
				if( var20_filter != null ) { var20_filter.close(); var20_filter = null; }
				return false;
			}
			private boolean moveNext_30() throws Exception {
				state = 32;				
				if (!var22_shared.moveNext()) {state = 31; return false; }
				var23_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var22_shared.current()))));
				var24_filter = (var23_Row).enumerator();
				return false;
			}
			private boolean moveNext_31() throws Exception {
				state = 37;				
				if( var22_shared != null ) { var22_shared.close(); var22_shared = null; }
				var27_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_32() throws Exception {
				state = 34;				
				if (!var24_filter.moveNext()) {state = 33; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var24_filter.current()))))))))) {state = 32; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var24_filter.current()))))))))) {state = 32; return false; }
				var25_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var24_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_33() throws Exception {
				state = 30;				
				if( var24_filter != null ) { var24_filter.close(); var24_filter = null; }
				return false;
			}
			private boolean moveNext_34() throws Exception {
				state = 34;				
				if (!var25_filter.moveNext()) {state = 35; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var25_filter.current()))))))))) {state = 34; return false; }
				var26_filter = new com.altova.functions.Core.SequenceCache((new seq96_filter(var23_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Space", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq118_join(var23_Row, var26_filter, ((com.altova.mapforce.IMFNode)(var25_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_35() throws Exception {
				state = 32;				
				if( var25_filter != null ) { var25_filter.close(); var25_filter = null; }
				return false;
			}
			private boolean moveNext_37() throws Exception {
				state = 39;				
				if (!var27_shared.moveNext()) {state = 38; return false; }
				var28_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var27_shared.current()))));
				var29_filter = (var28_Row).enumerator();
				return false;
			}
			private boolean moveNext_38() throws Exception {
				state = 0;				
				if( var27_shared != null ) { var27_shared.close(); var27_shared = null; }
				return false;
			}
			private boolean moveNext_39() throws Exception {
				state = 41;				
				if (!var29_filter.moveNext()) {state = 40; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var29_filter.current()))))))))) {state = 39; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var29_filter.current()))))))))) {state = 39; return false; }
				var30_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var29_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_40() throws Exception {
				state = 37;				
				if( var29_filter != null ) { var29_filter.close(); var29_filter = null; }
				return false;
			}
			private boolean moveNext_41() throws Exception {
				state = 41;				
				if (!var30_filter.moveNext()) {state = 42; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq123_map(((com.altova.mapforce.IMFNode)(var30_filter.current()))))))))) {state = 41; return false; }
				var31_filter = new com.altova.functions.Core.SequenceCache((new seq96_filter(var28_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Space", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq124_join(var28_Row, var31_filter, ((com.altova.mapforce.IMFNode)(var30_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_42() throws Exception {
				state = 39;				
				if( var30_filter != null ) { var30_filter.close(); var30_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var7_shared != null ) { var7_shared.close(); var7_shared = null; }
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var12_shared != null ) { var12_shared.close(); var12_shared = null; }
				if( var20_filter != null ) { var20_filter.close(); var20_filter = null; }
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				if( var17_shared != null ) { var17_shared.close(); var17_shared = null; }
				if( var25_filter != null ) { var25_filter.close(); var25_filter = null; }
				if( var24_filter != null ) { var24_filter.close(); var24_filter = null; }
				if( var22_shared != null ) { var22_shared.close(); var22_shared = null; }
				if( var30_filter != null ) { var30_filter.close(); var30_filter = null; }
				if( var29_filter != null ) { var29_filter.close(); var29_filter = null; }
				if( var27_shared != null ) { var27_shared.close(); var27_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq77_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq77_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq77_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq77_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq78_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq16_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq78_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq78_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq78_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq78_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq15_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq79_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IMFNode var3_cur_Cell;
	
		public seq79_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IMFNode var3_cur_Cell)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_cur_Cell = var3_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq79_join closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			public Enumerator(seq79_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PremisesName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var3_cur_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq11_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq12_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 3; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyLevels", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq80_join(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var5_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyClassification", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreas", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq82_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				var6_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var6_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq13_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq14_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var7_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq88_join(((com.altova.mapforce.IMFNode)(var7_filter.current())), closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq80_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq80_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq80_join closure;
			IEnumerator var2_filter;
			IEnumerator var3_filter;
			java.lang.String var4_cast;
			public Enumerator(seq80_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq43_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq44_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				var4_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyLevel", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq81_seq_(var4_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq81_seq_ implements IEnumerable
	{
		java.lang.String var1_shared;
	
		public seq81_seq_(java.lang.String var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq81_seq_ closure;
			public Enumerator(seq81_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupantQuantityType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf8_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupantQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(closure.var1_shared))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq82_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq82_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq82_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			IEnumerator var6_filter;
			java.lang.String var5_cast;
			IEnumerator var7_filter;
			IEnumerator var8_shared;
			IEnumerator var9_filter;
			double var10_cast;
			public Enumerator(seq82_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 7;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var6_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorArea", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq83_seq_(var5_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var6_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq84_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq85_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 7; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var7_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 9; return false; }
				var8_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var8_shared.moveNext()) {state = 12; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var8_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var9_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 13; return false; }
				var10_cast = com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var7_filter.current()))));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorArea", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq87_seq_(var10_cast, ((com.altova.mapforce.IMFNode)(var9_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq83_seq_ implements IEnumerable
	{
		java.lang.String var1_shared;
	
		public seq83_seq_(java.lang.String var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq83_seq_ closure;
			public Enumerator(seq83_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf9_inputtoresult.eval(com.altova.CoreTypes.parseDouble(closure.var1_shared))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(closure.var1_shared))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq84_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq84_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq84_map closure;
			IEnumerator var2_r;
			public Enumerator(seq84_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(9L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq85_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq85_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq85_map closure;
			IEnumerator var2_r;
			public Enumerator(seq85_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(9L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq86_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq86_map(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq86_map closure;
			IEnumerator var2_t;
			public Enumerator(seq86_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_t = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("t", ""), closure.var1_cur_n)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_t.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_t.current()))), "n");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_t != null ) { var2_t.close(); var2_t = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_t != null ) { var2_t.close(); var2_t = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq87_seq_ implements IEnumerable
	{
		double var1_shared;
		com.altova.mapforce.IMFNode var2_cur_Cell;
	
		public seq87_seq_(double var1_shared, com.altova.mapforce.IMFNode var2_cur_Cell)
		{
			this.var1_shared = var1_shared;
			this.var2_cur_Cell = var2_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq87_seq_ closure;
			public Enumerator(seq87_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf10_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(com.altova.CoreTypes.doubleToDecimal(closure.var1_shared), com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(closure.var2_cur_Cell))))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq88_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq88_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq88_join closure;
			IEnumerator var3_filter;
			IEnumerator var5_filter;
			IEnumerator var4_filter;
			IEnumerator var7_filter;
			IEnumerator var6_filter;
			IEnumerator var9_filter;
			IEnumerator var8_filter;
			IEnumerator var11_filter;
			IEnumerator var10_filter;
			IEnumerator var12_filter;
			public Enumerator(seq88_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq89_seq_(closure.var1_current)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq64_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 8;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq90_seq_(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq38_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 13;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var7_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 10;				
				if (!var6_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq91_seq_(((com.altova.mapforce.IMFNode)(var6_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var7_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq60_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq61_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 18;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				var9_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var8_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq92_seq_(((com.altova.mapforce.IMFNode)(var8_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var9_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq56_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq57_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 18; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 23;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				var11_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 20;				
				if (!var10_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 20; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq93_seq_(((com.altova.mapforce.IMFNode)(var10_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if (!var11_filter.moveNext()) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq58_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq59_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 23; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 0;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 25;				
				if (!var12_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 25; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq94_seq_(((com.altova.mapforce.IMFNode)(var12_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq89_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq89_seq_(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq89_seq_ closure;
			public Enumerator(seq89_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Original intented use"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_current)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq90_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq90_seq_(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq90_seq_ closure;
			public Enumerator(seq90_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Number of PC\'s and/or Laptops"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_cur_n)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq91_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq91_seq_(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq91_seq_ closure;
			public Enumerator(seq91_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Use (hours/week)"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_cur_n)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq92_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq92_seq_(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq92_seq_ closure;
			public Enumerator(seq92_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Use (weeks/year)"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_cur_n)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq93_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq93_seq_(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq93_seq_ closure;
			public Enumerator(seq93_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Principle HVAC Type "));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_cur_n)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq94_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq94_seq_(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq94_seq_ closure;
			public Enumerator(seq94_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Principle Lighting Type "));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_cur_n)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq95_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq95_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq95_map closure;
			IEnumerator var2_n;
			public Enumerator(seq95_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(3L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq96_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq96_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq96_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq96_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq97_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq16_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq97_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq97_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq97_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq97_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq15_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq98_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IMFNode var3_cur_Cell;
	
		public seq98_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IMFNode var3_cur_Cell)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_cur_Cell = var3_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq98_join closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			public Enumerator(seq98_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PremisesName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var3_cur_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq11_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq12_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 3; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyLevels", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq99_join(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var5_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyClassification", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreas", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq101_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				var6_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var6_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq13_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq14_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var7_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq104_join(((com.altova.mapforce.IMFNode)(var7_filter.current())), closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq99_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq99_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq99_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Cell;
			IEnumerator var4_filter;
			public Enumerator(seq99_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq43_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq44_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Cell).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyLevel", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq100_join(((com.altova.mapforce.IMFNode)(var4_filter.current())), var3_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq100_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq100_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq100_join closure;
			IEnumerator var3_filter;
			public Enumerator(seq100_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupantQuantityType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf8_inputtoresult.eval(com.altova.CoreTypes.nodeToString(closure.var1_current))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var3_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupantQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq101_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq101_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq101_join closure;
			IEnumerator var3_shared;
			com.altova.mapforce.IEnumerable var4_Cell;
			IEnumerator var5_filter;
			IEnumerator var6_shared;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			com.altova.mapforce.IEnumerable var9_Cell;
			IEnumerator var10_filter;
			public Enumerator(seq101_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current()))));
				var5_filter = (var4_Cell).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 7;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var6_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var5_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorArea", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq102_join(((com.altova.mapforce.IMFNode)(var5_filter.current())), var4_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var6_shared.moveNext()) {state = 8; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 0;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var7_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 9; return false; }
				var8_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var8_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq84_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq85_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 11; return false; }
				var9_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var8_filter.current()))));
				var10_filter = (var9_Cell).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var10_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 13; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorArea", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq103_join(var9_Cell, ((com.altova.mapforce.IMFNode)(var7_filter.current())), ((com.altova.mapforce.IMFNode)(var10_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq102_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq102_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq102_join closure;
			IEnumerator var3_filter;
			public Enumerator(seq102_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf9_inputtoresult.eval(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(closure.var1_current)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq103_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IMFNode var2_cur_Cell;
		com.altova.mapforce.IMFNode var3_cur_Cell;
	
		public seq103_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IMFNode var2_cur_Cell, com.altova.mapforce.IMFNode var3_cur_Cell)
		{
			this.var1_shared = var1_shared;
			this.var2_cur_Cell = var2_cur_Cell;
			this.var3_cur_Cell = var3_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq103_join closure;
			IEnumerator var4_filter;
			public Enumerator(seq103_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var4_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf10_inputtoresult.eval(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(closure.var2_cur_Cell)), com.altova.CoreTypes.doubleToDecimal(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(closure.var3_cur_Cell)))))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq104_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq104_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq104_join closure;
			IEnumerator var3_filter;
			IEnumerator var5_filter;
			IEnumerator var4_filter;
			IEnumerator var7_filter;
			IEnumerator var6_filter;
			IEnumerator var9_filter;
			IEnumerator var8_filter;
			IEnumerator var11_filter;
			IEnumerator var10_filter;
			IEnumerator var12_filter;
			public Enumerator(seq104_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq89_seq_(closure.var1_current)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq64_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 8;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq90_seq_(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq38_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 13;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var7_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 10;				
				if (!var6_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq91_seq_(((com.altova.mapforce.IMFNode)(var6_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var7_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq60_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq61_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 18;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				var9_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var8_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq92_seq_(((com.altova.mapforce.IMFNode)(var8_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var9_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq56_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq57_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 18; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 23;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				var11_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 20;				
				if (!var10_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 20; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq93_seq_(((com.altova.mapforce.IMFNode)(var10_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if (!var11_filter.moveNext()) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq58_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq59_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 23; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 0;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 25;				
				if (!var12_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 25; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq94_seq_(((com.altova.mapforce.IMFNode)(var12_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq105_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq105_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq105_map closure;
			IEnumerator var2_n;
			public Enumerator(seq105_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(4L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq106_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IMFNode var3_cur_Cell;
	
		public seq106_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IMFNode var3_cur_Cell)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_cur_Cell = var3_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq106_join closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			public Enumerator(seq106_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PremisesName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var3_cur_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq11_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq12_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 3; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyLevels", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq107_join(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var5_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyClassification", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreas", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq109_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				var6_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var6_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq13_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq14_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var7_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq111_join(((com.altova.mapforce.IMFNode)(var7_filter.current())), closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq107_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq107_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq107_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Cell;
			IEnumerator var4_filter;
			public Enumerator(seq107_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq43_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq44_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Cell).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyLevel", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq108_join(((com.altova.mapforce.IMFNode)(var4_filter.current())), var3_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq108_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq108_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq108_join closure;
			IEnumerator var3_filter;
			public Enumerator(seq108_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupantQuantityType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf8_inputtoresult.eval(com.altova.CoreTypes.nodeToString(closure.var1_current))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var3_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupantQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq109_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq109_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq109_join closure;
			IEnumerator var3_shared;
			com.altova.mapforce.IEnumerable var4_Cell;
			IEnumerator var5_filter;
			IEnumerator var6_shared;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			com.altova.mapforce.IEnumerable var9_Cell;
			IEnumerator var10_filter;
			public Enumerator(seq109_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current()))));
				var5_filter = (var4_Cell).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 7;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var6_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var5_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorArea", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq102_join(((com.altova.mapforce.IMFNode)(var5_filter.current())), var4_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var6_shared.moveNext()) {state = 8; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 0;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var7_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 9; return false; }
				var8_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var8_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq84_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq85_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 11; return false; }
				var9_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var8_filter.current()))));
				var10_filter = (var9_Cell).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var10_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 13; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorArea", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq110_join(var9_Cell, ((com.altova.mapforce.IMFNode)(var7_filter.current())), ((com.altova.mapforce.IMFNode)(var10_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq110_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IMFNode var2_cur_Cell;
		com.altova.mapforce.IMFNode var3_cur_Cell;
	
		public seq110_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IMFNode var2_cur_Cell, com.altova.mapforce.IMFNode var3_cur_Cell)
		{
			this.var1_shared = var1_shared;
			this.var2_cur_Cell = var2_cur_Cell;
			this.var3_cur_Cell = var3_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq110_join closure;
			IEnumerator var4_filter;
			public Enumerator(seq110_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var4_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf10_inputtoresult.eval(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreaValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.functions.Core.multiply(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(closure.var2_cur_Cell)), com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(closure.var3_cur_Cell))))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq111_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq111_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq111_join closure;
			IEnumerator var3_filter;
			IEnumerator var5_filter;
			IEnumerator var4_filter;
			IEnumerator var7_filter;
			IEnumerator var6_filter;
			IEnumerator var9_filter;
			IEnumerator var8_filter;
			IEnumerator var11_filter;
			IEnumerator var10_filter;
			IEnumerator var12_filter;
			public Enumerator(seq111_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq89_seq_(closure.var1_current)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq64_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 8;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq90_seq_(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq38_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 13;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var7_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 10;				
				if (!var6_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq91_seq_(((com.altova.mapforce.IMFNode)(var6_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var7_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq60_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq61_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 18;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				var9_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var8_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq92_seq_(((com.altova.mapforce.IMFNode)(var8_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var9_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq56_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq57_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 18; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 23;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				var11_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 20;				
				if (!var10_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 20; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq93_seq_(((com.altova.mapforce.IMFNode)(var10_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if (!var11_filter.moveNext()) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq58_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq59_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 23; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 0;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 25;				
				if (!var12_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 25; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq94_seq_(((com.altova.mapforce.IMFNode)(var12_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq112_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq112_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq112_map closure;
			IEnumerator var2_n;
			public Enumerator(seq112_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(5L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq113_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IMFNode var3_cur_Cell;
	
		public seq113_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IMFNode var3_cur_Cell)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_cur_Cell = var3_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq113_join closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			public Enumerator(seq113_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PremisesName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var3_cur_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq11_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq12_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 3; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyLevels", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq114_join(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var5_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyClassification", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreas", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq116_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				var6_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var6_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq13_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq14_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var7_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq117_join(((com.altova.mapforce.IMFNode)(var7_filter.current())), closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq114_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq114_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq114_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Cell;
			IEnumerator var4_filter;
			public Enumerator(seq114_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq43_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq44_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Cell).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyLevel", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq115_join(((com.altova.mapforce.IMFNode)(var4_filter.current())), var3_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq115_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq115_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq115_join closure;
			IEnumerator var3_filter;
			public Enumerator(seq115_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupantQuantityType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf8_inputtoresult.eval(com.altova.CoreTypes.nodeToString(closure.var1_current))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var3_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupantQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq116_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq116_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq116_join closure;
			IEnumerator var3_shared;
			com.altova.mapforce.IEnumerable var4_Cell;
			IEnumerator var5_filter;
			IEnumerator var6_shared;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			com.altova.mapforce.IEnumerable var9_Cell;
			IEnumerator var10_filter;
			public Enumerator(seq116_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current()))));
				var5_filter = (var4_Cell).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 7;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var6_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var5_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorArea", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq102_join(((com.altova.mapforce.IMFNode)(var5_filter.current())), var4_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var6_shared.moveNext()) {state = 8; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 0;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var7_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 9; return false; }
				var8_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var8_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq84_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq85_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 11; return false; }
				var9_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var8_filter.current()))));
				var10_filter = (var9_Cell).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var10_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 13; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorArea", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq110_join(var9_Cell, ((com.altova.mapforce.IMFNode)(var7_filter.current())), ((com.altova.mapforce.IMFNode)(var10_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq117_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq117_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq117_join closure;
			IEnumerator var3_filter;
			IEnumerator var5_filter;
			IEnumerator var4_filter;
			IEnumerator var7_filter;
			IEnumerator var6_filter;
			IEnumerator var9_filter;
			IEnumerator var8_filter;
			IEnumerator var11_filter;
			IEnumerator var10_filter;
			IEnumerator var12_filter;
			public Enumerator(seq117_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq89_seq_(closure.var1_current)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq64_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 8;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq90_seq_(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq38_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 13;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var7_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 10;				
				if (!var6_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq91_seq_(((com.altova.mapforce.IMFNode)(var6_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var7_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq60_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq61_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 18;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				var9_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var8_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq92_seq_(((com.altova.mapforce.IMFNode)(var8_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var9_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq56_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq57_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 18; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 23;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				var11_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 20;				
				if (!var10_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 20; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq93_seq_(((com.altova.mapforce.IMFNode)(var10_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if (!var11_filter.moveNext()) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq58_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq59_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 23; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 0;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 25;				
				if (!var12_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 25; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq94_seq_(((com.altova.mapforce.IMFNode)(var12_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq118_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IMFNode var3_cur_Cell;
	
		public seq118_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IMFNode var3_cur_Cell)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_cur_Cell = var3_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq118_join closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			public Enumerator(seq118_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PremisesName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var3_cur_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq11_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq12_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 3; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyLevels", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq119_join(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var5_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyClassification", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreas", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq121_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				var6_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var6_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq13_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq14_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var7_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq122_join(((com.altova.mapforce.IMFNode)(var7_filter.current())), closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq119_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq119_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq119_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Cell;
			IEnumerator var4_filter;
			public Enumerator(seq119_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq43_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq44_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Cell).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyLevel", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq120_join(((com.altova.mapforce.IMFNode)(var4_filter.current())), var3_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq120_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq120_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq120_join closure;
			IEnumerator var3_filter;
			public Enumerator(seq120_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupantQuantityType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf8_inputtoresult.eval(com.altova.CoreTypes.nodeToString(closure.var1_current))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var3_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupantQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq121_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq121_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq121_join closure;
			IEnumerator var3_shared;
			com.altova.mapforce.IEnumerable var4_Cell;
			IEnumerator var5_filter;
			IEnumerator var6_shared;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			com.altova.mapforce.IEnumerable var9_Cell;
			IEnumerator var10_filter;
			public Enumerator(seq121_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current()))));
				var5_filter = (var4_Cell).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 7;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var6_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var5_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorArea", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq102_join(((com.altova.mapforce.IMFNode)(var5_filter.current())), var4_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var6_shared.moveNext()) {state = 8; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 0;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var7_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 9; return false; }
				var8_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var8_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq84_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq85_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 11; return false; }
				var9_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var8_filter.current()))));
				var10_filter = (var9_Cell).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var10_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 13; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorArea", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq110_join(var9_Cell, ((com.altova.mapforce.IMFNode)(var7_filter.current())), ((com.altova.mapforce.IMFNode)(var10_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq122_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq122_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq122_join closure;
			IEnumerator var3_filter;
			IEnumerator var5_filter;
			IEnumerator var4_filter;
			IEnumerator var7_filter;
			IEnumerator var6_filter;
			IEnumerator var9_filter;
			IEnumerator var8_filter;
			IEnumerator var11_filter;
			IEnumerator var10_filter;
			IEnumerator var12_filter;
			public Enumerator(seq122_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq89_seq_(closure.var1_current)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq64_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 8;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq90_seq_(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq38_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 13;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var7_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 10;				
				if (!var6_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq91_seq_(((com.altova.mapforce.IMFNode)(var6_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var7_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq60_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq61_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 18;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				var9_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var8_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq92_seq_(((com.altova.mapforce.IMFNode)(var8_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var9_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq56_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq57_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 18; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 23;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				var11_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 20;				
				if (!var10_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 20; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq93_seq_(((com.altova.mapforce.IMFNode)(var10_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if (!var11_filter.moveNext()) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq58_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq59_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 23; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 0;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 25;				
				if (!var12_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 25; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq94_seq_(((com.altova.mapforce.IMFNode)(var12_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq123_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq123_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq123_map closure;
			IEnumerator var2_n;
			public Enumerator(seq123_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(7L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq124_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IMFNode var3_cur_Cell;
	
		public seq124_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IMFNode var3_cur_Cell)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_cur_Cell = var3_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq124_join closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			public Enumerator(seq124_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PremisesName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var3_cur_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq11_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq12_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 3; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyLevels", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq125_join(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var5_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq123_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyClassification", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorAreas", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq127_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				var6_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var6_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq13_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq14_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var7_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq123_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq128_join(((com.altova.mapforce.IMFNode)(var7_filter.current())), closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq125_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq125_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq125_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Cell;
			IEnumerator var4_filter;
			public Enumerator(seq125_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq43_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq44_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Cell).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupancyLevel", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq126_join(((com.altova.mapforce.IMFNode)(var4_filter.current())), var3_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq126_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq126_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq126_join closure;
			IEnumerator var3_filter;
			public Enumerator(seq126_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupantQuantityType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf8_inputtoresult.eval(com.altova.CoreTypes.nodeToString(closure.var1_current))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var3_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq123_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OccupantQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq127_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq127_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq127_join closure;
			IEnumerator var3_shared;
			com.altova.mapforce.IEnumerable var4_Cell;
			IEnumerator var5_filter;
			IEnumerator var6_shared;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			com.altova.mapforce.IEnumerable var9_Cell;
			IEnumerator var10_filter;
			public Enumerator(seq127_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current()))));
				var5_filter = (var4_Cell).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 7;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var6_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var5_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq123_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorArea", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq102_join(((com.altova.mapforce.IMFNode)(var5_filter.current())), var4_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var6_shared.moveNext()) {state = 8; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 0;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var7_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq123_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 9; return false; }
				var8_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var8_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq84_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq85_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 11; return false; }
				var9_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var8_filter.current()))));
				var10_filter = (var9_Cell).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var10_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq123_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 13; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorArea", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq110_join(var9_Cell, ((com.altova.mapforce.IMFNode)(var7_filter.current())), ((com.altova.mapforce.IMFNode)(var10_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq128_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq128_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq128_join closure;
			IEnumerator var3_filter;
			IEnumerator var5_filter;
			IEnumerator var4_filter;
			IEnumerator var7_filter;
			IEnumerator var6_filter;
			IEnumerator var9_filter;
			IEnumerator var8_filter;
			IEnumerator var11_filter;
			IEnumerator var10_filter;
			IEnumerator var12_filter;
			public Enumerator(seq128_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq89_seq_(closure.var1_current)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq64_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 8;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq123_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq90_seq_(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq38_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 13;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var7_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 10;				
				if (!var6_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq123_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq91_seq_(((com.altova.mapforce.IMFNode)(var6_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var7_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq60_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq61_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 18;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				var9_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var8_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq123_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq92_seq_(((com.altova.mapforce.IMFNode)(var8_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var9_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq56_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq57_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 18; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 23;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				var11_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 20;				
				if (!var10_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq123_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 20; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq93_seq_(((com.altova.mapforce.IMFNode)(var10_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if (!var11_filter.moveNext()) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq58_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq59_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 23; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 0;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 25;				
				if (!var12_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq123_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 25; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq94_seq_(((com.altova.mapforce.IMFNode)(var12_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq129_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
		com.altova.mapforce.IMFNode var5_cur_Cell;
	
		public seq129_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared, com.altova.mapforce.IEnumerable var4_shared, com.altova.mapforce.IMFNode var5_cur_Cell)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_cur_Cell = var5_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq129_join closure;
			IEnumerator var6_shared;
			IEnumerator var7_filter;
			IEnumerator var9_shared;
			IEnumerator var8_filter;
			IEnumerator var10_filter;
			IEnumerator var11_filter;
			IEnumerator var13_filter;
			IEnumerator var12_filter;
			IEnumerator var14_filter;
			public Enumerator(seq129_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var6_shared = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var6_shared.moveNext()) {state = 3; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 9;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq131_join(closure.var1_shared, closure.var5_cur_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var7_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq84_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq85_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 4; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var8_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq130_seq_(((com.altova.mapforce.IMFNode)(var8_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				var9_shared = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var9_shared.moveNext()) {state = 11; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 15;				
				if( var9_shared != null ) { var9_shared.close(); var9_shared = null; }
				var11_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var10_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq132_join(((com.altova.mapforce.IMFNode)(var10_filter.current())), closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 17;				
				if (!var11_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq133_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq134_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 15; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 20;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				var13_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 17;				
				if (!var12_filter.moveNext()) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 17; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq135_seq_(((com.altova.mapforce.IMFNode)(var12_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_18() throws Exception {
				state = 15;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 22;				
				if (!var13_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq137_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 20; return false; }
				var14_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var13_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 0;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 22;				
				if (!var14_filter.moveNext()) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 22; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq138_seq_(((com.altova.mapforce.IMFNode)(var14_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_23() throws Exception {
				state = 20;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_shared != null ) { var9_shared.close(); var9_shared = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq130_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq130_seq_(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq130_seq_ closure;
			public Enumerator(seq130_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Above grade wall common area with other conditioned buildings (ft2)"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_cur_n)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq131_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IMFNode var2_cur_Cell;
	
		public seq131_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IMFNode var2_cur_Cell)
		{
			this.var1_shared = var1_shared;
			this.var2_cur_Cell = var2_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq131_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			public Enumerator(seq131_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var2_cur_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq132_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq132_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq132_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			public Enumerator(seq132_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_current)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq133_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq133_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq133_map closure;
			IEnumerator var2_r;
			public Enumerator(seq133_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(34L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq134_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq134_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq134_map closure;
			IEnumerator var2_r;
			public Enumerator(seq134_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(34L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq135_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq135_seq_(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq135_seq_ closure;
			public Enumerator(seq135_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Typical occupancy (hrs/wk)"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_cur_n)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq136_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq136_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq136_map closure;
			IEnumerator var2_r;
			public Enumerator(seq136_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(35L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq137_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq137_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq137_map closure;
			IEnumerator var2_r;
			public Enumerator(seq137_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(35L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq138_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq138_seq_(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq138_seq_ closure;
			public Enumerator(seq138_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Typical occupancy (wks/yr)"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_cur_n)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq139_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq139_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq139_join closure;
			IEnumerator var3_shared;
			com.altova.mapforce.IEnumerable var4_Worksheet;
			IEnumerator var5_filter;
			IEnumerator var9_shared;
			IEnumerator var10_filter;
			IEnumerator var6_filter;
			IEnumerator var14_shared;
			com.altova.mapforce.IEnumerable var11_filter;
			com.altova.mapforce.IEnumerable var15_Worksheet;
			IEnumerator var12_filter;
			IEnumerator var16_filter;
			IEnumerator var20_shared;
			IEnumerator var7_filter;
			com.altova.mapforce.IEnumerable var21_Worksheet;
			IEnumerator var13_filter;
			IEnumerator var17_filter;
			IEnumerator var22_filter;
			IEnumerator var25_shared;
			com.altova.mapforce.IEnumerable var8_filter;
			com.altova.mapforce.IEnumerable var26_Worksheet;
			IEnumerator var23_filter;
			IEnumerator var30_shared;
			IEnumerator var27_filter;
			IEnumerator var18_filter;
			com.altova.mapforce.IEnumerable var31_Worksheet;
			IEnumerator var28_filter;
			IEnumerator var35_shared;
			IEnumerator var32_filter;
			com.altova.mapforce.IEnumerable var19_filter;
			IEnumerator var24_filter;
			com.altova.mapforce.IEnumerable var36_Worksheet;
			IEnumerator var33_filter;
			IEnumerator var37_filter;
			IEnumerator var40_shared;
			IEnumerator var29_filter;
			com.altova.mapforce.IEnumerable var41_Worksheet;
			IEnumerator var38_filter;
			IEnumerator var42_filter;
			IEnumerator var45_shared;
			IEnumerator var34_filter;
			com.altova.mapforce.IEnumerable var46_Worksheet;
			IEnumerator var43_filter;
			IEnumerator var47_filter;
			IEnumerator var56_shared;
			IEnumerator var39_filter;
			com.altova.mapforce.IEnumerable var57_Worksheet;
			com.altova.mapforce.IEnumerable var48_Row;
			IEnumerator var58_filter;
			IEnumerator var61_shared;
			IEnumerator var44_filter;
			IEnumerator var49_filter;
			com.altova.mapforce.IEnumerable var62_Worksheet;
			IEnumerator var59_filter;
			IEnumerator var66_shared;
			IEnumerator var63_filter;
			IEnumerator var50_filter;
			com.altova.mapforce.IEnumerable var67_Worksheet;
			IEnumerator var64_filter;
			IEnumerator var68_filter;
			IEnumerator var72_shared;
			IEnumerator var60_filter;
			com.altova.mapforce.IEnumerable var51_filter;
			com.altova.mapforce.IEnumerable var73_Worksheet;
			IEnumerator var52_shared;
			IEnumerator var69_filter;
			IEnumerator var74_filter;
			IEnumerator var65_filter;
			IEnumerator var79_shared;
			IEnumerator var53_filter;
			IEnumerator var75_filter;
			com.altova.mapforce.IEnumerable var80_Worksheet;
			IEnumerator var70_filter;
			IEnumerator var81_filter;
			IEnumerator var85_shared;
			IEnumerator var54_shared;
			com.altova.mapforce.IEnumerable var86_Worksheet;
			IEnumerator var55_filter;
			com.altova.mapforce.IEnumerable var71_filter;
			IEnumerator var76_filter;
			IEnumerator var94_shared;
			IEnumerator var82_filter;
			IEnumerator var87_filter;
			com.altova.mapforce.IEnumerable var95_Worksheet;
			com.altova.mapforce.IEnumerable var77_filter;
			IEnumerator var99_shared;
			IEnumerator var96_filter;
			IEnumerator var88_filter;
			com.altova.mapforce.IEnumerable var78_filter;
			IEnumerator var83_filter;
			com.altova.mapforce.IEnumerable var100_Worksheet;
			IEnumerator var97_filter;
			IEnumerator var101_filter;
			IEnumerator var104_shared;
			IEnumerator var89_filter;
			com.altova.mapforce.IEnumerable var84_filter;
			com.altova.mapforce.IEnumerable var105_Worksheet;
			IEnumerator var102_filter;
			IEnumerator var106_filter;
			IEnumerator var109_shared;
			IEnumerator var90_filter;
			IEnumerator var98_filter;
			IEnumerator var110_filter;
			IEnumerator var107_filter;
			IEnumerator var114_shared;
			IEnumerator var91_filter;
			IEnumerator var103_filter;
			IEnumerator var111_filter;
			com.altova.mapforce.IEnumerable var115_Worksheet;
			IEnumerator var116_filter;
			IEnumerator var119_shared;
			IEnumerator var108_filter;
			IEnumerator var92_filter;
			com.altova.mapforce.IEnumerable var120_Worksheet;
			IEnumerator var112_filter;
			IEnumerator var117_filter;
			IEnumerator var121_filter;
			com.altova.mapforce.IEnumerable var93_vmf22_inputtoresult;
			java.lang.String var113_cast;
			IEnumerator var122_filter;
			IEnumerator var118_filter;
			IEnumerator var123_filter;
			public Enumerator(seq139_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 32:	if (moveNext_32()) return true; break;
					case 33:	if (moveNext_33()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
					case 35:	if (moveNext_35()) return true; break;
					case 36:	if (moveNext_36()) return true; break;
					case 38:	if (moveNext_38()) return true; break;
					case 39:	if (moveNext_39()) return true; break;
					case 40:	if (moveNext_40()) return true; break;
					case 41:	if (moveNext_41()) return true; break;
					case 42:	if (moveNext_42()) return true; break;
					case 43:	if (moveNext_43()) return true; break;
					case 44:	if (moveNext_44()) return true; break;
					case 45:	if (moveNext_45()) return true; break;
					case 47:	if (moveNext_47()) return true; break;
					case 48:	if (moveNext_48()) return true; break;
					case 49:	if (moveNext_49()) return true; break;
					case 50:	if (moveNext_50()) return true; break;
					case 51:	if (moveNext_51()) return true; break;
					case 52:	if (moveNext_52()) return true; break;
					case 53:	if (moveNext_53()) return true; break;
					case 54:	if (moveNext_54()) return true; break;
					case 56:	if (moveNext_56()) return true; break;
					case 57:	if (moveNext_57()) return true; break;
					case 58:	if (moveNext_58()) return true; break;
					case 59:	if (moveNext_59()) return true; break;
					case 60:	if (moveNext_60()) return true; break;
					case 61:	if (moveNext_61()) return true; break;
					case 62:	if (moveNext_62()) return true; break;
					case 63:	if (moveNext_63()) return true; break;
					case 65:	if (moveNext_65()) return true; break;
					case 66:	if (moveNext_66()) return true; break;
					case 67:	if (moveNext_67()) return true; break;
					case 68:	if (moveNext_68()) return true; break;
					case 69:	if (moveNext_69()) return true; break;
					case 70:	if (moveNext_70()) return true; break;
					case 71:	if (moveNext_71()) return true; break;
					case 72:	if (moveNext_72()) return true; break;
					case 74:	if (moveNext_74()) return true; break;
					case 75:	if (moveNext_75()) return true; break;
					case 76:	if (moveNext_76()) return true; break;
					case 77:	if (moveNext_77()) return true; break;
					case 78:	if (moveNext_78()) return true; break;
					case 79:	if (moveNext_79()) return true; break;
					case 80:	if (moveNext_80()) return true; break;
					case 81:	if (moveNext_81()) return true; break;
					case 82:	if (moveNext_82()) return true; break;
					case 83:	if (moveNext_83()) return true; break;
					case 84:	if (moveNext_84()) return true; break;
					case 85:	if (moveNext_85()) return true; break;
					case 86:	if (moveNext_86()) return true; break;
					case 87:	if (moveNext_87()) return true; break;
					case 88:	if (moveNext_88()) return true; break;
					case 89:	if (moveNext_89()) return true; break;
					case 91:	if (moveNext_91()) return true; break;
					case 92:	if (moveNext_92()) return true; break;
					case 93:	if (moveNext_93()) return true; break;
					case 94:	if (moveNext_94()) return true; break;
					case 95:	if (moveNext_95()) return true; break;
					case 96:	if (moveNext_96()) return true; break;
					case 97:	if (moveNext_97()) return true; break;
					case 98:	if (moveNext_98()) return true; break;
					case 100:	if (moveNext_100()) return true; break;
					case 101:	if (moveNext_101()) return true; break;
					case 102:	if (moveNext_102()) return true; break;
					case 103:	if (moveNext_103()) return true; break;
					case 104:	if (moveNext_104()) return true; break;
					case 105:	if (moveNext_105()) return true; break;
					case 106:	if (moveNext_106()) return true; break;
					case 107:	if (moveNext_107()) return true; break;
					case 109:	if (moveNext_109()) return true; break;
					case 110:	if (moveNext_110()) return true; break;
					case 111:	if (moveNext_111()) return true; break;
					case 112:	if (moveNext_112()) return true; break;
					case 113:	if (moveNext_113()) return true; break;
					case 114:	if (moveNext_114()) return true; break;
					case 115:	if (moveNext_115()) return true; break;
					case 116:	if (moveNext_116()) return true; break;
					case 118:	if (moveNext_118()) return true; break;
					case 119:	if (moveNext_119()) return true; break;
					case 120:	if (moveNext_120()) return true; break;
					case 121:	if (moveNext_121()) return true; break;
					case 122:	if (moveNext_122()) return true; break;
					case 123:	if (moveNext_123()) return true; break;
					case 124:	if (moveNext_124()) return true; break;
					case 125:	if (moveNext_125()) return true; break;
					case 127:	if (moveNext_127()) return true; break;
					case 128:	if (moveNext_128()) return true; break;
					case 129:	if (moveNext_129()) return true; break;
					case 130:	if (moveNext_130()) return true; break;
					case 131:	if (moveNext_131()) return true; break;
					case 132:	if (moveNext_132()) return true; break;
					case 133:	if (moveNext_133()) return true; break;
					case 134:	if (moveNext_134()) return true; break;
					case 135:	if (moveNext_135()) return true; break;
					case 137:	if (moveNext_137()) return true; break;
					case 138:	if (moveNext_138()) return true; break;
					case 139:	if (moveNext_139()) return true; break;
					case 140:	if (moveNext_140()) return true; break;
					case 141:	if (moveNext_141()) return true; break;
					case 142:	if (moveNext_142()) return true; break;
					case 143:	if (moveNext_143()) return true; break;
					case 144:	if (moveNext_144()) return true; break;
					case 145:	if (moveNext_145()) return true; break;
					case 146:	if (moveNext_146()) return true; break;
					case 147:	if (moveNext_147()) return true; break;
					case 148:	if (moveNext_148()) return true; break;
					case 149:	if (moveNext_149()) return true; break;
					case 150:	if (moveNext_150()) return true; break;
					case 152:	if (moveNext_152()) return true; break;
					case 153:	if (moveNext_153()) return true; break;
					case 154:	if (moveNext_154()) return true; break;
					case 155:	if (moveNext_155()) return true; break;
					case 156:	if (moveNext_156()) return true; break;
					case 157:	if (moveNext_157()) return true; break;
					case 158:	if (moveNext_158()) return true; break;
					case 159:	if (moveNext_159()) return true; break;
					case 161:	if (moveNext_161()) return true; break;
					case 162:	if (moveNext_162()) return true; break;
					case 163:	if (moveNext_163()) return true; break;
					case 164:	if (moveNext_164()) return true; break;
					case 165:	if (moveNext_165()) return true; break;
					case 166:	if (moveNext_166()) return true; break;
					case 167:	if (moveNext_167()) return true; break;
					case 168:	if (moveNext_168()) return true; break;
					case 170:	if (moveNext_170()) return true; break;
					case 171:	if (moveNext_171()) return true; break;
					case 172:	if (moveNext_172()) return true; break;
					case 173:	if (moveNext_173()) return true; break;
					case 174:	if (moveNext_174()) return true; break;
					case 175:	if (moveNext_175()) return true; break;
					case 176:	if (moveNext_176()) return true; break;
					case 177:	if (moveNext_177()) return true; break;
					case 179:	if (moveNext_179()) return true; break;
					case 180:	if (moveNext_180()) return true; break;
					case 181:	if (moveNext_181()) return true; break;
					case 182:	if (moveNext_182()) return true; break;
					case 183:	if (moveNext_183()) return true; break;
					case 184:	if (moveNext_184()) return true; break;
					case 185:	if (moveNext_185()) return true; break;
					case 186:	if (moveNext_186()) return true; break;
					case 188:	if (moveNext_188()) return true; break;
					case 189:	if (moveNext_189()) return true; break;
					case 190:	if (moveNext_190()) return true; break;
					case 191:	if (moveNext_191()) return true; break;
					case 192:	if (moveNext_192()) return true; break;
					case 193:	if (moveNext_193()) return true; break;
					case 194:	if (moveNext_194()) return true; break;
					case 195:	if (moveNext_195()) return true; break;
					case 197:	if (moveNext_197()) return true; break;
					case 198:	if (moveNext_198()) return true; break;
					case 199:	if (moveNext_199()) return true; break;
					case 200:	if (moveNext_200()) return true; break;
					case 201:	if (moveNext_201()) return true; break;
					case 202:	if (moveNext_202()) return true; break;
					case 203:	if (moveNext_203()) return true; break;
					case 204:	if (moveNext_204()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current()))));
				var5_filter = (var4_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 11;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var9_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq6_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 4; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq18_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq19_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var7_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 8; return false; }
				var8_filter = new com.altova.functions.Core.SequenceCache((new seq140_filter(var4_Worksheet)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("HVACSystems", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("HVACSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq142_join(var8_filter, var4_Worksheet)))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var9_shared.moveNext()) {state = 12; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var9_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 20;				
				if( var9_shared != null ) { var9_shared.close(); var9_shared = null; }
				var14_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var10_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq360_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 13; return false; }
				var11_filter = new com.altova.functions.Core.SequenceCache((new seq361_filter(((com.altova.mapforce.IMFNode)(var10_filter.current())))));
				var12_filter = (var11_filter).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 17;				
				if (!var12_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq12_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 15; return false; }
				var13_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var12_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 17;				
				if (!var13_filter.moveNext()) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 17; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("LightingSystems", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq362_join(var11_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_18() throws Exception {
				state = 15;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 22;				
				if (!var14_shared.moveNext()) {state = 21; return false; }
				var15_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var14_shared.current()))));
				var16_filter = (var15_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 29;				
				if( var14_shared != null ) { var14_shared.close(); var14_shared = null; }
				var20_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 24;				
				if (!var16_filter.moveNext()) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq6_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 22; return false; }
				var17_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var16_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 20;				
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 26;				
				if (!var17_filter.moveNext()) {state = 25; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq18_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq19_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 24; return false; }
				var18_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var17_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 22;				
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 26;				
				if (!var18_filter.moveNext()) {state = 27; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))))) {state = 26; return false; }
				var19_filter = new com.altova.functions.Core.SequenceCache((new seq368_filter(var15_Worksheet)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("DomesticHotWaterSystems", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("DomesticHotWaterSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq369_join(var19_filter, var15_Worksheet)))));
				pos++;
				return true;
			}
			private boolean moveNext_27() throws Exception {
				state = 24;				
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				return false;
			}
			private boolean moveNext_29() throws Exception {
				state = 31;				
				if (!var20_shared.moveNext()) {state = 30; return false; }
				var21_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var20_shared.current()))));
				var22_filter = (var21_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_30() throws Exception {
				state = 38;				
				if( var20_shared != null ) { var20_shared.close(); var20_shared = null; }
				var25_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_31() throws Exception {
				state = 33;				
				if (!var22_filter.moveNext()) {state = 32; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq141_map(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))))) {state = 31; return false; }
				var23_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var22_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_32() throws Exception {
				state = 29;				
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				return false;
			}
			private boolean moveNext_33() throws Exception {
				state = 35;				
				if (!var23_filter.moveNext()) {state = 34; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq11_map(((com.altova.mapforce.IMFNode)(var23_filter.current()))))))))) {state = 33; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq12_map(((com.altova.mapforce.IMFNode)(var23_filter.current()))))))))) {state = 33; return false; }
				var24_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var23_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_34() throws Exception {
				state = 31;				
				if( var23_filter != null ) { var23_filter.close(); var23_filter = null; }
				return false;
			}
			private boolean moveNext_35() throws Exception {
				state = 35;				
				if (!var24_filter.moveNext()) {state = 36; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var24_filter.current()))))))))) {state = 35; return false; }
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var24_filter.current()))), com.altova.CoreTypes.decimalToString(new java.math.BigDecimal("0.5"))))) {state = 35; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CookingSystems", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq411_join(var21_Worksheet)));
				pos++;
				return true;
			}
			private boolean moveNext_36() throws Exception {
				state = 33;				
				if( var24_filter != null ) { var24_filter.close(); var24_filter = null; }
				return false;
			}
			private boolean moveNext_38() throws Exception {
				state = 40;				
				if (!var25_shared.moveNext()) {state = 39; return false; }
				var26_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var25_shared.current()))));
				var27_filter = (var26_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_39() throws Exception {
				state = 47;				
				if( var25_shared != null ) { var25_shared.close(); var25_shared = null; }
				var30_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_40() throws Exception {
				state = 42;				
				if (!var27_filter.moveNext()) {state = 41; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq141_map(((com.altova.mapforce.IMFNode)(var27_filter.current()))))))))) {state = 40; return false; }
				var28_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var27_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_41() throws Exception {
				state = 38;				
				if( var27_filter != null ) { var27_filter.close(); var27_filter = null; }
				return false;
			}
			private boolean moveNext_42() throws Exception {
				state = 44;				
				if (!var28_filter.moveNext()) {state = 43; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq13_map(((com.altova.mapforce.IMFNode)(var28_filter.current()))))))))) {state = 42; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq14_map(((com.altova.mapforce.IMFNode)(var28_filter.current()))))))))) {state = 42; return false; }
				var29_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var28_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_43() throws Exception {
				state = 40;				
				if( var28_filter != null ) { var28_filter.close(); var28_filter = null; }
				return false;
			}
			private boolean moveNext_44() throws Exception {
				state = 44;				
				if (!var29_filter.moveNext()) {state = 45; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var29_filter.current()))))))))) {state = 44; return false; }
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var29_filter.current()))), com.altova.CoreTypes.decimalToString(new java.math.BigDecimal("0.5"))))) {state = 44; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RefrigerationSystems", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq413_join(var26_Worksheet)));
				pos++;
				return true;
			}
			private boolean moveNext_45() throws Exception {
				state = 42;				
				if( var29_filter != null ) { var29_filter.close(); var29_filter = null; }
				return false;
			}
			private boolean moveNext_47() throws Exception {
				state = 49;				
				if (!var30_shared.moveNext()) {state = 48; return false; }
				var31_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var30_shared.current()))));
				var32_filter = (var31_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_48() throws Exception {
				state = 56;				
				if( var30_shared != null ) { var30_shared.close(); var30_shared = null; }
				var35_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_49() throws Exception {
				state = 51;				
				if (!var32_filter.moveNext()) {state = 50; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq141_map(((com.altova.mapforce.IMFNode)(var32_filter.current()))))))))) {state = 49; return false; }
				var33_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var32_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_50() throws Exception {
				state = 47;				
				if( var32_filter != null ) { var32_filter.close(); var32_filter = null; }
				return false;
			}
			private boolean moveNext_51() throws Exception {
				state = 53;				
				if (!var33_filter.moveNext()) {state = 52; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq15_map(((com.altova.mapforce.IMFNode)(var33_filter.current()))))))))) {state = 51; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq16_map(((com.altova.mapforce.IMFNode)(var33_filter.current()))))))))) {state = 51; return false; }
				var34_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var33_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_52() throws Exception {
				state = 49;				
				if( var33_filter != null ) { var33_filter.close(); var33_filter = null; }
				return false;
			}
			private boolean moveNext_53() throws Exception {
				state = 53;				
				if (!var34_filter.moveNext()) {state = 54; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var34_filter.current()))))))))) {state = 53; return false; }
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var34_filter.current()))), com.altova.CoreTypes.decimalToString(new java.math.BigDecimal("0.5"))))) {state = 53; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("DishwasherSystems", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq418_join(var31_Worksheet)));
				pos++;
				return true;
			}
			private boolean moveNext_54() throws Exception {
				state = 51;				
				if( var34_filter != null ) { var34_filter.close(); var34_filter = null; }
				return false;
			}
			private boolean moveNext_56() throws Exception {
				state = 58;				
				if (!var35_shared.moveNext()) {state = 57; return false; }
				var36_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var35_shared.current()))));
				var37_filter = (var36_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_57() throws Exception {
				state = 65;				
				if( var35_shared != null ) { var35_shared.close(); var35_shared = null; }
				var40_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_58() throws Exception {
				state = 60;				
				if (!var37_filter.moveNext()) {state = 59; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq141_map(((com.altova.mapforce.IMFNode)(var37_filter.current()))))))))) {state = 58; return false; }
				var38_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var37_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_59() throws Exception {
				state = 56;				
				if( var37_filter != null ) { var37_filter.close(); var37_filter = null; }
				return false;
			}
			private boolean moveNext_60() throws Exception {
				state = 62;				
				if (!var38_filter.moveNext()) {state = 61; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq84_map(((com.altova.mapforce.IMFNode)(var38_filter.current()))))))))) {state = 60; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq85_map(((com.altova.mapforce.IMFNode)(var38_filter.current()))))))))) {state = 60; return false; }
				var39_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var38_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_61() throws Exception {
				state = 58;				
				if( var38_filter != null ) { var38_filter.close(); var38_filter = null; }
				return false;
			}
			private boolean moveNext_62() throws Exception {
				state = 62;				
				if (!var39_filter.moveNext()) {state = 63; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var39_filter.current()))))))))) {state = 62; return false; }
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var39_filter.current()))), com.altova.CoreTypes.decimalToString(new java.math.BigDecimal("0.5"))))) {state = 62; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("LaundrySystems", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq420_join(var36_Worksheet)));
				pos++;
				return true;
			}
			private boolean moveNext_63() throws Exception {
				state = 60;				
				if( var39_filter != null ) { var39_filter.close(); var39_filter = null; }
				return false;
			}
			private boolean moveNext_65() throws Exception {
				state = 67;				
				if (!var40_shared.moveNext()) {state = 66; return false; }
				var41_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var40_shared.current()))));
				var42_filter = (var41_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_66() throws Exception {
				state = 74;				
				if( var40_shared != null ) { var40_shared.close(); var40_shared = null; }
				var45_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_67() throws Exception {
				state = 69;				
				if (!var42_filter.moveNext()) {state = 68; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq141_map(((com.altova.mapforce.IMFNode)(var42_filter.current()))))))))) {state = 67; return false; }
				var43_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var42_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_68() throws Exception {
				state = 65;				
				if( var42_filter != null ) { var42_filter.close(); var42_filter = null; }
				return false;
			}
			private boolean moveNext_69() throws Exception {
				state = 71;				
				if (!var43_filter.moveNext()) {state = 70; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq43_map(((com.altova.mapforce.IMFNode)(var43_filter.current()))))))))) {state = 69; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq44_map(((com.altova.mapforce.IMFNode)(var43_filter.current()))))))))) {state = 69; return false; }
				var44_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var43_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_70() throws Exception {
				state = 67;				
				if( var43_filter != null ) { var43_filter.close(); var43_filter = null; }
				return false;
			}
			private boolean moveNext_71() throws Exception {
				state = 71;				
				if (!var44_filter.moveNext()) {state = 72; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var44_filter.current()))))))))) {state = 71; return false; }
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var44_filter.current()))), com.altova.CoreTypes.decimalToString(new java.math.BigDecimal("0.5"))))) {state = 71; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PumpSystems", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq422_join(var41_Worksheet)));
				pos++;
				return true;
			}
			private boolean moveNext_72() throws Exception {
				state = 69;				
				if( var44_filter != null ) { var44_filter.close(); var44_filter = null; }
				return false;
			}
			private boolean moveNext_74() throws Exception {
				state = 76;				
				if (!var45_shared.moveNext()) {state = 75; return false; }
				var46_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var45_shared.current()))));
				var47_filter = (var46_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_75() throws Exception {
				state = 91;				
				if( var45_shared != null ) { var45_shared.close(); var45_shared = null; }
				var56_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_76() throws Exception {
				state = 78;				
				if (!var47_filter.moveNext()) {state = 77; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq141_map(((com.altova.mapforce.IMFNode)(var47_filter.current()))))))))) {state = 76; return false; }
				var48_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var47_filter.current()))));
				var49_filter = (var48_Row).enumerator();
				return false;
			}
			private boolean moveNext_77() throws Exception {
				state = 74;				
				if( var47_filter != null ) { var47_filter.close(); var47_filter = null; }
				return false;
			}
			private boolean moveNext_78() throws Exception {
				state = 80;				
				if (!var49_filter.moveNext()) {state = 79; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq18_map(((com.altova.mapforce.IMFNode)(var49_filter.current()))))))))) {state = 78; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq19_map(((com.altova.mapforce.IMFNode)(var49_filter.current()))))))))) {state = 78; return false; }
				var50_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var49_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_79() throws Exception {
				state = 76;				
				if( var49_filter != null ) { var49_filter.close(); var49_filter = null; }
				return false;
			}
			private boolean moveNext_80() throws Exception {
				state = 82;				
				if (!var50_filter.moveNext()) {state = 81; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var50_filter.current()))))))))) {state = 80; return false; }
				var51_filter = new com.altova.functions.Core.SequenceCache((new seq424_filter(var48_Row)));
				var52_shared = (var51_filter).enumerator();
				return false;
			}
			private boolean moveNext_81() throws Exception {
				state = 78;				
				if( var50_filter != null ) { var50_filter.close(); var50_filter = null; }
				return false;
			}
			private boolean moveNext_82() throws Exception {
				state = 84;				
				if (!var52_shared.moveNext()) {state = 83; return false; }
				var53_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var52_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_83() throws Exception {
				state = 80;				
				if( var52_shared != null ) { var52_shared.close(); var52_shared = null; }
				return false;
			}
			private boolean moveNext_84() throws Exception {
				state = 86;				
				if (!var53_filter.moveNext()) {state = 85; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var53_filter.current()))))))))) {state = 84; return false; }
				var54_shared = (var51_filter).enumerator();
				return false;
			}
			private boolean moveNext_85() throws Exception {
				state = 82;				
				if( var53_filter != null ) { var53_filter.close(); var53_filter = null; }
				return false;
			}
			private boolean moveNext_86() throws Exception {
				state = 88;				
				if (!var54_shared.moveNext()) {state = 87; return false; }
				var55_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var54_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_87() throws Exception {
				state = 84;				
				if( var54_shared != null ) { var54_shared.close(); var54_shared = null; }
				return false;
			}
			private boolean moveNext_88() throws Exception {
				state = 88;				
				if (!var55_filter.moveNext()) {state = 89; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var55_filter.current()))))))))) {state = 88; return false; }
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var55_filter.current()))), com.altova.CoreTypes.decimalToString(new java.math.BigDecimal("0.5"))))) {state = 88; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq426_seq_(((com.altova.mapforce.IMFNode)(var53_filter.current())), ((com.altova.mapforce.IMFNode)(var55_filter.current())), ((com.altova.mapforce.IMFNode)(var50_filter.current()))))))))) {state = 88; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FanSystems", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq427_join(((com.altova.mapforce.IMFNode)(var53_filter.current())), ((com.altova.mapforce.IMFNode)(var50_filter.current())), var48_Row, var46_Worksheet)));
				pos++;
				return true;
			}
			private boolean moveNext_89() throws Exception {
				state = 86;				
				if( var55_filter != null ) { var55_filter.close(); var55_filter = null; }
				return false;
			}
			private boolean moveNext_91() throws Exception {
				state = 93;				
				if (!var56_shared.moveNext()) {state = 92; return false; }
				var57_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var56_shared.current()))));
				var58_filter = (var57_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_92() throws Exception {
				state = 100;				
				if( var56_shared != null ) { var56_shared.close(); var56_shared = null; }
				var61_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_93() throws Exception {
				state = 95;				
				if (!var58_filter.moveNext()) {state = 94; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq141_map(((com.altova.mapforce.IMFNode)(var58_filter.current()))))))))) {state = 93; return false; }
				var59_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var58_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_94() throws Exception {
				state = 91;				
				if( var58_filter != null ) { var58_filter.close(); var58_filter = null; }
				return false;
			}
			private boolean moveNext_95() throws Exception {
				state = 97;				
				if (!var59_filter.moveNext()) {state = 96; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var59_filter.current()))))))))) {state = 95; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq38_map(((com.altova.mapforce.IMFNode)(var59_filter.current()))))))))) {state = 95; return false; }
				var60_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var59_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_96() throws Exception {
				state = 93;				
				if( var59_filter != null ) { var59_filter.close(); var59_filter = null; }
				return false;
			}
			private boolean moveNext_97() throws Exception {
				state = 97;				
				if (!var60_filter.moveNext()) {state = 98; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var60_filter.current()))))))))) {state = 97; return false; }
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var60_filter.current()))), com.altova.CoreTypes.decimalToString(new java.math.BigDecimal("0.5"))))) {state = 97; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MotorSystems", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq437_join(var57_Worksheet)));
				pos++;
				return true;
			}
			private boolean moveNext_98() throws Exception {
				state = 95;				
				if( var60_filter != null ) { var60_filter.close(); var60_filter = null; }
				return false;
			}
			private boolean moveNext_100() throws Exception {
				state = 102;				
				if (!var61_shared.moveNext()) {state = 101; return false; }
				var62_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var61_shared.current()))));
				var63_filter = (var62_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_101() throws Exception {
				state = 109;				
				if( var61_shared != null ) { var61_shared.close(); var61_shared = null; }
				var66_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_102() throws Exception {
				state = 104;				
				if (!var63_filter.moveNext()) {state = 103; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq141_map(((com.altova.mapforce.IMFNode)(var63_filter.current()))))))))) {state = 102; return false; }
				var64_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var63_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_103() throws Exception {
				state = 100;				
				if( var63_filter != null ) { var63_filter.close(); var63_filter = null; }
				return false;
			}
			private boolean moveNext_104() throws Exception {
				state = 106;				
				if (!var64_filter.moveNext()) {state = 105; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq60_map(((com.altova.mapforce.IMFNode)(var64_filter.current()))))))))) {state = 104; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq61_map(((com.altova.mapforce.IMFNode)(var64_filter.current()))))))))) {state = 104; return false; }
				var65_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var64_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_105() throws Exception {
				state = 102;				
				if( var64_filter != null ) { var64_filter.close(); var64_filter = null; }
				return false;
			}
			private boolean moveNext_106() throws Exception {
				state = 106;				
				if (!var65_filter.moveNext()) {state = 107; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var65_filter.current()))))))))) {state = 106; return false; }
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var65_filter.current()))), com.altova.CoreTypes.decimalToString(new java.math.BigDecimal("0.5"))))) {state = 106; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("HeatRecoverySystems", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq441_join(var62_Worksheet)));
				pos++;
				return true;
			}
			private boolean moveNext_107() throws Exception {
				state = 104;				
				if( var65_filter != null ) { var65_filter.close(); var65_filter = null; }
				return false;
			}
			private boolean moveNext_109() throws Exception {
				state = 111;				
				if (!var66_shared.moveNext()) {state = 110; return false; }
				var67_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var66_shared.current()))));
				var68_filter = (var67_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_110() throws Exception {
				state = 118;				
				if( var66_shared != null ) { var66_shared.close(); var66_shared = null; }
				var72_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_111() throws Exception {
				state = 113;				
				if (!var68_filter.moveNext()) {state = 112; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq6_map(((com.altova.mapforce.IMFNode)(var68_filter.current()))))))))) {state = 111; return false; }
				var69_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var68_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_112() throws Exception {
				state = 109;				
				if( var68_filter != null ) { var68_filter.close(); var68_filter = null; }
				return false;
			}
			private boolean moveNext_113() throws Exception {
				state = 115;				
				if (!var69_filter.moveNext()) {state = 114; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq18_map(((com.altova.mapforce.IMFNode)(var69_filter.current()))))))))) {state = 113; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq19_map(((com.altova.mapforce.IMFNode)(var69_filter.current()))))))))) {state = 113; return false; }
				var70_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var69_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_114() throws Exception {
				state = 111;				
				if( var69_filter != null ) { var69_filter.close(); var69_filter = null; }
				return false;
			}
			private boolean moveNext_115() throws Exception {
				state = 115;				
				if (!var70_filter.moveNext()) {state = 116; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var70_filter.current()))))))))) {state = 115; return false; }
				var71_filter = new com.altova.functions.Core.SequenceCache((new seq443_filter(var67_Worksheet)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("WallSystems", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("WallSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq444_join(var67_Worksheet, var71_filter)))));
				pos++;
				return true;
			}
			private boolean moveNext_116() throws Exception {
				state = 113;				
				if( var70_filter != null ) { var70_filter.close(); var70_filter = null; }
				return false;
			}
			private boolean moveNext_118() throws Exception {
				state = 120;				
				if (!var72_shared.moveNext()) {state = 119; return false; }
				var73_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var72_shared.current()))));
				var74_filter = (var73_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_119() throws Exception {
				state = 127;				
				if( var72_shared != null ) { var72_shared.close(); var72_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FenestrationSystems", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FenestrationSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq480_join(closure.var1_shared, closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_120() throws Exception {
				state = 122;				
				if (!var74_filter.moveNext()) {state = 121; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq6_map(((com.altova.mapforce.IMFNode)(var74_filter.current()))))))))) {state = 120; return false; }
				var75_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var74_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_121() throws Exception {
				state = 118;				
				if( var74_filter != null ) { var74_filter.close(); var74_filter = null; }
				return false;
			}
			private boolean moveNext_122() throws Exception {
				state = 124;				
				if (!var75_filter.moveNext()) {state = 123; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq18_map(((com.altova.mapforce.IMFNode)(var75_filter.current()))))))))) {state = 122; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq19_map(((com.altova.mapforce.IMFNode)(var75_filter.current()))))))))) {state = 122; return false; }
				var76_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var75_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_123() throws Exception {
				state = 120;				
				if( var75_filter != null ) { var75_filter.close(); var75_filter = null; }
				return false;
			}
			private boolean moveNext_124() throws Exception {
				state = 124;				
				if (!var76_filter.moveNext()) {state = 125; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var76_filter.current()))))))))) {state = 124; return false; }
				var77_filter = new com.altova.functions.Core.SequenceCache((new seq468_filter(var73_Worksheet)));
				var78_filter = new com.altova.functions.Core.SequenceCache((new seq469_filter(var73_Worksheet)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RoofSystems", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RoofSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq470_join(var77_filter, var78_filter)))));
				pos++;
				return true;
			}
			private boolean moveNext_125() throws Exception {
				state = 122;				
				if( var76_filter != null ) { var76_filter.close(); var76_filter = null; }
				return false;
			}
			private boolean moveNext_127() throws Exception {
				state = 128;				
				var79_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_128() throws Exception {
				state = 130;				
				if (!var79_shared.moveNext()) {state = 129; return false; }
				var80_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var79_shared.current()))));
				var81_filter = (var80_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_129() throws Exception {
				state = 137;				
				if( var79_shared != null ) { var79_shared.close(); var79_shared = null; }
				var85_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_130() throws Exception {
				state = 132;				
				if (!var81_filter.moveNext()) {state = 131; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq6_map(((com.altova.mapforce.IMFNode)(var81_filter.current()))))))))) {state = 130; return false; }
				var82_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var81_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_131() throws Exception {
				state = 128;				
				if( var81_filter != null ) { var81_filter.close(); var81_filter = null; }
				return false;
			}
			private boolean moveNext_132() throws Exception {
				state = 134;				
				if (!var82_filter.moveNext()) {state = 133; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq18_map(((com.altova.mapforce.IMFNode)(var82_filter.current()))))))))) {state = 132; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq19_map(((com.altova.mapforce.IMFNode)(var82_filter.current()))))))))) {state = 132; return false; }
				var83_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var82_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_133() throws Exception {
				state = 130;				
				if( var82_filter != null ) { var82_filter.close(); var82_filter = null; }
				return false;
			}
			private boolean moveNext_134() throws Exception {
				state = 134;				
				if (!var83_filter.moveNext()) {state = 135; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var83_filter.current()))))))))) {state = 134; return false; }
				var84_filter = new com.altova.functions.Core.SequenceCache((new seq500_filter(var80_Worksheet)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FoundationSystems", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FoundationSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq501_join(var84_filter, var80_Worksheet)))));
				pos++;
				return true;
			}
			private boolean moveNext_135() throws Exception {
				state = 132;				
				if( var83_filter != null ) { var83_filter.close(); var83_filter = null; }
				return false;
			}
			private boolean moveNext_137() throws Exception {
				state = 139;				
				if (!var85_shared.moveNext()) {state = 138; return false; }
				var86_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var85_shared.current()))));
				var87_filter = (var86_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_138() throws Exception {
				state = 152;				
				if( var85_shared != null ) { var85_shared.close(); var85_shared = null; }
				var94_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_139() throws Exception {
				state = 141;				
				if (!var87_filter.moveNext()) {state = 140; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq6_map(((com.altova.mapforce.IMFNode)(var87_filter.current()))))))))) {state = 139; return false; }
				var88_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var87_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_140() throws Exception {
				state = 137;				
				if( var87_filter != null ) { var87_filter.close(); var87_filter = null; }
				return false;
			}
			private boolean moveNext_141() throws Exception {
				state = 143;				
				if (!var88_filter.moveNext()) {state = 142; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq236_map(((com.altova.mapforce.IMFNode)(var88_filter.current()))))))))) {state = 141; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq237_map(((com.altova.mapforce.IMFNode)(var88_filter.current()))))))))) {state = 141; return false; }
				var89_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var88_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_142() throws Exception {
				state = 139;				
				if( var88_filter != null ) { var88_filter.close(); var88_filter = null; }
				return false;
			}
			private boolean moveNext_143() throws Exception {
				state = 145;				
				if (!var89_filter.moveNext()) {state = 144; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var89_filter.current()))))))))) {state = 143; return false; }
				var90_filter = (var86_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_144() throws Exception {
				state = 141;				
				if( var89_filter != null ) { var89_filter.close(); var89_filter = null; }
				return false;
			}
			private boolean moveNext_145() throws Exception {
				state = 147;				
				if (!var90_filter.moveNext()) {state = 146; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq141_map(((com.altova.mapforce.IMFNode)(var90_filter.current()))))))))) {state = 145; return false; }
				var91_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var90_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_146() throws Exception {
				state = 143;				
				if( var90_filter != null ) { var90_filter.close(); var90_filter = null; }
				return false;
			}
			private boolean moveNext_147() throws Exception {
				state = 149;				
				if (!var91_filter.moveNext()) {state = 148; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq56_map(((com.altova.mapforce.IMFNode)(var91_filter.current()))))))))) {state = 147; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq57_map(((com.altova.mapforce.IMFNode)(var91_filter.current()))))))))) {state = 147; return false; }
				var92_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var91_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_148() throws Exception {
				state = 145;				
				if( var91_filter != null ) { var91_filter.close(); var91_filter = null; }
				return false;
			}
			private boolean moveNext_149() throws Exception {
				state = 149;				
				if (!var92_filter.moveNext()) {state = 150; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var92_filter.current()))))))))) {state = 149; return false; }
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var92_filter.current()))), com.altova.CoreTypes.decimalToString(new java.math.BigDecimal("0.5"))))) {state = 149; return false; }
				var93_vmf22_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf22_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var89_filter.current())))));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CriticalITSystems", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq516_join(var86_Worksheet, var93_vmf22_inputtoresult)));
				pos++;
				return true;
			}
			private boolean moveNext_150() throws Exception {
				state = 147;				
				if( var92_filter != null ) { var92_filter.close(); var92_filter = null; }
				return false;
			}
			private boolean moveNext_152() throws Exception {
				state = 154;				
				if (!var94_shared.moveNext()) {state = 153; return false; }
				var95_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var94_shared.current()))));
				var96_filter = (var95_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_153() throws Exception {
				state = 161;				
				if( var94_shared != null ) { var94_shared.close(); var94_shared = null; }
				var99_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_154() throws Exception {
				state = 156;				
				if (!var96_filter.moveNext()) {state = 155; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq141_map(((com.altova.mapforce.IMFNode)(var96_filter.current()))))))))) {state = 154; return false; }
				var97_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var96_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_155() throws Exception {
				state = 152;				
				if( var96_filter != null ) { var96_filter.close(); var96_filter = null; }
				return false;
			}
			private boolean moveNext_156() throws Exception {
				state = 158;				
				if (!var97_filter.moveNext()) {state = 157; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq58_map(((com.altova.mapforce.IMFNode)(var97_filter.current()))))))))) {state = 156; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq59_map(((com.altova.mapforce.IMFNode)(var97_filter.current()))))))))) {state = 156; return false; }
				var98_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var97_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_157() throws Exception {
				state = 154;				
				if( var97_filter != null ) { var97_filter.close(); var97_filter = null; }
				return false;
			}
			private boolean moveNext_158() throws Exception {
				state = 158;				
				if (!var98_filter.moveNext()) {state = 159; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var98_filter.current()))))))))) {state = 158; return false; }
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var98_filter.current()))), com.altova.CoreTypes.decimalToString(new java.math.BigDecimal("0.5"))))) {state = 158; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PlugLoads", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq518_join(var95_Worksheet)));
				pos++;
				return true;
			}
			private boolean moveNext_159() throws Exception {
				state = 156;				
				if( var98_filter != null ) { var98_filter.close(); var98_filter = null; }
				return false;
			}
			private boolean moveNext_161() throws Exception {
				state = 163;				
				if (!var99_shared.moveNext()) {state = 162; return false; }
				var100_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var99_shared.current()))));
				var101_filter = (var100_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_162() throws Exception {
				state = 170;				
				if( var99_shared != null ) { var99_shared.close(); var99_shared = null; }
				var104_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_163() throws Exception {
				state = 165;				
				if (!var101_filter.moveNext()) {state = 164; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq141_map(((com.altova.mapforce.IMFNode)(var101_filter.current()))))))))) {state = 163; return false; }
				var102_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var101_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_164() throws Exception {
				state = 161;				
				if( var101_filter != null ) { var101_filter.close(); var101_filter = null; }
				return false;
			}
			private boolean moveNext_165() throws Exception {
				state = 167;				
				if (!var102_filter.moveNext()) {state = 166; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq236_map(((com.altova.mapforce.IMFNode)(var102_filter.current()))))))))) {state = 165; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq237_map(((com.altova.mapforce.IMFNode)(var102_filter.current()))))))))) {state = 165; return false; }
				var103_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var102_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_166() throws Exception {
				state = 163;				
				if( var102_filter != null ) { var102_filter.close(); var102_filter = null; }
				return false;
			}
			private boolean moveNext_167() throws Exception {
				state = 167;				
				if (!var103_filter.moveNext()) {state = 168; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var103_filter.current()))))))))) {state = 167; return false; }
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var103_filter.current()))), com.altova.CoreTypes.decimalToString(new java.math.BigDecimal("0.5"))))) {state = 167; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ProcessLoads", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq520_join(var100_Worksheet)));
				pos++;
				return true;
			}
			private boolean moveNext_168() throws Exception {
				state = 165;				
				if( var103_filter != null ) { var103_filter.close(); var103_filter = null; }
				return false;
			}
			private boolean moveNext_170() throws Exception {
				state = 172;				
				if (!var104_shared.moveNext()) {state = 171; return false; }
				var105_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var104_shared.current()))));
				var106_filter = (var105_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_171() throws Exception {
				state = 179;				
				if( var104_shared != null ) { var104_shared.close(); var104_shared = null; }
				var109_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_172() throws Exception {
				state = 174;				
				if (!var106_filter.moveNext()) {state = 173; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq141_map(((com.altova.mapforce.IMFNode)(var106_filter.current()))))))))) {state = 172; return false; }
				var107_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var106_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_173() throws Exception {
				state = 170;				
				if( var106_filter != null ) { var106_filter.close(); var106_filter = null; }
				return false;
			}
			private boolean moveNext_174() throws Exception {
				state = 176;				
				if (!var107_filter.moveNext()) {state = 175; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq30_map(((com.altova.mapforce.IMFNode)(var107_filter.current()))))))))) {state = 174; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq31_map(((com.altova.mapforce.IMFNode)(var107_filter.current()))))))))) {state = 174; return false; }
				var108_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var107_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_175() throws Exception {
				state = 172;				
				if( var107_filter != null ) { var107_filter.close(); var107_filter = null; }
				return false;
			}
			private boolean moveNext_176() throws Exception {
				state = 176;				
				if (!var108_filter.moveNext()) {state = 177; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var108_filter.current()))))))))) {state = 176; return false; }
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var108_filter.current()))), com.altova.CoreTypes.decimalToString(new java.math.BigDecimal("0.5"))))) {state = 176; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ConveyanceSystems", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq522_join(var105_Worksheet)));
				pos++;
				return true;
			}
			private boolean moveNext_177() throws Exception {
				state = 174;				
				if( var108_filter != null ) { var108_filter.close(); var108_filter = null; }
				return false;
			}
			private boolean moveNext_179() throws Exception {
				state = 181;				
				if (!var109_shared.moveNext()) {state = 180; return false; }
				var110_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var109_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_180() throws Exception {
				state = 188;				
				if( var109_shared != null ) { var109_shared.close(); var109_shared = null; }
				var114_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_181() throws Exception {
				state = 183;				
				if (!var110_filter.moveNext()) {state = 182; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq524_map(((com.altova.mapforce.IMFNode)(var110_filter.current()))))))))) {state = 181; return false; }
				var111_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var110_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_182() throws Exception {
				state = 179;				
				if( var110_filter != null ) { var110_filter.close(); var110_filter = null; }
				return false;
			}
			private boolean moveNext_183() throws Exception {
				state = 185;				
				if (!var111_filter.moveNext()) {state = 184; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq60_map(((com.altova.mapforce.IMFNode)(var111_filter.current()))))))))) {state = 183; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq61_map(((com.altova.mapforce.IMFNode)(var111_filter.current()))))))))) {state = 183; return false; }
				var112_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var111_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_184() throws Exception {
				state = 181;				
				if( var111_filter != null ) { var111_filter.close(); var111_filter = null; }
				return false;
			}
			private boolean moveNext_185() throws Exception {
				state = 185;				
				if (!var112_filter.moveNext()) {state = 186; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var112_filter.current()))))))))) {state = 185; return false; }
				var113_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var112_filter.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OnSiteStorageTransmissionGenerationSystems", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OnSiteStorageTransmissionGenerationSystem", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EnergyConversionType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Generation", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OnSiteGenerationType", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq525_if_equal(var113_cast)))))))))));
				pos++;
				return true;
			}
			private boolean moveNext_186() throws Exception {
				state = 183;				
				if( var112_filter != null ) { var112_filter.close(); var112_filter = null; }
				return false;
			}
			private boolean moveNext_188() throws Exception {
				state = 190;				
				if (!var114_shared.moveNext()) {state = 189; return false; }
				var115_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var114_shared.current()))));
				var116_filter = (var115_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_189() throws Exception {
				state = 197;				
				if( var114_shared != null ) { var114_shared.close(); var114_shared = null; }
				var119_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_190() throws Exception {
				state = 192;				
				if (!var116_filter.moveNext()) {state = 191; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq141_map(((com.altova.mapforce.IMFNode)(var116_filter.current()))))))))) {state = 190; return false; }
				var117_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var116_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_191() throws Exception {
				state = 188;				
				if( var116_filter != null ) { var116_filter.close(); var116_filter = null; }
				return false;
			}
			private boolean moveNext_192() throws Exception {
				state = 194;				
				if (!var117_filter.moveNext()) {state = 193; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq41_map(((com.altova.mapforce.IMFNode)(var117_filter.current()))))))))) {state = 192; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq42_map(((com.altova.mapforce.IMFNode)(var117_filter.current()))))))))) {state = 192; return false; }
				var118_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var117_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_193() throws Exception {
				state = 190;				
				if( var117_filter != null ) { var117_filter.close(); var117_filter = null; }
				return false;
			}
			private boolean moveNext_194() throws Exception {
				state = 194;				
				if (!var118_filter.moveNext()) {state = 195; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var118_filter.current()))))))))) {state = 194; return false; }
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var118_filter.current()))), com.altova.CoreTypes.decimalToString(new java.math.BigDecimal("0.5"))))) {state = 194; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Pools", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq526_join(var115_Worksheet)));
				pos++;
				return true;
			}
			private boolean moveNext_195() throws Exception {
				state = 192;				
				if( var118_filter != null ) { var118_filter.close(); var118_filter = null; }
				return false;
			}
			private boolean moveNext_197() throws Exception {
				state = 199;				
				if (!var119_shared.moveNext()) {state = 198; return false; }
				var120_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var119_shared.current()))));
				var121_filter = (var120_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_198() throws Exception {
				state = 0;				
				if( var119_shared != null ) { var119_shared.close(); var119_shared = null; }
				return false;
			}
			private boolean moveNext_199() throws Exception {
				state = 201;				
				if (!var121_filter.moveNext()) {state = 200; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq141_map(((com.altova.mapforce.IMFNode)(var121_filter.current()))))))))) {state = 199; return false; }
				var122_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var121_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_200() throws Exception {
				state = 197;				
				if( var121_filter != null ) { var121_filter.close(); var121_filter = null; }
				return false;
			}
			private boolean moveNext_201() throws Exception {
				state = 203;				
				if (!var122_filter.moveNext()) {state = 202; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq26_map(((com.altova.mapforce.IMFNode)(var122_filter.current()))))))))) {state = 201; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq27_map(((com.altova.mapforce.IMFNode)(var122_filter.current()))))))))) {state = 201; return false; }
				var123_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var122_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_202() throws Exception {
				state = 199;				
				if( var122_filter != null ) { var122_filter.close(); var122_filter = null; }
				return false;
			}
			private boolean moveNext_203() throws Exception {
				state = 203;				
				if (!var123_filter.moveNext()) {state = 204; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var123_filter.current()))))))))) {state = 203; return false; }
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var123_filter.current()))), com.altova.CoreTypes.decimalToString(new java.math.BigDecimal("0.5"))))) {state = 203; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("WaterUses", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq528_join(var120_Worksheet)));
				pos++;
				return true;
			}
			private boolean moveNext_204() throws Exception {
				state = 201;				
				if( var123_filter != null ) { var123_filter.close(); var123_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_shared != null ) { var9_shared.close(); var9_shared = null; }
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				if( var14_shared != null ) { var14_shared.close(); var14_shared = null; }
				if( var24_filter != null ) { var24_filter.close(); var24_filter = null; }
				if( var23_filter != null ) { var23_filter.close(); var23_filter = null; }
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				if( var20_shared != null ) { var20_shared.close(); var20_shared = null; }
				if( var29_filter != null ) { var29_filter.close(); var29_filter = null; }
				if( var28_filter != null ) { var28_filter.close(); var28_filter = null; }
				if( var27_filter != null ) { var27_filter.close(); var27_filter = null; }
				if( var25_shared != null ) { var25_shared.close(); var25_shared = null; }
				if( var34_filter != null ) { var34_filter.close(); var34_filter = null; }
				if( var33_filter != null ) { var33_filter.close(); var33_filter = null; }
				if( var32_filter != null ) { var32_filter.close(); var32_filter = null; }
				if( var30_shared != null ) { var30_shared.close(); var30_shared = null; }
				if( var39_filter != null ) { var39_filter.close(); var39_filter = null; }
				if( var38_filter != null ) { var38_filter.close(); var38_filter = null; }
				if( var37_filter != null ) { var37_filter.close(); var37_filter = null; }
				if( var35_shared != null ) { var35_shared.close(); var35_shared = null; }
				if( var44_filter != null ) { var44_filter.close(); var44_filter = null; }
				if( var43_filter != null ) { var43_filter.close(); var43_filter = null; }
				if( var42_filter != null ) { var42_filter.close(); var42_filter = null; }
				if( var40_shared != null ) { var40_shared.close(); var40_shared = null; }
				if( var55_filter != null ) { var55_filter.close(); var55_filter = null; }
				if( var54_shared != null ) { var54_shared.close(); var54_shared = null; }
				if( var53_filter != null ) { var53_filter.close(); var53_filter = null; }
				if( var52_shared != null ) { var52_shared.close(); var52_shared = null; }
				if( var50_filter != null ) { var50_filter.close(); var50_filter = null; }
				if( var49_filter != null ) { var49_filter.close(); var49_filter = null; }
				if( var47_filter != null ) { var47_filter.close(); var47_filter = null; }
				if( var45_shared != null ) { var45_shared.close(); var45_shared = null; }
				if( var60_filter != null ) { var60_filter.close(); var60_filter = null; }
				if( var59_filter != null ) { var59_filter.close(); var59_filter = null; }
				if( var58_filter != null ) { var58_filter.close(); var58_filter = null; }
				if( var56_shared != null ) { var56_shared.close(); var56_shared = null; }
				if( var65_filter != null ) { var65_filter.close(); var65_filter = null; }
				if( var64_filter != null ) { var64_filter.close(); var64_filter = null; }
				if( var63_filter != null ) { var63_filter.close(); var63_filter = null; }
				if( var61_shared != null ) { var61_shared.close(); var61_shared = null; }
				if( var70_filter != null ) { var70_filter.close(); var70_filter = null; }
				if( var69_filter != null ) { var69_filter.close(); var69_filter = null; }
				if( var68_filter != null ) { var68_filter.close(); var68_filter = null; }
				if( var66_shared != null ) { var66_shared.close(); var66_shared = null; }
				if( var76_filter != null ) { var76_filter.close(); var76_filter = null; }
				if( var75_filter != null ) { var75_filter.close(); var75_filter = null; }
				if( var74_filter != null ) { var74_filter.close(); var74_filter = null; }
				if( var72_shared != null ) { var72_shared.close(); var72_shared = null; }
				if( var83_filter != null ) { var83_filter.close(); var83_filter = null; }
				if( var82_filter != null ) { var82_filter.close(); var82_filter = null; }
				if( var81_filter != null ) { var81_filter.close(); var81_filter = null; }
				if( var79_shared != null ) { var79_shared.close(); var79_shared = null; }
				if( var92_filter != null ) { var92_filter.close(); var92_filter = null; }
				if( var91_filter != null ) { var91_filter.close(); var91_filter = null; }
				if( var90_filter != null ) { var90_filter.close(); var90_filter = null; }
				if( var89_filter != null ) { var89_filter.close(); var89_filter = null; }
				if( var88_filter != null ) { var88_filter.close(); var88_filter = null; }
				if( var87_filter != null ) { var87_filter.close(); var87_filter = null; }
				if( var85_shared != null ) { var85_shared.close(); var85_shared = null; }
				if( var98_filter != null ) { var98_filter.close(); var98_filter = null; }
				if( var97_filter != null ) { var97_filter.close(); var97_filter = null; }
				if( var96_filter != null ) { var96_filter.close(); var96_filter = null; }
				if( var94_shared != null ) { var94_shared.close(); var94_shared = null; }
				if( var103_filter != null ) { var103_filter.close(); var103_filter = null; }
				if( var102_filter != null ) { var102_filter.close(); var102_filter = null; }
				if( var101_filter != null ) { var101_filter.close(); var101_filter = null; }
				if( var99_shared != null ) { var99_shared.close(); var99_shared = null; }
				if( var108_filter != null ) { var108_filter.close(); var108_filter = null; }
				if( var107_filter != null ) { var107_filter.close(); var107_filter = null; }
				if( var106_filter != null ) { var106_filter.close(); var106_filter = null; }
				if( var104_shared != null ) { var104_shared.close(); var104_shared = null; }
				if( var112_filter != null ) { var112_filter.close(); var112_filter = null; }
				if( var111_filter != null ) { var111_filter.close(); var111_filter = null; }
				if( var110_filter != null ) { var110_filter.close(); var110_filter = null; }
				if( var109_shared != null ) { var109_shared.close(); var109_shared = null; }
				if( var118_filter != null ) { var118_filter.close(); var118_filter = null; }
				if( var117_filter != null ) { var117_filter.close(); var117_filter = null; }
				if( var116_filter != null ) { var116_filter.close(); var116_filter = null; }
				if( var114_shared != null ) { var114_shared.close(); var114_shared = null; }
				if( var123_filter != null ) { var123_filter.close(); var123_filter = null; }
				if( var122_filter != null ) { var122_filter.close(); var122_filter = null; }
				if( var121_filter != null ) { var121_filter.close(); var121_filter = null; }
				if( var119_shared != null ) { var119_shared.close(); var119_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq140_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq140_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq140_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq140_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq141_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq141_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq141_map(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq141_map closure;
			IEnumerator var2_Name;
			public Enumerator(seq141_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_Name = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_n)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_Name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_Name.current()))), "Check Box Data");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq142_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq142_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq142_join closure;
			IEnumerator var3_shared;
			com.altova.mapforce.IEnumerable var4_Row;
			IEnumerator var5_filter;
			IEnumerator var20_shared;
			com.altova.mapforce.IEnumerable var21_Row;
			IEnumerator var22_filter;
			IEnumerator var26_shared;
			IEnumerator var6_filter;
			com.altova.mapforce.IEnumerable var27_Row;
			IEnumerator var28_filter;
			IEnumerator var7_filter;
			IEnumerator var23_filter;
			IEnumerator var29_filter;
			IEnumerator var8_filter;
			boolean var24_cast;
			com.altova.mapforce.IEnumerable var25_filter;
			IEnumerator var30_filter;
			IEnumerator var9_filter;
			IEnumerator var31_filter;
			IEnumerator var10_filter;
			IEnumerator var32_filter;
			IEnumerator var11_filter;
			IEnumerator var33_filter;
			IEnumerator var12_filter;
			IEnumerator var34_filter;
			IEnumerator var13_filter;
			IEnumerator var35_filter;
			IEnumerator var14_filter;
			java.lang.String var15_cast;
			com.altova.mapforce.IEnumerable var36_filter;
			boolean var16_cast;
			boolean var17_cast;
			boolean var18_cast;
			com.altova.mapforce.IEnumerable var19_filter;
			public Enumerator(seq142_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 32:	if (moveNext_32()) return true; break;
					case 33:	if (moveNext_33()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
					case 35:	if (moveNext_35()) return true; break;
					case 36:	if (moveNext_36()) return true; break;
					case 37:	if (moveNext_37()) return true; break;
					case 38:	if (moveNext_38()) return true; break;
					case 39:	if (moveNext_39()) return true; break;
					case 40:	if (moveNext_40()) return true; break;
					case 41:	if (moveNext_41()) return true; break;
					case 42:	if (moveNext_42()) return true; break;
					case 43:	if (moveNext_43()) return true; break;
					case 44:	if (moveNext_44()) return true; break;
					case 45:	if (moveNext_45()) return true; break;
					case 46:	if (moveNext_46()) return true; break;
					case 47:	if (moveNext_47()) return true; break;
					case 48:	if (moveNext_48()) return true; break;
					case 49:	if (moveNext_49()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current()))));
				var5_filter = (var4_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 25;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var20_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq53_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq54_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 4; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				var7_filter = (var4_Row).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var7_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq143_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq144_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 8; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var8_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 10; return false; }
				var9_filter = (var4_Row).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var9_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq72_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq73_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 12; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 16;				
				if (!var10_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 14; return false; }
				var11_filter = (var4_Row).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var11_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq145_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq146_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 16; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 14;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var12_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 18; return false; }
				var13_filter = (var4_Row).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 22;				
				if (!var13_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq147_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq148_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 20; return false; }
				var14_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var13_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 22;				
				if (!var14_filter.moveNext()) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 22; return false; }
				var15_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())));
				var16_cast = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_filter.current()))));
				var17_cast = com.altova.CoreTypes.parseBoolean(var15_cast);
				var18_cast = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var10_filter.current()))));
				var19_filter = new com.altova.functions.Core.SequenceCache((new seq149_filter(var4_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Plants", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq153_join(((com.altova.mapforce.IMFNode)(var12_filter.current())), var19_filter, var15_cast, var4_Row, var16_cast, var17_cast, var18_cast, ((com.altova.mapforce.IMFNode)(var14_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_23() throws Exception {
				state = 20;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 27;				
				if (!var20_shared.moveNext()) {state = 26; return false; }
				var21_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var20_shared.current()))));
				var22_filter = (var21_Row).enumerator();
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 32;				
				if( var20_shared != null ) { var20_shared.close(); var20_shared = null; }
				var26_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 29;				
				if (!var22_filter.moveNext()) {state = 28; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))))) {state = 27; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq64_map(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))))) {state = 27; return false; }
				var23_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var22_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_28() throws Exception {
				state = 25;				
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				return false;
			}
			private boolean moveNext_29() throws Exception {
				state = 29;				
				if (!var23_filter.moveNext()) {state = 30; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var23_filter.current()))))))))) {state = 29; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq230_if_cast(var21_Row, ((com.altova.mapforce.IMFNode)(var23_filter.current()))))))) {state = 29; return false; }
				var24_cast = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var23_filter.current()))));
				var25_filter = new com.altova.functions.Core.SequenceCache((new seq240_filter(var21_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("HeatingAndCoolingSystems", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq242_join(var25_filter, closure.var2_shared, var21_Row, var24_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_30() throws Exception {
				state = 27;				
				if( var23_filter != null ) { var23_filter.close(); var23_filter = null; }
				return false;
			}
			private boolean moveNext_32() throws Exception {
				state = 34;				
				if (!var26_shared.moveNext()) {state = 33; return false; }
				var27_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var26_shared.current()))));
				var28_filter = (var27_Row).enumerator();
				return false;
			}
			private boolean moveNext_33() throws Exception {
				state = 0;				
				if( var26_shared != null ) { var26_shared.close(); var26_shared = null; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq358_join(closure.var1_shared))))))) {state = 0; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq359_join(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_34() throws Exception {
				state = 36;				
				if (!var28_filter.moveNext()) {state = 35; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq334_map(((com.altova.mapforce.IMFNode)(var28_filter.current()))))))))) {state = 34; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq335_map(((com.altova.mapforce.IMFNode)(var28_filter.current()))))))))) {state = 34; return false; }
				var29_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var28_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_35() throws Exception {
				state = 32;				
				if( var28_filter != null ) { var28_filter.close(); var28_filter = null; }
				return false;
			}
			private boolean moveNext_36() throws Exception {
				state = 38;				
				if (!var29_filter.moveNext()) {state = 37; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var29_filter.current()))))))))) {state = 36; return false; }
				var30_filter = (var27_Row).enumerator();
				return false;
			}
			private boolean moveNext_37() throws Exception {
				state = 34;				
				if( var29_filter != null ) { var29_filter.close(); var29_filter = null; }
				return false;
			}
			private boolean moveNext_38() throws Exception {
				state = 40;				
				if (!var30_filter.moveNext()) {state = 39; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq18_map(((com.altova.mapforce.IMFNode)(var30_filter.current()))))))))) {state = 38; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq19_map(((com.altova.mapforce.IMFNode)(var30_filter.current()))))))))) {state = 38; return false; }
				var31_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var30_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_39() throws Exception {
				state = 36;				
				if( var30_filter != null ) { var30_filter.close(); var30_filter = null; }
				return false;
			}
			private boolean moveNext_40() throws Exception {
				state = 42;				
				if (!var31_filter.moveNext()) {state = 41; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var31_filter.current()))))))))) {state = 40; return false; }
				var32_filter = (var27_Row).enumerator();
				return false;
			}
			private boolean moveNext_41() throws Exception {
				state = 38;				
				if( var31_filter != null ) { var31_filter.close(); var31_filter = null; }
				return false;
			}
			private boolean moveNext_42() throws Exception {
				state = 44;				
				if (!var32_filter.moveNext()) {state = 43; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var32_filter.current()))))))))) {state = 42; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq71_map(((com.altova.mapforce.IMFNode)(var32_filter.current()))))))))) {state = 42; return false; }
				var33_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var32_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_43() throws Exception {
				state = 40;				
				if( var32_filter != null ) { var32_filter.close(); var32_filter = null; }
				return false;
			}
			private boolean moveNext_44() throws Exception {
				state = 46;				
				if (!var33_filter.moveNext()) {state = 45; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var33_filter.current()))))))))) {state = 44; return false; }
				var34_filter = (var27_Row).enumerator();
				return false;
			}
			private boolean moveNext_45() throws Exception {
				state = 42;				
				if( var33_filter != null ) { var33_filter.close(); var33_filter = null; }
				return false;
			}
			private boolean moveNext_46() throws Exception {
				state = 48;				
				if (!var34_filter.moveNext()) {state = 47; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var34_filter.current()))))))))) {state = 46; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var34_filter.current()))))))))) {state = 46; return false; }
				var35_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var34_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_47() throws Exception {
				state = 44;				
				if( var34_filter != null ) { var34_filter.close(); var34_filter = null; }
				return false;
			}
			private boolean moveNext_48() throws Exception {
				state = 48;				
				if (!var35_filter.moveNext()) {state = 49; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var35_filter.current()))))))))) {state = 48; return false; }
				if (!(com.altova.functions.Core.greater(com.altova.functions.Core.add(com.altova.functions.Core.add(com.altova.functions.Core.add(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var29_filter.current())))), com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var31_filter.current()))))), com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var33_filter.current()))))), com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var35_filter.current()))))), new java.math.BigDecimal("0.5")))) {state = 48; return false; }
				var36_filter = new com.altova.functions.Core.SequenceCache((new seq336_filter(closure.var2_shared)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OtherHVACSystems", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq338_join(var36_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_49() throws Exception {
				state = 46;				
				if( var35_filter != null ) { var35_filter.close(); var35_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var23_filter != null ) { var23_filter.close(); var23_filter = null; }
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				if( var20_shared != null ) { var20_shared.close(); var20_shared = null; }
				if( var35_filter != null ) { var35_filter.close(); var35_filter = null; }
				if( var34_filter != null ) { var34_filter.close(); var34_filter = null; }
				if( var33_filter != null ) { var33_filter.close(); var33_filter = null; }
				if( var32_filter != null ) { var32_filter.close(); var32_filter = null; }
				if( var31_filter != null ) { var31_filter.close(); var31_filter = null; }
				if( var30_filter != null ) { var30_filter.close(); var30_filter = null; }
				if( var29_filter != null ) { var29_filter.close(); var29_filter = null; }
				if( var28_filter != null ) { var28_filter.close(); var28_filter = null; }
				if( var26_shared != null ) { var26_shared.close(); var26_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq143_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq143_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq143_map closure;
			IEnumerator var2_r;
			public Enumerator(seq143_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(22L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq144_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq144_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq144_map closure;
			IEnumerator var2_r;
			public Enumerator(seq144_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(22L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq145_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq145_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq145_map closure;
			IEnumerator var2_r;
			public Enumerator(seq145_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(39L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq146_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq146_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq146_map closure;
			IEnumerator var2_r;
			public Enumerator(seq146_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(39L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq147_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq147_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq147_map closure;
			IEnumerator var2_r;
			public Enumerator(seq147_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(40L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq148_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq148_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq148_map closure;
			IEnumerator var2_r;
			public Enumerator(seq148_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(40L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq149_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq149_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq149_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq149_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq150_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq152_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq150_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq150_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq150_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq150_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq151_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq151_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq151_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq151_map closure;
			IEnumerator var2_r;
			public Enumerator(seq151_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(41L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq152_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq152_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq152_map closure;
			IEnumerator var2_r;
			public Enumerator(seq152_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(41L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq153_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		java.lang.String var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
		boolean var5_shared;
		boolean var6_shared;
		boolean var7_shared;
		com.altova.mapforce.IMFNode var8_cur_Cell;
	
		public seq153_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, java.lang.String var3_shared, com.altova.mapforce.IEnumerable var4_shared, boolean var5_shared, boolean var6_shared, boolean var7_shared, com.altova.mapforce.IMFNode var8_cur_Cell)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
			this.var6_shared = var6_shared;
			this.var7_shared = var7_shared;
			this.var8_cur_Cell = var8_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq153_join closure;
			IEnumerator var9_filter;
			IEnumerator var10_filter;
			IEnumerator var13_shared;
			IEnumerator var11_filter;
			IEnumerator var14_filter;
			IEnumerator var15_filter;
			IEnumerator var12_filter;
			IEnumerator var16_filter;
			IEnumerator var17_filter;
			IEnumerator var18_filter;
			boolean var19_cast;
			boolean var20_cast;
			boolean var21_cast;
			boolean var22_cast;
			boolean var23_cast;
			public Enumerator(seq153_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var9_filter = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var9_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq154_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq155_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 2; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 13;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq188_seq_(closure.var5_shared, closure.var6_shared, closure.var7_shared))))))) {state = 13; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CoolingPlantType", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq189_join(closure.var1_current, closure.var2_shared, closure.var3_shared, closure.var4_shared, closure.var5_shared, closure.var6_shared, closure.var7_shared, closure.var8_cur_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var10_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 4; return false; }
				var11_filter = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var11_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq156_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 6; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var12_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq158_seq_(((com.altova.mapforce.IMFNode)(var10_filter.current())), ((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("HeatingPlantType", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq159_join(((com.altova.mapforce.IMFNode)(var12_filter.current())), ((com.altova.mapforce.IMFNode)(var10_filter.current())), closure.var4_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 14;				
				var13_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 16;				
				if (!var13_shared.moveNext()) {state = 15; return false; }
				var14_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var13_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 0;				
				if( var13_shared != null ) { var13_shared.close(); var13_shared = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var14_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 16; return false; }
				var15_filter = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 14;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var15_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq215_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq216_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 18; return false; }
				var16_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var15_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 22;				
				if (!var16_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 20; return false; }
				var17_filter = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 24;				
				if (!var17_filter.moveNext()) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq219_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq220_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 22; return false; }
				var18_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var17_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 20;				
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 24;				
				if (!var18_filter.moveNext()) {state = 25; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))))) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq225_seq_(closure.var1_current, ((com.altova.mapforce.IMFNode)(var16_filter.current())), ((com.altova.mapforce.IMFNode)(var18_filter.current())), ((com.altova.mapforce.IMFNode)(var14_filter.current())), closure.var8_cur_Cell))))))) {state = 24; return false; }
				var19_cast = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current));
				var20_cast = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var8_cur_Cell));
				var21_cast = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var16_filter.current()))));
				var22_cast = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var14_filter.current()))));
				var23_cast = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var18_filter.current()))));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CondenserPlant", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq226_join(var19_cast, var20_cast, var22_cast, var21_cast, var23_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_25() throws Exception {
				state = 22;				
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var13_shared != null ) { var13_shared.close(); var13_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq154_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq154_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq154_map closure;
			IEnumerator var2_r;
			public Enumerator(seq154_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(48L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq155_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq155_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq155_map closure;
			IEnumerator var2_r;
			public Enumerator(seq155_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(48L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq156_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq156_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq156_map closure;
			IEnumerator var2_r;
			public Enumerator(seq156_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(49L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq157_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq157_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq157_map closure;
			IEnumerator var2_r;
			public Enumerator(seq157_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(49L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq158_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_cur_Cell;
	
		public seq158_seq_(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_cur_Cell)
		{
			this.var1_current = var1_current;
			this.var2_cur_Cell = var2_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq158_seq_ closure;
			public Enumerator(seq158_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_cur_Cell));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq159_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq159_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq159_join closure;
			public Enumerator(seq159_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box("HeatiingPlant1"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current)))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Boiler", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq160_join(closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 0; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("DistrictHeating", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq187_seq_()));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq160_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq160_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq160_join closure;
			IEnumerator var2_filter;
			IEnumerator var4_filter;
			IEnumerator var3_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			public Enumerator(seq160_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq161_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq162_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 7;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq163_if_cast(closure.var1_shared, ((com.altova.mapforce.IMFNode)(var3_filter.current()))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("BoilerType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq168_if_cast(((com.altova.mapforce.IMFNode)(var3_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq169_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq170_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var5_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 9; return false; }
				var6_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq171_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq172_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var7_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq173_if_any(((com.altova.mapforce.IMFNode)(var7_filter.current())), ((com.altova.mapforce.IMFNode)(var5_filter.current())), closure.var1_shared))))) {state = 13; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("DraftType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq184_if_any(((com.altova.mapforce.IMFNode)(var7_filter.current())), ((com.altova.mapforce.IMFNode)(var5_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq161_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq161_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq161_map closure;
			IEnumerator var2_r;
			public Enumerator(seq161_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(51L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq162_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq162_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq162_map closure;
			IEnumerator var2_r;
			public Enumerator(seq162_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(51L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq163_if_cast implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IMFNode var2_cur_Cell;
	
		public seq163_if_cast(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IMFNode var2_cur_Cell)
		{
			this.var1_shared = var1_shared;
			this.var2_cur_Cell = var2_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq163_if_cast closure;
			public Enumerator(seq163_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_cur_Cell)))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq164_map(closure.var1_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq164_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq164_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq164_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq164_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq165_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq166_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq167_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq165_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq165_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq165_map closure;
			IEnumerator var2_r;
			public Enumerator(seq165_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(54L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq166_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq166_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq166_map closure;
			IEnumerator var2_r;
			public Enumerator(seq166_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(54L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq167_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq167_map(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq167_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq167_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq168_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq168_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq168_if_cast closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq168_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = "Steam";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq165_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq166_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))) {state = 7; return false; }
				current = "Hot water";
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq169_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq169_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq169_map closure;
			IEnumerator var2_r;
			public Enumerator(seq169_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(52L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq170_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq170_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq170_map closure;
			IEnumerator var2_r;
			public Enumerator(seq170_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(52L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq171_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq171_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq171_map closure;
			IEnumerator var2_r;
			public Enumerator(seq171_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(55L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq172_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq172_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq172_map closure;
			IEnumerator var2_r;
			public Enumerator(seq172_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(55L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq173_if_any implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq173_if_any(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq173_if_any closure;
			public Enumerator(seq173_if_any closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq174_seq_(closure.var1_current, closure.var2_current))))))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq175_map(closure.var3_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq174_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq174_seq_(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq174_seq_ closure;
			public Enumerator(seq174_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq175_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq175_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq175_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq175_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq176_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq177_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq178_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq176_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq176_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq176_map closure;
			IEnumerator var2_r;
			public Enumerator(seq176_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(53L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq177_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq177_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq177_map closure;
			IEnumerator var2_r;
			public Enumerator(seq177_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(53L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq178_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq178_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq178_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq178_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq179_map(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq179_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq179_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq179_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq179_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq180_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq181_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq182_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq180_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq180_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq180_map closure;
			IEnumerator var2_r;
			public Enumerator(seq180_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(56L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq181_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq181_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq181_map closure;
			IEnumerator var2_r;
			public Enumerator(seq181_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(56L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq182_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq182_map(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq182_map closure;
			IEnumerator var2_filter;
			boolean var3_cast;
			public Enumerator(seq182_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_cast = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq183_seq_(var3_cast)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq183_seq_ implements IEnumerable
	{
		boolean var1_shared;
	
		public seq183_seq_(boolean var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq183_seq_ closure;
			public Enumerator(seq183_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_shared;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = closure.var1_shared;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq184_if_any implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq184_if_any(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq184_if_any closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			public Enumerator(seq184_if_any closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq185_seq_(closure.var1_current, closure.var2_current))))))) {state = 2; return false; }
				current = "Mechanical forced";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var4_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq176_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq177_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				var6_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq180_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq181_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 9; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var7_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq186_seq_(((com.altova.mapforce.IMFNode)(var7_filter.current())), ((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 11; return false; }
				current = "Natural";
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq185_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq185_seq_(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq185_seq_ closure;
			public Enumerator(seq185_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq186_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq186_seq_(com.altova.mapforce.IMFNode var1_cur_Cell, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_cur_Cell = var1_cur_Cell;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq186_seq_ closure;
			public Enumerator(seq186_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_cur_Cell));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq187_seq_ implements IEnumerable
	{
	
		public seq187_seq_()
		{
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq187_seq_ closure;
			public Enumerator(seq187_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				return false;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq188_seq_ implements IEnumerable
	{
		boolean var1_shared;
		boolean var2_shared;
		boolean var3_shared;
	
		public seq188_seq_(boolean var1_shared, boolean var2_shared, boolean var3_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq188_seq_ closure;
			public Enumerator(seq188_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var2_shared;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var1_shared;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				current = closure.var3_shared;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq189_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		java.lang.String var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
		boolean var5_shared;
		boolean var6_shared;
		boolean var7_shared;
		com.altova.mapforce.IMFNode var8_cur_Cell;
	
		public seq189_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, java.lang.String var3_shared, com.altova.mapforce.IEnumerable var4_shared, boolean var5_shared, boolean var6_shared, boolean var7_shared, com.altova.mapforce.IMFNode var8_cur_Cell)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
			this.var6_shared = var6_shared;
			this.var7_shared = var7_shared;
			this.var8_cur_Cell = var8_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq189_join closure;
			public Enumerator(seq189_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box("CoolingPlant1"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				if (!(closure.var5_shared)) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Chiller", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq190_join(closure.var1_current, closure.var2_shared, closure.var4_shared, closure.var8_cur_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 8;				
				if (!(closure.var7_shared)) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("DistrictChilledWater", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq187_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 0;				
				if (!(closure.var6_shared)) {state = 0; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OtherCombination", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(closure.var3_shared));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq190_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
		com.altova.mapforce.IMFNode var4_cur_Cell;
	
		public seq190_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared, com.altova.mapforce.IMFNode var4_cur_Cell)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_cur_Cell = var4_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq190_join closure;
			IEnumerator var5_filter;
			IEnumerator var9_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var10_filter;
			IEnumerator var8_filter;
			public Enumerator(seq190_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var5_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var5_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq191_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq192_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 2; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 11;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var9_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var6_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 4; return false; }
				var7_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var7_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq193_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq194_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 6; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var8_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq195_if_any(((com.altova.mapforce.IMFNode)(var6_filter.current())), ((com.altova.mapforce.IMFNode)(var8_filter.current())), closure.var3_shared))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ChillerType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq201_if_any(((com.altova.mapforce.IMFNode)(var6_filter.current())), ((com.altova.mapforce.IMFNode)(var8_filter.current())), closure.var3_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var9_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq133_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq134_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 11; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq212_map(closure.var1_current, closure.var2_shared, closure.var3_shared))))))) {state = 0; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CondenserPlantID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq223_join(closure.var1_current, closure.var2_shared, closure.var3_shared, closure.var4_cur_Cell)))))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var10_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq203_if_cast(((com.altova.mapforce.IMFNode)(var10_filter.current())), closure.var3_shared))))) {state = 13; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ChillerCompressorType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq211_if_cast(closure.var3_shared, ((com.altova.mapforce.IMFNode)(var10_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq191_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq191_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq191_map closure;
			IEnumerator var2_r;
			public Enumerator(seq191_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(30L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq192_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq192_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq192_map closure;
			IEnumerator var2_r;
			public Enumerator(seq192_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(30L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq193_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq193_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq193_map closure;
			IEnumerator var2_r;
			public Enumerator(seq193_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(31L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq194_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq194_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq194_map closure;
			IEnumerator var2_r;
			public Enumerator(seq194_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(31L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq195_if_any implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq195_if_any(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq195_if_any closure;
			public Enumerator(seq195_if_any closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq196_seq_(closure.var1_current, closure.var2_current))))))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq197_map(closure.var3_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq196_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq196_seq_(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq196_seq_ closure;
			public Enumerator(seq196_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq197_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq197_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq197_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq197_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq198_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq199_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq200_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq198_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq198_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq198_map closure;
			IEnumerator var2_r;
			public Enumerator(seq198_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(32L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq199_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq199_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq199_map closure;
			IEnumerator var2_r;
			public Enumerator(seq199_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(32L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq200_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq200_map(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq200_map closure;
			IEnumerator var2_Cell;
			public Enumerator(seq200_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_Cell = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_Cell.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var2_Cell.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_Cell != null ) { var2_Cell.close(); var2_Cell = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_Cell != null ) { var2_Cell.close(); var2_Cell = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq201_if_any implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq201_if_any(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq201_if_any closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			public Enumerator(seq201_if_any closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq202_seq_(closure.var1_current, closure.var2_current))))))) {state = 2; return false; }
				current = "Absorption";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var4_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq198_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq199_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))) {state = 9; return false; }
				current = "Other";
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 7;				
				current = "Vapor compression";
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq202_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq202_seq_(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq202_seq_ closure;
			public Enumerator(seq202_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq203_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq203_if_cast(com.altova.mapforce.IMFNode var1_cur_Cell, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_cur_Cell = var1_cur_Cell;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq203_if_cast closure;
			public Enumerator(seq203_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_cur_Cell)))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq204_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq204_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq204_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq204_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq204_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq137_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq205_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq205_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq205_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq205_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq205_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))) {state = 4; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 2;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq206_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq206_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq206_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq206_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq206_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq46_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq47_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq207_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq207_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq207_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq207_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq207_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq208_map(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq208_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq208_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq208_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq208_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq209_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq210_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq167_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq209_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq209_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq209_map closure;
			IEnumerator var2_r;
			public Enumerator(seq209_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(37L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq210_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq210_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq210_map closure;
			IEnumerator var2_r;
			public Enumerator(seq210_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(37L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq211_if_cast implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq211_if_cast(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_shared = var1_shared;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq211_if_cast closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			public Enumerator(seq211_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current)))) {state = 2; return false; }
				current = "Reciprocating";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq137_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))) {state = 9; return false; }
				current = "Scroll";
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 12;				
				var5_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var5_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq46_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq47_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 12; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 7;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 14;				
				if (!var6_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 14; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 16; return false; }
				current = "Centrifugal";
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 19;				
				var7_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 21;				
				if (!var7_filter.moveNext()) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq209_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq210_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 19; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 14;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 21;				
				if (!var8_filter.moveNext()) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 21; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_filter.current())))))) {state = 21; return false; }
				current = "Other";
				pos++;
				return true;
			}
			private boolean moveNext_22() throws Exception {
				state = 19;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq212_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq212_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq212_map closure;
			IEnumerator var4_shared;
			public Enumerator(seq212_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var4_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var4_shared.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq213_map(closure.var1_current, ((com.altova.mapforce.IMFNode)(var4_shared.current())), closure.var3_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var4_shared != null ) { var4_shared.close(); var4_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_shared != null ) { var4_shared.close(); var4_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq213_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq213_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq213_map closure;
			IEnumerator var4_filter;
			public Enumerator(seq213_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var2_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var4_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq214_map(closure.var1_current, closure.var3_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq214_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq214_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq214_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq214_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq215_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq216_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq217_map(closure.var1_current, ((com.altova.mapforce.IMFNode)(var3_filter.current())), closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq215_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq215_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq215_map closure;
			IEnumerator var2_r;
			public Enumerator(seq215_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(42L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq216_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq216_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq216_map closure;
			IEnumerator var2_r;
			public Enumerator(seq216_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(42L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq217_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq217_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq217_map closure;
			IEnumerator var4_filter;
			public Enumerator(seq217_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var2_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var4_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq218_map(closure.var1_current, closure.var3_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq218_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq218_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq218_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq218_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq219_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq220_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq221_map(closure.var1_current, ((com.altova.mapforce.IMFNode)(var3_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq219_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq219_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq219_map closure;
			IEnumerator var2_r;
			public Enumerator(seq219_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(43L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq220_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq220_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq220_map closure;
			IEnumerator var2_r;
			public Enumerator(seq220_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(43L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq221_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq221_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq221_map closure;
			IEnumerator var3_filter;
			boolean var4_cast;
			public Enumerator(seq221_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var2_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				var4_cast = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))));
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq222_seq_(closure.var1_current, var4_cast)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq222_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		boolean var2_shared;
	
		public seq222_seq_(com.altova.mapforce.IMFNode var1_current, boolean var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq222_seq_ closure;
			public Enumerator(seq222_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var2_shared;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = closure.var2_shared;
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = closure.var2_shared;
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 0;				
				current = closure.var2_shared;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq223_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
		com.altova.mapforce.IMFNode var4_cur_Cell;
	
		public seq223_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared, com.altova.mapforce.IMFNode var4_cur_Cell)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_cur_Cell = var4_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq223_join closure;
			IEnumerator var5_shared;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			IEnumerator var9_filter;
			IEnumerator var10_filter;
			public Enumerator(seq223_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var5_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var5_shared.moveNext()) {state = 3; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var6_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 4; return false; }
				var7_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var7_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq215_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq216_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 6; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var8_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 8; return false; }
				var9_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var9_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq219_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq220_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 10; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var10_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq224_seq_(closure.var1_current, ((com.altova.mapforce.IMFNode)(var10_filter.current())), ((com.altova.mapforce.IMFNode)(var8_filter.current())), ((com.altova.mapforce.IMFNode)(var6_filter.current())), closure.var4_cur_Cell))))))) {state = 12; return false; }
				current = "CondenserPlant1";
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq224_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_cur_Cell;
		com.altova.mapforce.IMFNode var3_current;
		com.altova.mapforce.IMFNode var4_current;
		com.altova.mapforce.IMFNode var5_cur_Cell;
	
		public seq224_seq_(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_cur_Cell, com.altova.mapforce.IMFNode var3_current, com.altova.mapforce.IMFNode var4_current, com.altova.mapforce.IMFNode var5_cur_Cell)
		{
			this.var1_current = var1_current;
			this.var2_cur_Cell = var2_cur_Cell;
			this.var3_current = var3_current;
			this.var4_current = var4_current;
			this.var5_cur_Cell = var5_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq224_seq_ closure;
			public Enumerator(seq224_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var5_cur_Cell));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var4_current));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var3_current));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_cur_Cell));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq225_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IMFNode var3_cur_Cell;
		com.altova.mapforce.IMFNode var4_cur_Cell;
		com.altova.mapforce.IMFNode var5_cur_Cell;
	
		public seq225_seq_(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IMFNode var3_cur_Cell, com.altova.mapforce.IMFNode var4_cur_Cell, com.altova.mapforce.IMFNode var5_cur_Cell)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
			this.var3_cur_Cell = var3_cur_Cell;
			this.var4_cur_Cell = var4_cur_Cell;
			this.var5_cur_Cell = var5_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq225_seq_ closure;
			public Enumerator(seq225_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var5_cur_Cell));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var4_cur_Cell));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var3_cur_Cell));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq226_join implements IEnumerable
	{
		boolean var1_shared;
		boolean var2_shared;
		boolean var3_shared;
		boolean var4_shared;
		boolean var5_shared;
	
		public seq226_join(boolean var1_shared, boolean var2_shared, boolean var3_shared, boolean var4_shared, boolean var5_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq226_join closure;
			public Enumerator(seq226_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 4;				
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq227_seq_(closure.var1_shared, closure.var2_shared, closure.var3_shared, closure.var4_shared, closure.var5_shared))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box("CondenserPlant1"));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 7;				
				if (!(closure.var1_shared)) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AirCooled", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq228_cond_box(closure.var4_shared, closure.var5_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 10;				
				if (!(closure.var2_shared)) {state = 10; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("WaterCooled", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq187_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if (!(closure.var3_shared)) {state = 0; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("GroundSource", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq187_seq_()));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq227_seq_ implements IEnumerable
	{
		boolean var1_shared;
		boolean var2_shared;
		boolean var3_shared;
		boolean var4_shared;
		boolean var5_shared;
	
		public seq227_seq_(boolean var1_shared, boolean var2_shared, boolean var3_shared, boolean var4_shared, boolean var5_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq227_seq_ closure;
			public Enumerator(seq227_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_shared;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var2_shared;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = closure.var3_shared;
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = closure.var4_shared;
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 0;				
				current = closure.var5_shared;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq228_cond_box implements IEnumerable
	{
		boolean var1_shared;
		boolean var2_shared;
	
		public seq228_cond_box(boolean var1_shared, boolean var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq228_cond_box closure;
			public Enumerator(seq228_cond_box closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq229_seq_(closure.var1_shared, closure.var2_shared))))))) {state = 0; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EvaporativelyCooledCondenser", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq187_seq_()));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq229_seq_ implements IEnumerable
	{
		boolean var1_shared;
		boolean var2_shared;
	
		public seq229_seq_(boolean var1_shared, boolean var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq229_seq_ closure;
			public Enumerator(seq229_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_shared;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = closure.var2_shared;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq230_if_cast implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq230_if_cast(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_shared = var1_shared;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq230_if_cast closure;
			public Enumerator(seq230_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current)))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq231_map(closure.var1_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq231_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq231_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq231_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq231_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq56_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq57_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq232_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq232_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq232_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq232_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq232_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))) {state = 4; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 2;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq233_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq233_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq233_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq233_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq233_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq58_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq59_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq234_map(closure.var1_shared, ((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq234_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IMFNode var2_cur_Cell;
	
		public seq234_map(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IMFNode var2_cur_Cell)
		{
			this.var1_shared = var1_shared;
			this.var2_cur_Cell = var2_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq234_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq234_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var2_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq235_map(closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq235_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq235_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq235_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq235_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq236_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq237_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq238_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq236_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq236_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq236_map closure;
			IEnumerator var2_r;
			public Enumerator(seq236_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(16L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq237_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq237_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq237_map closure;
			IEnumerator var2_r;
			public Enumerator(seq237_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(16L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq238_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq238_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq238_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq238_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq239_map(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq239_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq239_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq239_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq239_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq30_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq31_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq200_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq240_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq240_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq240_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq240_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq241_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq19_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq241_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq241_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq241_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq241_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq18_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq242_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
		boolean var4_shared;
	
		public seq242_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared, boolean var4_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq242_join closure;
			IEnumerator var5_shared;
			IEnumerator var6_filter;
			IEnumerator var7_shared;
			IEnumerator var8_filter;
			public Enumerator(seq242_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("HeatingSource", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq243_join(closure.var2_shared, closure.var3_shared, closure.var4_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var5_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var5_shared.moveNext()) {state = 4; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 8;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				var7_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var6_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq279_if_cast(closure.var3_shared, ((com.altova.mapforce.IMFNode)(var6_filter.current()))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CoolingSource", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq287_join(((com.altova.mapforce.IMFNode)(var6_filter.current())), closure.var2_shared, closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var7_shared.moveNext()) {state = 9; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 0;				
				if( var7_shared != null ) { var7_shared.close(); var7_shared = null; }
				if (!(closure.var4_shared)) {state = 0; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Delivery", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq333_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 10;				
				if (!var8_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 10; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_filter.current())))))) {state = 10; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Delivery", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq332_join(((com.altova.mapforce.IMFNode)(var8_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_shared != null ) { var7_shared.close(); var7_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq243_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		boolean var3_shared;
	
		public seq243_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, boolean var3_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq243_join closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var18_filter;
			IEnumerator var6_filter;
			IEnumerator var19_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			IEnumerator var9_filter;
			IEnumerator var10_filter;
			IEnumerator var11_filter;
			IEnumerator var12_filter;
			IEnumerator var13_filter;
			IEnumerator var14_filter;
			IEnumerator var15_filter;
			java.lang.String var16_cast;
			java.lang.String var17_cast;
			public Enumerator(seq243_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var4_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq244_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq245_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 27;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("HeatingMedium", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq254_if_shared(closure.var2_shared, closure.var3_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 4; return false; }
				var6_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq246_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq247_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var7_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 8; return false; }
				var8_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var8_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq248_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq249_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 10; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var8_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var9_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 12; return false; }
				var10_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 16;				
				if (!var10_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq154_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq155_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 14; return false; }
				var11_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var10_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var11_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 16; return false; }
				var12_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 14;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var12_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq156_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq157_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 18; return false; }
				var13_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var12_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 22;				
				if (!var13_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 20; return false; }
				var14_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 24;				
				if (!var14_filter.moveNext()) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq250_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq251_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 22; return false; }
				var15_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var14_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 20;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 24;				
				if (!var15_filter.moveNext()) {state = 25; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 24; return false; }
				var16_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var15_filter.current())));
				var17_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("HeatingSourceType", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq252_join(((com.altova.mapforce.IMFNode)(var11_filter.current())), var16_cast, var17_cast, ((com.altova.mapforce.IMFNode)(var9_filter.current())), ((com.altova.mapforce.IMFNode)(var7_filter.current())), ((com.altova.mapforce.IMFNode)(var13_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_25() throws Exception {
				state = 22;				
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 28;				
				var18_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_28() throws Exception {
				state = 30;				
				if (!var18_filter.moveNext()) {state = 29; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq255_map(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))))) {state = 28; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq256_map(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))))) {state = 28; return false; }
				var19_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var18_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_29() throws Exception {
				state = 0;				
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				return false;
			}
			private boolean moveNext_30() throws Exception {
				state = 30;				
				if (!var19_filter.moveNext()) {state = 31; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))))) {state = 30; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq257_if_cast(((com.altova.mapforce.IMFNode)(var19_filter.current())), closure.var1_shared, closure.var2_shared))))) {state = 30; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PrimaryFuel", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq276_if_cast(((com.altova.mapforce.IMFNode)(var19_filter.current())), closure.var1_shared, closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_31() throws Exception {
				state = 28;				
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq244_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq244_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq244_map closure;
			IEnumerator var2_r;
			public Enumerator(seq244_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(45L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq245_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq245_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq245_map closure;
			IEnumerator var2_r;
			public Enumerator(seq245_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(45L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq246_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq246_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq246_map closure;
			IEnumerator var2_r;
			public Enumerator(seq246_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(46L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq247_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq247_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq247_map closure;
			IEnumerator var2_r;
			public Enumerator(seq247_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(46L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq248_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq248_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq248_map closure;
			IEnumerator var2_r;
			public Enumerator(seq248_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(47L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq249_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq249_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq249_map closure;
			IEnumerator var2_r;
			public Enumerator(seq249_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(47L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq250_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq250_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq250_map closure;
			IEnumerator var2_r;
			public Enumerator(seq250_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(50L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq251_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq251_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq251_map closure;
			IEnumerator var2_r;
			public Enumerator(seq251_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(50L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq252_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		java.lang.String var2_shared;
		java.lang.String var3_shared;
		com.altova.mapforce.IMFNode var4_current;
		com.altova.mapforce.IMFNode var5_current;
		com.altova.mapforce.IMFNode var6_cur_Cell;
	
		public seq252_join(com.altova.mapforce.IMFNode var1_current, java.lang.String var2_shared, java.lang.String var3_shared, com.altova.mapforce.IMFNode var4_current, com.altova.mapforce.IMFNode var5_current, com.altova.mapforce.IMFNode var6_cur_Cell)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_current = var4_current;
			this.var5_current = var5_current;
			this.var6_cur_Cell = var6_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq252_join closure;
			public Enumerator(seq252_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 4;				
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq253_seq_(closure.var1_current, closure.var6_cur_Cell))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("SourceHeatingPlantID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("HeatiingPlant1"))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 7;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var5_current)))) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Furnace", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FurnaceType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Warm air"))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 10;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var4_current)))) {state = 10; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("HeatPump", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq187_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 13;				
				if (!(com.altova.CoreTypes.parseBoolean(closure.var2_shared))) {state = 13; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OtherCombination", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(closure.var2_shared));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(closure.var3_shared))) {state = 0; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("NoHeating", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(closure.var3_shared));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq253_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_cur_Cell;
	
		public seq253_seq_(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_cur_Cell)
		{
			this.var1_current = var1_current;
			this.var2_cur_Cell = var2_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq253_seq_ closure;
			public Enumerator(seq253_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_cur_Cell));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq254_if_shared implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		boolean var2_shared;
	
		public seq254_if_shared(com.altova.mapforce.IEnumerable var1_shared, boolean var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq254_if_shared closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			IEnumerator var9_filter;
			IEnumerator var10_filter;
			public Enumerator(seq254_if_shared closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(closure.var2_shared)) {state = 2; return false; }
				current = "Air";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq56_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq57_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))) {state = 9; return false; }
				current = "Hot water";
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 12;				
				var5_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var5_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq58_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq59_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 12; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 7;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 14;				
				if (!var6_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 14; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 16; return false; }
				current = "Steam";
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 19;				
				var7_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 21;				
				if (!var7_filter.moveNext()) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq236_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq237_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 19; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 14;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 23;				
				if (!var8_filter.moveNext()) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 21; return false; }
				var9_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 19;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if (!var9_filter.moveNext()) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq30_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq31_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 23; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 21;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 25;				
				if (!var10_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 25; return false; }
				current = "Other";
				pos++;
				return true;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq255_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq255_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq255_map closure;
			IEnumerator var2_r;
			public Enumerator(seq255_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(58L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq256_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq256_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq256_map closure;
			IEnumerator var2_r;
			public Enumerator(seq256_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(58L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq257_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq257_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq257_if_cast closure;
			public Enumerator(seq257_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq258_map(closure.var2_shared, closure.var3_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq258_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq258_map(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq258_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq258_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq259_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq260_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq261_map(((com.altova.mapforce.IMFNode)(var3_filter.current())), closure.var1_shared, closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq259_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq259_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq259_map closure;
			IEnumerator var2_r;
			public Enumerator(seq259_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(59L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq260_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq260_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq260_map closure;
			IEnumerator var2_r;
			public Enumerator(seq260_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(59L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq261_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq261_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq261_map closure;
			IEnumerator var4_filter;
			public Enumerator(seq261_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var4_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))) {state = 4; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 2;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq262_map(closure.var2_shared, closure.var3_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq262_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq262_map(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq262_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq262_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq263_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq264_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq265_map(((com.altova.mapforce.IMFNode)(var3_filter.current())), closure.var1_shared, closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq263_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq263_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq263_map closure;
			IEnumerator var2_r;
			public Enumerator(seq263_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(60L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq264_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq264_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq264_map closure;
			IEnumerator var2_r;
			public Enumerator(seq264_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(60L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq265_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq265_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq265_map closure;
			IEnumerator var4_filter;
			public Enumerator(seq265_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var4_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq266_map(closure.var2_shared, closure.var3_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq266_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq266_map(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq266_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq266_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq267_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq268_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq269_map(((com.altova.mapforce.IMFNode)(var3_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq267_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq267_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq267_map closure;
			IEnumerator var2_r;
			public Enumerator(seq267_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(61L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq268_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq268_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq268_map closure;
			IEnumerator var2_r;
			public Enumerator(seq268_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(61L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq269_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq269_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq269_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq269_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))) {state = 4; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq270_map(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq270_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq270_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq270_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq270_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq271_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq272_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq271_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq271_map(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq271_map closure;
			IEnumerator var2_Name;
			public Enumerator(seq271_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_Name = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_n)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_Name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_Name.current()))), "L2 - HVAC");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq272_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq272_map(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq272_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq272_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq273_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq274_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq275_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq273_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq273_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq273_map closure;
			IEnumerator var2_r;
			public Enumerator(seq273_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(26L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq274_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq274_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq274_map closure;
			IEnumerator var2_r;
			public Enumerator(seq274_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(26L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq275_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq275_map(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq275_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq275_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq123_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.exists(com.mapforce.vmf.vmf12_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq276_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq276_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq276_if_cast closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			IEnumerator var11_filter;
			IEnumerator var9_filter;
			IEnumerator var12_filter;
			IEnumerator var10_filter;
			IEnumerator var13_filter;
			IEnumerator var14_filter;
			IEnumerator var15_filter;
			public Enumerator(seq276_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 32:	if (moveNext_32()) return true; break;
					case 33:	if (moveNext_33()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
					case 35:	if (moveNext_35()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = "Electricity";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var4_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq259_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq260_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))) {state = 9; return false; }
				current = "Natural gas";
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 12;				
				var6_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var6_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq263_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq264_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 12; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 7;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 17;				
				if (!var7_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 14; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var7_filter.current())))))) {state = 16; return false; }
				var8_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 25;				
				var11_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 19;				
				if (!var8_filter.moveNext()) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq271_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 17; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var8_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 14;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 21;				
				if (!var9_filter.moveNext()) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq277_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq278_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 19; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 17;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 21;				
				if (!var10_filter.moveNext()) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq123_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 21; return false; }
				current = com.mapforce.vmf.vmf11_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var10_filter.current()))));
				pos++;
				return true;
			}
			private boolean moveNext_22() throws Exception {
				state = 19;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 27;				
				if (!var11_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq267_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 25; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq268_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 25; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 14;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 30;				
				if (!var12_filter.moveNext()) {state = 28; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 27; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var12_filter.current())))))) {state = 29; return false; }
				var13_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_28() throws Exception {
				state = 25;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_29() throws Exception {
				state = 27;				
				current = "Unknown";
				pos++;
				return true;
			}
			private boolean moveNext_30() throws Exception {
				state = 32;				
				if (!var13_filter.moveNext()) {state = 31; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq271_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 30; return false; }
				var14_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var13_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_31() throws Exception {
				state = 27;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_32() throws Exception {
				state = 34;				
				if (!var14_filter.moveNext()) {state = 33; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq273_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 32; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq274_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 32; return false; }
				var15_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var14_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_33() throws Exception {
				state = 30;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}
			private boolean moveNext_34() throws Exception {
				state = 34;				
				if (!var15_filter.moveNext()) {state = 35; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq123_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 34; return false; }
				if (!(com.altova.functions.Core.exists(com.mapforce.vmf.vmf12_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))) {state = 34; return false; }
				current = (java.lang.String)com.altova.functions.Core.first(com.mapforce.vmf.vmf12_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var15_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_35() throws Exception {
				state = 32;				
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq277_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq277_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq277_map closure;
			IEnumerator var2_r;
			public Enumerator(seq277_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(25L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq278_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq278_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq278_map closure;
			IEnumerator var2_r;
			public Enumerator(seq278_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(25L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq279_if_cast implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq279_if_cast(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_shared = var1_shared;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq279_if_cast closure;
			public Enumerator(seq279_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current)))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq280_map(closure.var1_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq280_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq280_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq280_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq280_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq11_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq12_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq281_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq281_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq281_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq281_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq281_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))) {state = 4; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 2;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq282_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq282_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq282_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq282_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq282_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq13_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq14_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq283_map(closure.var1_shared, ((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq283_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IMFNode var2_cur_Cell;
	
		public seq283_map(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IMFNode var2_cur_Cell)
		{
			this.var1_shared = var1_shared;
			this.var2_cur_Cell = var2_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq283_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq283_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var2_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq284_map(closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq284_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq284_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq284_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq284_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq15_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq16_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq285_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq285_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq285_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq285_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq285_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq286_map(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq286_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq286_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq286_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq286_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq84_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq85_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq200_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq287_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq287_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq287_join closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var18_filter;
			IEnumerator var6_filter;
			IEnumerator var19_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			IEnumerator var9_filter;
			IEnumerator var10_filter;
			IEnumerator var11_filter;
			IEnumerator var12_filter;
			IEnumerator var13_filter;
			IEnumerator var14_filter;
			IEnumerator var15_filter;
			java.lang.String var16_cast;
			java.lang.String var17_cast;
			public Enumerator(seq287_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var4_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq26_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq27_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 27;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CoolingMedium", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq314_if_cast(closure.var1_current, closure.var3_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 4; return false; }
				var6_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq34_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq35_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var7_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 8; return false; }
				var8_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var8_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq53_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq54_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 10; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var8_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var9_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 12; return false; }
				var10_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 16;				
				if (!var10_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq143_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq144_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 14; return false; }
				var11_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var10_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var11_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 16; return false; }
				var12_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 14;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var12_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq72_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq73_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 18; return false; }
				var13_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var12_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 22;				
				if (!var13_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 20; return false; }
				var14_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 24;				
				if (!var14_filter.moveNext()) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq74_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq75_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 22; return false; }
				var15_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var14_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 20;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 24;				
				if (!var15_filter.moveNext()) {state = 25; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq288_seq_(((com.altova.mapforce.IMFNode)(var5_filter.current())), ((com.altova.mapforce.IMFNode)(var15_filter.current())), ((com.altova.mapforce.IMFNode)(var7_filter.current())), ((com.altova.mapforce.IMFNode)(var11_filter.current())), ((com.altova.mapforce.IMFNode)(var13_filter.current())), ((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 24; return false; }
				var16_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var15_filter.current())));
				var17_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CoolingSourceType", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq289_join(((com.altova.mapforce.IMFNode)(var7_filter.current())), ((com.altova.mapforce.IMFNode)(var11_filter.current())), var16_cast, var17_cast, ((com.altova.mapforce.IMFNode)(var13_filter.current())), closure.var3_shared, ((com.altova.mapforce.IMFNode)(var9_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_25() throws Exception {
				state = 22;				
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 28;				
				var18_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_28() throws Exception {
				state = 30;				
				if (!var18_filter.moveNext()) {state = 29; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq273_map(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))))) {state = 28; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq274_map(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))))) {state = 28; return false; }
				var19_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var18_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_29() throws Exception {
				state = 0;				
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				return false;
			}
			private boolean moveNext_30() throws Exception {
				state = 30;				
				if (!var19_filter.moveNext()) {state = 31; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))))) {state = 30; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq315_if_cast(((com.altova.mapforce.IMFNode)(var19_filter.current())), closure.var2_shared, closure.var3_shared))))) {state = 30; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PrimaryFuel", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq331_if_cast(((com.altova.mapforce.IMFNode)(var19_filter.current())), closure.var2_shared, closure.var3_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_31() throws Exception {
				state = 28;				
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq288_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_cur_Cell;
		com.altova.mapforce.IMFNode var3_current;
		com.altova.mapforce.IMFNode var4_current;
		com.altova.mapforce.IMFNode var5_cur_Cell;
		com.altova.mapforce.IMFNode var6_cur_Cell;
	
		public seq288_seq_(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_cur_Cell, com.altova.mapforce.IMFNode var3_current, com.altova.mapforce.IMFNode var4_current, com.altova.mapforce.IMFNode var5_cur_Cell, com.altova.mapforce.IMFNode var6_cur_Cell)
		{
			this.var1_current = var1_current;
			this.var2_cur_Cell = var2_cur_Cell;
			this.var3_current = var3_current;
			this.var4_current = var4_current;
			this.var5_cur_Cell = var5_cur_Cell;
			this.var6_cur_Cell = var6_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq288_seq_ closure;
			public Enumerator(seq288_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var3_current));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var6_cur_Cell));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var4_current));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var5_cur_Cell));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_cur_Cell));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq289_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
		java.lang.String var3_shared;
		java.lang.String var4_shared;
		com.altova.mapforce.IMFNode var5_cur_Cell;
		com.altova.mapforce.IEnumerable var6_shared;
		com.altova.mapforce.IMFNode var7_cur_Cell;
	
		public seq289_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current, java.lang.String var3_shared, java.lang.String var4_shared, com.altova.mapforce.IMFNode var5_cur_Cell, com.altova.mapforce.IEnumerable var6_shared, com.altova.mapforce.IMFNode var7_cur_Cell)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_cur_Cell = var5_cur_Cell;
			this.var6_shared = var6_shared;
			this.var7_cur_Cell = var7_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq289_join closure;
			com.altova.mapforce.IEnumerable var8_filter;
			public Enumerator(seq289_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 4;				
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq290_seq_(closure.var2_current, closure.var5_cur_Cell, closure.var7_cur_Cell))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CoolingPlantID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("CoolingPlant1"))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 7;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 7; return false; }
				var8_filter = new com.altova.functions.Core.SequenceCache((new seq291_filter(closure.var6_shared)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("DX", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq293_join(var8_filter, closure.var6_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 10;				
				if (!(com.altova.CoreTypes.parseBoolean(closure.var3_shared))) {state = 10; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OtherCombination", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(closure.var3_shared));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(closure.var4_shared))) {state = 0; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("NoCooling", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(closure.var4_shared));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq290_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_cur_Cell;
		com.altova.mapforce.IMFNode var3_cur_Cell;
	
		public seq290_seq_(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_cur_Cell, com.altova.mapforce.IMFNode var3_cur_Cell)
		{
			this.var1_current = var1_current;
			this.var2_cur_Cell = var2_cur_Cell;
			this.var3_cur_Cell = var3_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq290_seq_ closure;
			public Enumerator(seq290_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var3_cur_Cell));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_cur_Cell));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq291_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq291_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq291_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq291_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq292_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq146_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq292_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq292_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq292_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq292_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq145_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq293_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq293_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq293_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq293_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq133_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq134_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq301_map(closure.var1_shared, closure.var2_shared))))))) {state = 0; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CondenserPlantID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq312_join(closure.var1_shared, closure.var2_shared)))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq294_if_cast(((com.altova.mapforce.IMFNode)(var4_filter.current())), closure.var2_shared))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CompressorType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq300_if_cast(closure.var2_shared, ((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq294_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq294_if_cast(com.altova.mapforce.IMFNode var1_cur_Cell, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_cur_Cell = var1_cur_Cell;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq294_if_cast closure;
			public Enumerator(seq294_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_cur_Cell)))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq295_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq295_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq295_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq295_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq295_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq137_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq296_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq296_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq296_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq296_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq296_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))) {state = 4; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 2;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq297_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq297_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq297_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq297_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq297_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq46_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq47_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq298_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq298_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq298_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq298_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq298_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq299_map(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq299_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq299_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq299_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq299_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq209_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq210_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq167_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq300_if_cast implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq300_if_cast(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_shared = var1_shared;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq300_if_cast closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			public Enumerator(seq300_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current)))) {state = 2; return false; }
				current = "Reciprocating";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq137_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))) {state = 9; return false; }
				current = "Scroll";
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 12;				
				var5_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var5_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq46_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq47_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 12; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 7;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 14;				
				if (!var6_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 14; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 16; return false; }
				current = "Centrifugal";
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 19;				
				var7_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 21;				
				if (!var7_filter.moveNext()) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq209_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq210_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 19; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 14;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 21;				
				if (!var8_filter.moveNext()) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 21; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_filter.current())))))) {state = 21; return false; }
				current = "Other";
				pos++;
				return true;
			}
			private boolean moveNext_22() throws Exception {
				state = 19;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq301_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq301_map(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq301_map closure;
			IEnumerator var3_shared;
			public Enumerator(seq301_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq302_map(((com.altova.mapforce.IMFNode)(var3_shared.current())), closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq302_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq302_map(com.altova.mapforce.IMFNode var1_cur_Cell, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_cur_Cell = var1_cur_Cell;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq302_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq302_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq303_map(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq303_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq303_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq303_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq303_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq147_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq148_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq304_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq304_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq304_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq304_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq304_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq305_map(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq305_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq305_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq305_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq305_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq151_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq152_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq306_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq306_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq306_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq306_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq306_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq307_map(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq307_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq307_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq307_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq307_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq215_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq216_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq308_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq308_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq308_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq308_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq308_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq309_map(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq309_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq309_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq309_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq309_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq219_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq220_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq310_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq310_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq310_map(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq310_map closure;
			IEnumerator var2_filter;
			boolean var3_cast;
			public Enumerator(seq310_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_cast = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq311_seq_(var3_cast)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq311_seq_ implements IEnumerable
	{
		boolean var1_shared;
	
		public seq311_seq_(boolean var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq311_seq_ closure;
			public Enumerator(seq311_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_shared;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var1_shared;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = closure.var1_shared;
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = closure.var1_shared;
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 0;				
				current = closure.var1_shared;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq312_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq312_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq312_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			IEnumerator var9_filter;
			IEnumerator var10_filter;
			IEnumerator var11_filter;
			IEnumerator var12_filter;
			public Enumerator(seq312_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq147_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq148_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var6_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 8; return false; }
				var7_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var7_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq151_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq152_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 10; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var8_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 12; return false; }
				var9_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 16;				
				if (!var9_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq215_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq216_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 14; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var10_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 16; return false; }
				var11_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 14;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var11_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq219_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq220_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 18; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 20;				
				if (!var12_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq313_seq_(((com.altova.mapforce.IMFNode)(var12_filter.current())), ((com.altova.mapforce.IMFNode)(var10_filter.current())), ((com.altova.mapforce.IMFNode)(var8_filter.current())), ((com.altova.mapforce.IMFNode)(var6_filter.current())), ((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 20; return false; }
				current = "CondenserPlant1";
				pos++;
				return true;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq313_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IMFNode var3_current;
		com.altova.mapforce.IMFNode var4_cur_Cell;
		com.altova.mapforce.IMFNode var5_cur_Cell;
	
		public seq313_seq_(com.altova.mapforce.IMFNode var1_cur_Cell, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IMFNode var3_current, com.altova.mapforce.IMFNode var4_cur_Cell, com.altova.mapforce.IMFNode var5_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
			this.var2_current = var2_current;
			this.var3_current = var3_current;
			this.var4_cur_Cell = var4_cur_Cell;
			this.var5_cur_Cell = var5_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq313_seq_ closure;
			public Enumerator(seq313_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var5_cur_Cell));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var4_cur_Cell));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var3_current));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_cur_Cell));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq314_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq314_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq314_if_cast closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			IEnumerator var9_filter;
			IEnumerator var10_filter;
			public Enumerator(seq314_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = "Air";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq11_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq12_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))) {state = 9; return false; }
				current = "Chilled water";
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 12;				
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var5_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq13_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq14_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 12; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 7;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 14;				
				if (!var6_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 14; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 16; return false; }
				current = "Refrigerant";
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 19;				
				var7_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 21;				
				if (!var7_filter.moveNext()) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq15_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq16_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 19; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 14;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 23;				
				if (!var8_filter.moveNext()) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 21; return false; }
				var9_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 19;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if (!var9_filter.moveNext()) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq84_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq85_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 23; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 21;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 25;				
				if (!var10_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 25; return false; }
				current = "Other";
				pos++;
				return true;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq315_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq315_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq315_if_cast closure;
			public Enumerator(seq315_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq316_map(closure.var2_shared, closure.var3_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq316_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq316_map(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq316_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq316_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq317_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq318_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq319_map(((com.altova.mapforce.IMFNode)(var3_filter.current())), closure.var1_shared, closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq317_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq317_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq317_map closure;
			IEnumerator var2_r;
			public Enumerator(seq317_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(27L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq318_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq318_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq318_map closure;
			IEnumerator var2_r;
			public Enumerator(seq318_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(27L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq319_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq319_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq319_map closure;
			IEnumerator var4_filter;
			public Enumerator(seq319_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var4_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))) {state = 4; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 2;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq320_map(closure.var2_shared, closure.var3_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq320_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq320_map(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq320_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq320_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq321_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq322_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq323_map(((com.altova.mapforce.IMFNode)(var3_filter.current())), closure.var1_shared, closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq321_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq321_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq321_map closure;
			IEnumerator var2_r;
			public Enumerator(seq321_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(28L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq322_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq322_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq322_map closure;
			IEnumerator var2_r;
			public Enumerator(seq322_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(28L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq323_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq323_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq323_map closure;
			IEnumerator var4_filter;
			public Enumerator(seq323_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var4_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq324_map(closure.var2_shared, closure.var3_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq324_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq324_map(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq324_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq324_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq325_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq326_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq327_map(((com.altova.mapforce.IMFNode)(var3_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq325_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq325_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq325_map closure;
			IEnumerator var2_r;
			public Enumerator(seq325_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(29L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq326_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq326_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq326_map closure;
			IEnumerator var2_r;
			public Enumerator(seq326_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(29L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq327_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq327_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq327_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq327_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))) {state = 4; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq328_map(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq328_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq328_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq328_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq328_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq271_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq329_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq329_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq329_map(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq329_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq329_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq41_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq42_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq330_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq330_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq330_map(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq330_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq330_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq123_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.exists(com.mapforce.vmf.vmf14_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq331_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq331_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq331_if_cast closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			IEnumerator var11_filter;
			IEnumerator var9_filter;
			IEnumerator var12_filter;
			IEnumerator var10_filter;
			IEnumerator var13_filter;
			IEnumerator var14_filter;
			IEnumerator var15_filter;
			public Enumerator(seq331_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 32:	if (moveNext_32()) return true; break;
					case 33:	if (moveNext_33()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
					case 35:	if (moveNext_35()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = "Electricity";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var4_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq317_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq318_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))) {state = 9; return false; }
				current = "Natural gas";
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 12;				
				var6_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var6_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq321_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq322_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 12; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 7;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 17;				
				if (!var7_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 14; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var7_filter.current())))))) {state = 16; return false; }
				var8_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 25;				
				var11_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 19;				
				if (!var8_filter.moveNext()) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq271_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 17; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var8_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 14;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 21;				
				if (!var9_filter.moveNext()) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq30_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq31_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 19; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 17;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 21;				
				if (!var10_filter.moveNext()) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq123_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 21; return false; }
				current = com.mapforce.vmf.vmf13_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var10_filter.current()))));
				pos++;
				return true;
			}
			private boolean moveNext_22() throws Exception {
				state = 19;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 27;				
				if (!var11_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq325_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 25; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq326_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 25; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 14;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 30;				
				if (!var12_filter.moveNext()) {state = 28; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 27; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var12_filter.current())))))) {state = 29; return false; }
				var13_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_28() throws Exception {
				state = 25;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_29() throws Exception {
				state = 27;				
				current = "Unknown";
				pos++;
				return true;
			}
			private boolean moveNext_30() throws Exception {
				state = 32;				
				if (!var13_filter.moveNext()) {state = 31; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq271_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 30; return false; }
				var14_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var13_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_31() throws Exception {
				state = 27;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_32() throws Exception {
				state = 34;				
				if (!var14_filter.moveNext()) {state = 33; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq41_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 32; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq42_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 32; return false; }
				var15_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var14_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_33() throws Exception {
				state = 30;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}
			private boolean moveNext_34() throws Exception {
				state = 34;				
				if (!var15_filter.moveNext()) {state = 35; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq123_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 34; return false; }
				if (!(com.altova.functions.Core.exists(com.mapforce.vmf.vmf14_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))) {state = 34; return false; }
				current = (java.lang.String)com.altova.functions.Core.first(com.mapforce.vmf.vmf14_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var15_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_35() throws Exception {
				state = 32;				
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq332_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq332_join(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq332_join closure;
			public Enumerator(seq332_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 4;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 4; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box("AHU1"));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("DeliveryType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FanBased", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FanBasedDistributionType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CentralAirDistribution", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AirDeliveryType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Central fan"))))))))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq333_seq_ implements IEnumerable
	{
	
		public seq333_seq_()
		{
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq333_seq_ closure;
			public Enumerator(seq333_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box("AHU2"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("DeliveryType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FanBased", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FanBasedDistributionType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CentralAirDistribution", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AirDeliveryType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Central fan"))))))))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq334_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq334_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq334_map closure;
			IEnumerator var2_r;
			public Enumerator(seq334_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(2L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq335_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq335_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq335_map closure;
			IEnumerator var2_r;
			public Enumerator(seq335_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(2L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq336_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq336_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq336_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq336_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq337_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq337_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq337_map(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq337_map closure;
			IEnumerator var2_Name;
			public Enumerator(seq337_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_Name = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_n)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_Name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_Name.current()))), "L2 HVAC, Process, Plug Inventor");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq338_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq338_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq338_join closure;
			IEnumerator var2_shared;
			com.altova.mapforce.IEnumerable var3_Row;
			IEnumerator var4_filter;
			IEnumerator var8_shared;
			com.altova.mapforce.IEnumerable var9_Row;
			com.altova.mapforce.IEnumerable var5_Cell;
			IEnumerator var10_filter;
			IEnumerator var14_shared;
			IEnumerator var6_filter;
			com.altova.mapforce.IEnumerable var15_Row;
			com.altova.mapforce.IEnumerable var11_Cell;
			IEnumerator var16_filter;
			IEnumerator var20_shared;
			IEnumerator var12_filter;
			com.altova.mapforce.IEnumerable var7_filter;
			com.altova.mapforce.IEnumerable var21_Row;
			com.altova.mapforce.IEnumerable var17_Cell;
			IEnumerator var22_filter;
			IEnumerator var18_filter;
			com.altova.mapforce.IEnumerable var13_filter;
			com.altova.mapforce.IEnumerable var23_Cell;
			IEnumerator var24_filter;
			com.altova.mapforce.IEnumerable var19_filter;
			com.altova.mapforce.IEnumerable var25_filter;
			public Enumerator(seq338_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				var3_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_shared.current()))));
				var4_filter = (var3_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 9;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				var8_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current()))));
				var6_filter = (var5_Cell).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				if (!(com.altova.functions.Core.equal("Humidifier", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 6; return false; }
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq339_filter(var3_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OtherHVACSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq341_join(var7_filter, var5_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var8_shared.moveNext()) {state = 10; return false; }
				var9_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var8_shared.current()))));
				var10_filter = (var9_Row).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 16;				
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				var14_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var10_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 11; return false; }
				var11_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var10_filter.current()))));
				var12_filter = (var11_Cell).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var12_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 13; return false; }
				if (!(com.altova.functions.Core.equal("Dehumidifier", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var12_filter.current())))))) {state = 13; return false; }
				var13_filter = new com.altova.functions.Core.SequenceCache((new seq339_filter(var9_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OtherHVACSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq353_join(var13_filter, var11_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var14_shared.moveNext()) {state = 17; return false; }
				var15_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var14_shared.current()))));
				var16_filter = (var15_Row).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 23;				
				if( var14_shared != null ) { var14_shared.close(); var14_shared = null; }
				var20_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var16_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 18; return false; }
				var17_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var16_filter.current()))));
				var18_filter = (var17_Cell).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 20;				
				if (!var18_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))))) {state = 20; return false; }
				if (!(com.altova.functions.Core.equal("Mechanical Ventilation", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var18_filter.current())))))) {state = 20; return false; }
				var19_filter = new com.altova.functions.Core.SequenceCache((new seq339_filter(var15_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OtherHVACSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq356_join(var19_filter, var17_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if (!var20_shared.moveNext()) {state = 24; return false; }
				var21_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var20_shared.current()))));
				var22_filter = (var21_Row).enumerator();
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 0;				
				if( var20_shared != null ) { var20_shared.close(); var20_shared = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 27;				
				if (!var22_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))))) {state = 25; return false; }
				var23_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var22_filter.current()))));
				var24_filter = (var23_Cell).enumerator();
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 27;				
				if (!var24_filter.moveNext()) {state = 28; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var24_filter.current()))))))))) {state = 27; return false; }
				if (!(com.altova.functions.Core.equal("Spot Exhaust", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var24_filter.current())))))) {state = 27; return false; }
				var25_filter = new com.altova.functions.Core.SequenceCache((new seq339_filter(var21_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OtherHVACSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq357_join(var25_filter, var23_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_28() throws Exception {
				state = 25;				
				if( var24_filter != null ) { var24_filter.close(); var24_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				if( var14_shared != null ) { var14_shared.close(); var14_shared = null; }
				if( var24_filter != null ) { var24_filter.close(); var24_filter = null; }
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				if( var20_shared != null ) { var20_shared.close(); var20_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq339_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq339_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq339_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq339_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq340_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq44_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq340_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq340_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq340_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq340_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq43_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq341_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq341_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq341_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq341_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("Humidifier", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OtherHVACType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Humidifier", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq343_join(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				var4_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var5_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 9; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq346_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				var6_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var6_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 13; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq342_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq342_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq342_map closure;
			IEnumerator var2_n;
			public Enumerator(seq342_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(1L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq343_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq343_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq343_join closure;
			IEnumerator var2_filter;
			IEnumerator var3_filter;
			public Enumerator(seq343_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq123_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Capacity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq344_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CapacityUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq344_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq344_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq344_map closure;
			IEnumerator var2_n;
			public Enumerator(seq344_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(8L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq345_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq345_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq345_map closure;
			IEnumerator var2_n;
			public Enumerator(seq345_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(10L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq346_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq346_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq346_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			public Enumerator(seq346_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq347_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var3_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq348_join(closure.var1_shared, ((com.altova.mapforce.IMFNode)(var3_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq349_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq350_join(closure.var1_shared, ((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var5_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq351_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 9; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq352_join(closure.var1_shared, ((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq347_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq347_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq347_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			public Enumerator(seq347_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 7;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 0;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq348_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq348_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_shared = var1_shared;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq348_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			public Enumerator(seq348_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var2_current)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq349_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq349_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq349_map closure;
			IEnumerator var2_n;
			public Enumerator(seq349_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(9L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq350_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq350_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_shared = var1_shared;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq350_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			public Enumerator(seq350_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var2_current)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq349_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq351_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq351_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq351_map closure;
			IEnumerator var2_n;
			public Enumerator(seq351_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(11L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq352_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq352_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_shared = var1_shared;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq352_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			public Enumerator(seq352_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var2_current)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq351_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq353_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq353_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq353_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq353_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("Dehumidifier", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OtherHVACType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Dehumidifier", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq343_join(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				var4_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var5_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 9; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq354_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				var6_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var6_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 13; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq354_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq354_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq354_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_shared;
			IEnumerator var6_filter;
			public Enumerator(seq354_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq347_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var3_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq348_join(closure.var1_shared, ((com.altova.mapforce.IMFNode)(var3_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq349_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq350_join(closure.var1_shared, ((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var5_shared.moveNext()) {state = 10; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq351_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq355_join(closure.var2_shared, ((com.altova.mapforce.IMFNode)(var6_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq355_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq355_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_shared = var1_shared;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq355_join closure;
			IEnumerator var3_filter;
			public Enumerator(seq355_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var2_current)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var3_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq351_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq356_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq356_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq356_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq356_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("MechanicalVentilation", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OtherHVACType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MechanicalVentilation", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq343_join(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				var4_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var5_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 9; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq346_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				var6_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var6_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 13; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq357_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq357_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq357_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq357_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("SpotExhaust", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OtherHVACType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("SpotExhaust", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq343_join(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				var4_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var5_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 9; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq346_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				var6_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var6_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 13; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq358_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq358_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq358_join closure;
			IEnumerator var2_shared;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq358_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq74_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq75_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq359_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq359_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq359_join closure;
			IEnumerator var2_filter;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq359_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Other cooling system type: "));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var2_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq271_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 3; return false; }
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq143_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq144_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq360_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq360_map(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq360_map closure;
			IEnumerator var2_Name;
			public Enumerator(seq360_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_Name = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_n)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_Name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_Name.current()))), "L2 - Lighting");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq361_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq361_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq361_filter closure;
			IEnumerator var2_Row;
			public Enumerator(seq361_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_Row = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_Row.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq11_map(((com.altova.mapforce.IMFNode)(var2_Row.current()))))))))) {state = 2; return false; }
				current = var2_Row.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_Row != null ) { var2_Row.close(); var2_Row = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_Row != null ) { var2_Row.close(); var2_Row = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq362_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq362_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq362_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Cell;
			IEnumerator var4_filter;
			java.lang.String var5_vmf15_inputtoresult;
			boolean var6_equal;
			boolean var7_equal;
			boolean var8_equal;
			boolean var9_equal;
			boolean var10_equal;
			boolean var11_equal;
			boolean var12_equal;
			boolean var13_equal;
			boolean var14_equal;
			boolean var15_equal;
			boolean var16_equal;
			boolean var17_equal;
			com.altova.mapforce.IEnumerable var18_filter;
			com.altova.mapforce.IEnumerable var19_filter;
			public Enumerator(seq362_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq59_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Cell).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_vmf15_inputtoresult = com.mapforce.vmf.vmf15_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))));
				var6_equal = com.altova.functions.Core.equal("Halogen", var5_vmf15_inputtoresult);
				var7_equal = com.altova.functions.Core.equal("Solid State Lighting", var5_vmf15_inputtoresult);
				var8_equal = com.altova.functions.Core.equal("Induction", var5_vmf15_inputtoresult);
				var9_equal = com.altova.functions.Core.equal("Other", var5_vmf15_inputtoresult);
				var10_equal = com.altova.functions.Core.equal("Photoluminescent", var5_vmf15_inputtoresult);
				var11_equal = com.altova.functions.Core.equal("Neon", var5_vmf15_inputtoresult);
				var12_equal = com.altova.functions.Core.equal("Plasma", var5_vmf15_inputtoresult);
				var13_equal = com.altova.functions.Core.equal("Self-Luminous", var5_vmf15_inputtoresult);
				var14_equal = com.altova.functions.Core.equal("High Intensity Discharge", var5_vmf15_inputtoresult);
				var15_equal = com.altova.functions.Core.equal("Incandescent", var5_vmf15_inputtoresult);
				var16_equal = com.altova.functions.Core.equal("Compact Fluorescent", var5_vmf15_inputtoresult);
				var17_equal = com.altova.functions.Core.equal("Linear Fluorescent", var5_vmf15_inputtoresult);
				var18_filter = new com.altova.functions.Core.SequenceCache((new seq363_filter(var3_Cell)));
				var19_filter = new com.altova.functions.Core.SequenceCache((new seq364_filter(var3_Cell)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("LightingSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq365_join(var6_equal, var12_equal, var13_equal, var19_filter, var15_equal, var3_Cell, var10_equal, var16_equal, var8_equal, var9_equal, var17_equal, var14_equal, var7_equal, var11_equal, var18_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq363_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq363_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq363_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq363_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq364_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq364_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq364_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq364_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq365_join implements IEnumerable
	{
		boolean var1_shared;
		boolean var2_shared;
		boolean var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
		boolean var5_shared;
		com.altova.mapforce.IEnumerable var6_shared;
		boolean var7_shared;
		boolean var8_shared;
		boolean var9_shared;
		boolean var10_shared;
		boolean var11_shared;
		boolean var12_shared;
		boolean var13_shared;
		boolean var14_shared;
		com.altova.mapforce.IEnumerable var15_shared;
	
		public seq365_join(boolean var1_shared, boolean var2_shared, boolean var3_shared, com.altova.mapforce.IEnumerable var4_shared, boolean var5_shared, com.altova.mapforce.IEnumerable var6_shared, boolean var7_shared, boolean var8_shared, boolean var9_shared, boolean var10_shared, boolean var11_shared, boolean var12_shared, boolean var13_shared, boolean var14_shared, com.altova.mapforce.IEnumerable var15_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
			this.var6_shared = var6_shared;
			this.var7_shared = var7_shared;
			this.var8_shared = var8_shared;
			this.var9_shared = var9_shared;
			this.var10_shared = var10_shared;
			this.var11_shared = var11_shared;
			this.var12_shared = var12_shared;
			this.var13_shared = var13_shared;
			this.var14_shared = var14_shared;
			this.var15_shared = var15_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq365_join closure;
			IEnumerator var16_filter;
			IEnumerator var17_filter;
			IEnumerator var18_filter;
			IEnumerator var19_filter;
			IEnumerator var20_filter;
			IEnumerator var21_filter;
			IEnumerator var22_filter;
			public Enumerator(seq365_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("LampType", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq366_join(closure.var1_shared, closure.var2_shared, closure.var3_shared, closure.var5_shared, closure.var7_shared, closure.var8_shared, closure.var9_shared, closure.var10_shared, closure.var11_shared, closure.var12_shared, closure.var13_shared, closure.var14_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var16_filter = (closure.var6_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var16_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 3; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("BallastType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf16_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var16_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				var17_filter = (closure.var15_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var17_filter.moveNext()) {state = 7; return false; }
				if (!(com.altova.functions.Core.equal("Occupancy sensor", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var17_filter.current())))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("LightingControlTypeOccupancy", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Occupancy Sensors"));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				var18_filter = (closure.var15_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var18_filter.moveNext()) {state = 10; return false; }
				if (!(com.altova.functions.Core.equal("Photocell", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var18_filter.current())))))) {state = 9; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("LightingControlTypeDaylighting", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Continuous"));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				var19_filter = (closure.var6_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var19_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))))) {state = 12; return false; }
				if (!(com.altova.functions.Core.exists(com.mapforce.vmf.vmf17_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PercentPremisesServed", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString((java.math.BigDecimal)com.altova.functions.Core.first(com.mapforce.vmf.vmf17_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				var20_filter = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var20_filter.moveNext()) {state = 16; return false; }
				if (!(com.altova.functions.Core.equal("Exterior", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var20_filter.current())))))) {state = 15; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OutsideLighting", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.booleanToString(com.altova.functions.Core.equal("Exterior", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var20_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if( var20_filter != null ) { var20_filter.close(); var20_filter = null; }
				var21_filter = (closure.var15_shared).enumerator();
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 18;				
				if (!var21_filter.moveNext()) {state = 19; return false; }
				if (!(com.altova.functions.Core.exists(com.mapforce.vmf.vmf18_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var21_filter.current()))))))) {state = 18; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ControlTechnology", "http://nrel.gov/schemas/bedes-auc/2014"), com.mapforce.vmf.vmf18_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var21_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_19() throws Exception {
				state = 21;				
				if( var21_filter != null ) { var21_filter.close(); var21_filter = null; }
				var22_filter = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 21;				
				if (!var22_filter.moveNext()) {state = 22; return false; }
				if (!(com.altova.functions.Core.exists(com.mapforce.vmf.vmf19_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))) {state = 21; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.mapforce.vmf.vmf19_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var22_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_22() throws Exception {
				state = 0;				
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				if( var20_filter != null ) { var20_filter.close(); var20_filter = null; }
				if( var21_filter != null ) { var21_filter.close(); var21_filter = null; }
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq366_join implements IEnumerable
	{
		boolean var1_shared;
		boolean var2_shared;
		boolean var3_shared;
		boolean var4_shared;
		boolean var5_shared;
		boolean var6_shared;
		boolean var7_shared;
		boolean var8_shared;
		boolean var9_shared;
		boolean var10_shared;
		boolean var11_shared;
		boolean var12_shared;
	
		public seq366_join(boolean var1_shared, boolean var2_shared, boolean var3_shared, boolean var4_shared, boolean var5_shared, boolean var6_shared, boolean var7_shared, boolean var8_shared, boolean var9_shared, boolean var10_shared, boolean var11_shared, boolean var12_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
			this.var6_shared = var6_shared;
			this.var7_shared = var7_shared;
			this.var8_shared = var8_shared;
			this.var9_shared = var9_shared;
			this.var10_shared = var10_shared;
			this.var11_shared = var11_shared;
			this.var12_shared = var12_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq366_join closure;
			public Enumerator(seq366_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
					case 37:	if (moveNext_37()) return true; break;
					case 38:	if (moveNext_38()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 4;				
				if (!(closure.var4_shared)) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Incandescent", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq187_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 7;				
				if (!(closure.var9_shared)) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("LinearFluorescent", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq187_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 10;				
				if (!(closure.var6_shared)) {state = 10; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CompactFluorescent", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq187_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 13;				
				if (!(closure.var1_shared)) {state = 13; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Halogen", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq187_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 16;				
				if (!(closure.var10_shared)) {state = 16; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("HighIntensityDischarge", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq187_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 19;				
				if (!(closure.var11_shared)) {state = 19; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("SolidStateLighting", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq187_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_19() throws Exception {
				state = 22;				
				if (!(closure.var7_shared)) {state = 22; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Induction", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq187_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_22() throws Exception {
				state = 25;				
				if (!(closure.var12_shared)) {state = 25; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Neon", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.booleanToString(com.altova.CoreTypes.parseBoolean("true"))));
				pos++;
				return true;
			}
			private boolean moveNext_25() throws Exception {
				state = 28;				
				if (!(closure.var2_shared)) {state = 28; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Plasma", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.booleanToString(com.altova.CoreTypes.parseBoolean("true"))));
				pos++;
				return true;
			}
			private boolean moveNext_28() throws Exception {
				state = 31;				
				if (!(closure.var5_shared)) {state = 31; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Photoluminescent", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.booleanToString(com.altova.CoreTypes.parseBoolean("true"))));
				pos++;
				return true;
			}
			private boolean moveNext_31() throws Exception {
				state = 34;				
				if (!(closure.var3_shared)) {state = 34; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("SelfLuminous", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.booleanToString(com.altova.CoreTypes.parseBoolean("true"))));
				pos++;
				return true;
			}
			private boolean moveNext_34() throws Exception {
				state = 37;				
				if (!(closure.var8_shared)) {state = 37; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OtherCombination", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.booleanToString(com.altova.CoreTypes.parseBoolean("true"))));
				pos++;
				return true;
			}
			private boolean moveNext_37() throws Exception {
				state = 0;				
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq367_seq_(closure.var1_shared, closure.var2_shared, closure.var3_shared, closure.var4_shared, closure.var5_shared, closure.var6_shared, closure.var7_shared, closure.var8_shared, closure.var9_shared, closure.var10_shared, closure.var11_shared, closure.var12_shared))))))) {state = 38; return false; }
				return false;
			}
			private boolean moveNext_38() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Unknown", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.booleanToString(com.altova.CoreTypes.parseBoolean("true"))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq367_seq_ implements IEnumerable
	{
		boolean var1_shared;
		boolean var2_shared;
		boolean var3_shared;
		boolean var4_shared;
		boolean var5_shared;
		boolean var6_shared;
		boolean var7_shared;
		boolean var8_shared;
		boolean var9_shared;
		boolean var10_shared;
		boolean var11_shared;
		boolean var12_shared;
	
		public seq367_seq_(boolean var1_shared, boolean var2_shared, boolean var3_shared, boolean var4_shared, boolean var5_shared, boolean var6_shared, boolean var7_shared, boolean var8_shared, boolean var9_shared, boolean var10_shared, boolean var11_shared, boolean var12_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
			this.var6_shared = var6_shared;
			this.var7_shared = var7_shared;
			this.var8_shared = var8_shared;
			this.var9_shared = var9_shared;
			this.var10_shared = var10_shared;
			this.var11_shared = var11_shared;
			this.var12_shared = var12_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq367_seq_ closure;
			public Enumerator(seq367_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var4_shared;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = closure.var9_shared;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = closure.var6_shared;
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = closure.var1_shared;
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = closure.var10_shared;
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = closure.var11_shared;
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = closure.var7_shared;
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = closure.var12_shared;
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				current = closure.var2_shared;
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = closure.var5_shared;
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				current = closure.var3_shared;
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				current = closure.var8_shared;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq368_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq368_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq368_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq368_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq141_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq369_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq369_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq369_join closure;
			IEnumerator var3_shared;
			com.altova.mapforce.IEnumerable var4_Row;
			IEnumerator var5_filter;
			IEnumerator var14_shared;
			com.altova.mapforce.IEnumerable var15_Row;
			IEnumerator var16_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var17_filter;
			IEnumerator var8_filter;
			IEnumerator var9_filter;
			IEnumerator var10_filter;
			IEnumerator var11_filter;
			IEnumerator var12_filter;
			java.lang.String var13_cast;
			public Enumerator(seq369_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current()))));
				var5_filter = (var4_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 21;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var14_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq370_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq371_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 4; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				var7_filter = (var4_Row).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var7_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq372_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq373_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 8; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var8_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 10; return false; }
				var9_filter = (var4_Row).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var9_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq374_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq375_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 12; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 16;				
				if (!var10_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 14; return false; }
				var11_filter = (var4_Row).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var11_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq376_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq377_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 16; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 14;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 18;				
				if (!var12_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq378_seq_(((com.altova.mapforce.IMFNode)(var12_filter.current())), ((com.altova.mapforce.IMFNode)(var10_filter.current())), ((com.altova.mapforce.IMFNode)(var6_filter.current())), ((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 18; return false; }
				var13_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var12_filter.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("DomesticHotWaterType", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq379_join(((com.altova.mapforce.IMFNode)(var10_filter.current())), ((com.altova.mapforce.IMFNode)(var6_filter.current())), var13_cast, var4_Row, ((com.altova.mapforce.IMFNode)(var8_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 23;				
				if (!var14_shared.moveNext()) {state = 22; return false; }
				var15_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var14_shared.current()))));
				var16_filter = (var15_Row).enumerator();
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 0;				
				if( var14_shared != null ) { var14_shared.close(); var14_shared = null; }
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if (!var16_filter.moveNext()) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq392_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq393_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 23; return false; }
				var17_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var16_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 21;				
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 25;				
				if (!var17_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 25; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq394_if_cast(((com.altova.mapforce.IMFNode)(var17_filter.current())), var15_Row, closure.var2_shared))))) {state = 25; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PrimaryFuel", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq410_if_cast(((com.altova.mapforce.IMFNode)(var17_filter.current())), var15_Row, closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				if( var14_shared != null ) { var14_shared.close(); var14_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq370_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq370_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq370_map closure;
			IEnumerator var2_r;
			public Enumerator(seq370_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(64L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq371_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq371_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq371_map closure;
			IEnumerator var2_r;
			public Enumerator(seq371_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(64L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq372_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq372_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq372_map closure;
			IEnumerator var2_r;
			public Enumerator(seq372_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(67L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq373_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq373_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq373_map closure;
			IEnumerator var2_r;
			public Enumerator(seq373_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(67L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq374_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq374_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq374_map closure;
			IEnumerator var2_r;
			public Enumerator(seq374_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(70L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq375_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq375_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq375_map closure;
			IEnumerator var2_r;
			public Enumerator(seq375_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(70L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq376_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq376_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq376_map closure;
			IEnumerator var2_r;
			public Enumerator(seq376_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(71L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq377_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq377_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq377_map closure;
			IEnumerator var2_r;
			public Enumerator(seq377_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(71L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq378_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IMFNode var3_current;
		com.altova.mapforce.IMFNode var4_current;
	
		public seq378_seq_(com.altova.mapforce.IMFNode var1_cur_Cell, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IMFNode var3_current, com.altova.mapforce.IMFNode var4_current)
		{
			this.var1_cur_Cell = var1_cur_Cell;
			this.var2_current = var2_current;
			this.var3_current = var3_current;
			this.var4_current = var4_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq378_seq_ closure;
			public Enumerator(seq378_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var3_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var4_current));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_cur_Cell));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq379_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
		java.lang.String var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
		com.altova.mapforce.IMFNode var5_current;
	
		public seq379_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current, java.lang.String var3_shared, com.altova.mapforce.IEnumerable var4_shared, com.altova.mapforce.IMFNode var5_current)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_current = var5_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq379_join closure;
			IEnumerator var6_filter;
			IEnumerator var11_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			IEnumerator var12_filter;
			IEnumerator var13_filter;
			IEnumerator var9_filter;
			IEnumerator var14_filter;
			boolean var10_cast;
			public Enumerator(seq379_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var6_filter = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var6_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq380_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq381_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 2; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 11;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				var11_filter = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var7_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 4; return false; }
				var8_filter = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var8_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq382_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq383_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 6; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var8_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var9_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq384_seq_(((com.altova.mapforce.IMFNode)(var9_filter.current())), closure.var1_current, ((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 8; return false; }
				var10_cast = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("StorageTank", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TankHeatingType", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq385_join(closure.var2_current, var10_cast, closure.var5_current)))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var11_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq388_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq389_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 11; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if (!(com.altova.CoreTypes.parseBoolean(closure.var3_shared))) {state = 0; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Other", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(closure.var3_shared));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var12_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 13; return false; }
				var13_filter = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 17;				
				if (!var13_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq390_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq391_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 15; return false; }
				var14_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var13_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 17;				
				if (!var14_filter.moveNext()) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq186_seq_(((com.altova.mapforce.IMFNode)(var14_filter.current())), ((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 17; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Instantaneous", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq187_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_18() throws Exception {
				state = 15;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq380_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq380_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq380_map closure;
			IEnumerator var2_r;
			public Enumerator(seq380_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(65L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq381_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq381_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq381_map closure;
			IEnumerator var2_r;
			public Enumerator(seq381_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(65L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq382_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq382_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq382_map closure;
			IEnumerator var2_r;
			public Enumerator(seq382_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(68L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq383_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq383_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq383_map closure;
			IEnumerator var2_r;
			public Enumerator(seq383_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(68L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq384_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IMFNode var3_current;
	
		public seq384_seq_(com.altova.mapforce.IMFNode var1_cur_Cell, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IMFNode var3_current)
		{
			this.var1_cur_Cell = var1_cur_Cell;
			this.var2_current = var2_current;
			this.var3_current = var3_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq384_seq_ closure;
			public Enumerator(seq384_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var3_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_cur_Cell));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq385_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		boolean var2_shared;
		com.altova.mapforce.IMFNode var3_current;
	
		public seq385_join(com.altova.mapforce.IMFNode var1_current, boolean var2_shared, com.altova.mapforce.IMFNode var3_current)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_current = var3_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq385_join closure;
			public Enumerator(seq385_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 4;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var3_current)))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Direct", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq187_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq386_seq_(closure.var1_current, closure.var2_shared))))))) {state = 0; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Indirect", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IndirectTankHeatingSource", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq387_cond_box(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq386_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		boolean var2_shared;
	
		public seq386_seq_(com.altova.mapforce.IMFNode var1_current, boolean var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq386_seq_ closure;
			public Enumerator(seq386_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = closure.var2_shared;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq387_cond_box implements IEnumerable
	{
		boolean var1_shared;
	
		public seq387_cond_box(boolean var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq387_cond_box closure;
			public Enumerator(seq387_cond_box closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(closure.var1_shared)) {state = 0; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("HeatPump", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq187_seq_()));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq388_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq388_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq388_map closure;
			IEnumerator var2_r;
			public Enumerator(seq388_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(66L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq389_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq389_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq389_map closure;
			IEnumerator var2_r;
			public Enumerator(seq389_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(66L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq390_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq390_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq390_map closure;
			IEnumerator var2_r;
			public Enumerator(seq390_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(69L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq391_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq391_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq391_map closure;
			IEnumerator var2_r;
			public Enumerator(seq391_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(69L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq392_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq392_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq392_map closure;
			IEnumerator var2_r;
			public Enumerator(seq392_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(73L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq393_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq393_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq393_map closure;
			IEnumerator var2_r;
			public Enumerator(seq393_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(73L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq394_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq394_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq394_if_cast closure;
			public Enumerator(seq394_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq395_map(closure.var2_shared, closure.var3_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq395_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq395_map(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq395_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq395_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq396_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq397_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq398_map(closure.var1_shared, closure.var2_shared, ((com.altova.mapforce.IMFNode)(var3_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq396_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq396_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq396_map closure;
			IEnumerator var2_r;
			public Enumerator(seq396_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(74L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq397_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq397_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq397_map closure;
			IEnumerator var2_r;
			public Enumerator(seq397_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(74L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq398_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IMFNode var3_current;
	
		public seq398_map(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IMFNode var3_current)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_current = var3_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq398_map closure;
			IEnumerator var4_filter;
			public Enumerator(seq398_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var3_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var4_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))) {state = 4; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 2;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq399_map(closure.var1_shared, closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq399_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq399_map(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq399_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq399_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq400_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq401_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq402_map(closure.var1_shared, closure.var2_shared, ((com.altova.mapforce.IMFNode)(var3_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq400_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq400_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq400_map closure;
			IEnumerator var2_r;
			public Enumerator(seq400_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(75L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq401_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq401_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq401_map closure;
			IEnumerator var2_r;
			public Enumerator(seq401_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(75L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq402_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IMFNode var3_current;
	
		public seq402_map(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IMFNode var3_current)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_current = var3_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq402_map closure;
			IEnumerator var4_filter;
			public Enumerator(seq402_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var3_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var4_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq403_map(closure.var1_shared, closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq403_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq403_map(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq403_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq403_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq404_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq405_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq406_map(((com.altova.mapforce.IMFNode)(var3_filter.current())), closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq404_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq404_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq404_map closure;
			IEnumerator var2_r;
			public Enumerator(seq404_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(76L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq405_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq405_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq405_map closure;
			IEnumerator var2_r;
			public Enumerator(seq405_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(76L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq406_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq406_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq406_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq406_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))) {state = 4; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq407_map(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq407_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq407_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq407_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq407_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq271_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq408_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq408_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq408_map(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq408_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq408_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq198_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq199_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq409_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq409_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq409_map(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq409_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq409_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq123_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.exists(com.mapforce.vmf.vmf21_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq410_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq410_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq410_if_cast closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			IEnumerator var11_filter;
			IEnumerator var9_filter;
			IEnumerator var12_filter;
			IEnumerator var10_filter;
			IEnumerator var13_filter;
			IEnumerator var14_filter;
			IEnumerator var15_filter;
			public Enumerator(seq410_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 32:	if (moveNext_32()) return true; break;
					case 33:	if (moveNext_33()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
					case 35:	if (moveNext_35()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = "Electricity";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var4_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq396_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq397_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))) {state = 9; return false; }
				current = "Natural gas";
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 12;				
				var6_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var6_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq400_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq401_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 12; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 7;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 17;				
				if (!var7_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 14; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var7_filter.current())))))) {state = 16; return false; }
				var8_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 25;				
				var11_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 19;				
				if (!var8_filter.moveNext()) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq271_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 17; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var8_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 14;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 21;				
				if (!var9_filter.moveNext()) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq193_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq194_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 19; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 17;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 21;				
				if (!var10_filter.moveNext()) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq123_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 21; return false; }
				current = com.mapforce.vmf.vmf20_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var10_filter.current()))));
				pos++;
				return true;
			}
			private boolean moveNext_22() throws Exception {
				state = 19;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 27;				
				if (!var11_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq404_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 25; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq405_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 25; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 14;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 30;				
				if (!var12_filter.moveNext()) {state = 28; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 27; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var12_filter.current())))))) {state = 29; return false; }
				var13_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_28() throws Exception {
				state = 25;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_29() throws Exception {
				state = 27;				
				current = "Unknown";
				pos++;
				return true;
			}
			private boolean moveNext_30() throws Exception {
				state = 32;				
				if (!var13_filter.moveNext()) {state = 31; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq271_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 30; return false; }
				var14_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var13_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_31() throws Exception {
				state = 27;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_32() throws Exception {
				state = 34;				
				if (!var14_filter.moveNext()) {state = 33; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq198_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 32; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq199_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 32; return false; }
				var15_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var14_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_33() throws Exception {
				state = 30;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}
			private boolean moveNext_34() throws Exception {
				state = 34;				
				if (!var15_filter.moveNext()) {state = 35; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq123_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 34; return false; }
				if (!(com.altova.functions.Core.exists(com.mapforce.vmf.vmf21_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))) {state = 34; return false; }
				current = (java.lang.String)com.altova.functions.Core.first(com.mapforce.vmf.vmf21_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var15_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_35() throws Exception {
				state = 32;				
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq411_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq411_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq411_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Row;
			IEnumerator var4_filter;
			com.altova.mapforce.IEnumerable var5_Cell;
			IEnumerator var6_filter;
			com.altova.mapforce.IEnumerable var7_filter;
			public Enumerator(seq411_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq337_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current()))));
				var6_filter = (var5_Cell).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				if (!(com.altova.functions.Core.equal("Cooking", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 6; return false; }
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq339_filter(var3_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CookingSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq412_join(var7_filter, var5_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq412_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq412_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq412_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			public Enumerator(seq412_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("Cooking", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq123_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Capacity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq344_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CapacityUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var6_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				var7_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 14;				
				if (!var7_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 14; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var7_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 17;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq346_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_17() throws Exception {
				state = 18;				
				var8_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 18;				
				if (!var8_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 18; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_19() throws Exception {
				state = 0;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq413_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq413_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq413_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Row;
			IEnumerator var4_filter;
			com.altova.mapforce.IEnumerable var5_Cell;
			IEnumerator var6_filter;
			com.altova.mapforce.IEnumerable var7_filter;
			public Enumerator(seq413_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq337_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current()))));
				var6_filter = (var5_Cell).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				if (!(com.altova.functions.Core.equal("Refrigeration", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 6; return false; }
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq339_filter(var3_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RefrigerationSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq414_join(var7_filter, var5_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq414_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq414_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq414_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq414_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("Refrigeration", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq415_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				var6_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var6_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq415_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq415_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq415_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			public Enumerator(seq415_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq347_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var3_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq348_join(closure.var1_shared, ((com.altova.mapforce.IMFNode)(var3_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq349_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq350_join(closure.var1_shared, ((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var5_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq351_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 9; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq352_join(closure.var1_shared, ((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var6_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var6_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq123_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq416_join(closure.var1_shared, ((com.altova.mapforce.IMFNode)(var6_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				var7_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var7_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq344_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq417_join(closure.var1_shared, ((com.altova.mapforce.IMFNode)(var7_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 0;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq416_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq416_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_shared = var1_shared;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq416_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			public Enumerator(seq416_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var2_current)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq123_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq417_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq417_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_shared = var1_shared;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq417_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			public Enumerator(seq417_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var2_current)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq344_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq418_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq418_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq418_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Row;
			IEnumerator var4_filter;
			com.altova.mapforce.IEnumerable var5_Cell;
			IEnumerator var6_filter;
			com.altova.mapforce.IEnumerable var7_filter;
			public Enumerator(seq418_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq337_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current()))));
				var6_filter = (var5_Cell).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				if (!(com.altova.functions.Core.equal("Dishwasher", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 6; return false; }
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq339_filter(var3_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("DishwasherSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq419_join(var7_filter, var5_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq419_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq419_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq419_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq419_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("Dishwasher", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq415_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				var6_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var6_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq420_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq420_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq420_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Row;
			IEnumerator var4_filter;
			com.altova.mapforce.IEnumerable var5_Cell;
			IEnumerator var6_filter;
			com.altova.mapforce.IEnumerable var7_filter;
			public Enumerator(seq420_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq337_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current()))));
				var6_filter = (var5_Cell).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				if (!(com.altova.functions.Core.equal("Laundry", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 6; return false; }
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq339_filter(var3_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("LaundrySystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq421_join(var7_filter, var5_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq421_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq421_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq421_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq421_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("Laundry", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq415_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				var6_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var6_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq422_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq422_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq422_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Row;
			IEnumerator var4_filter;
			com.altova.mapforce.IEnumerable var5_Cell;
			IEnumerator var6_filter;
			com.altova.mapforce.IEnumerable var7_filter;
			public Enumerator(seq422_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq337_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current()))));
				var6_filter = (var5_Cell).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				if (!(com.altova.functions.Core.equal("Pump", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 6; return false; }
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq339_filter(var3_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PumpSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq423_join(var7_filter, var5_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq423_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq423_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq423_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq423_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("Pump", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var6_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq415_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq424_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq424_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq424_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq424_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq425_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq64_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq425_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq425_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq425_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq425_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq426_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_cur_Cell;
		com.altova.mapforce.IMFNode var3_current;
	
		public seq426_seq_(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_cur_Cell, com.altova.mapforce.IMFNode var3_current)
		{
			this.var1_current = var1_current;
			this.var2_cur_Cell = var2_cur_Cell;
			this.var3_current = var3_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq426_seq_ closure;
			public Enumerator(seq426_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var3_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.greater(com.altova.CoreTypes.nodeToString(closure.var2_cur_Cell), com.altova.CoreTypes.decimalToString(new java.math.BigDecimal("0.5")));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq427_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IEnumerable var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
	
		public seq427_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IEnumerable var3_shared, com.altova.mapforce.IEnumerable var4_shared)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq427_join closure;
			IEnumerator var5_filter;
			com.altova.mapforce.IEnumerable var6_Row;
			IEnumerator var7_filter;
			com.altova.mapforce.IEnumerable var8_Cell;
			IEnumerator var9_filter;
			com.altova.mapforce.IEnumerable var10_filter;
			public Enumerator(seq427_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 4;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current)))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FanSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq428_join(closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 7;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FanSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq432_join(closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				var5_filter = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq337_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				var6_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current()))));
				var7_filter = (var6_Row).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 0;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var7_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 10; return false; }
				var8_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current()))));
				var9_filter = (var8_Cell).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var9_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 12; return false; }
				if (!(com.altova.functions.Core.equal("Fan", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var9_filter.current())))))) {state = 12; return false; }
				var10_filter = new com.altova.functions.Core.SequenceCache((new seq339_filter(var6_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FanSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq436_join(var10_filter, var8_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq428_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq428_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq428_join closure;
			IEnumerator var2_filter;
			IEnumerator var3_filter;
			public Enumerator(seq428_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq71_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("LinkedSystemID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("AHU1"))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq429_if_cast(closure.var1_shared, ((com.altova.mapforce.IMFNode)(var3_filter.current()))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FanControlType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq431_if_cast(((com.altova.mapforce.IMFNode)(var3_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq429_if_cast implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IMFNode var2_cur_Cell;
	
		public seq429_if_cast(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IMFNode var2_cur_Cell)
		{
			this.var1_shared = var1_shared;
			this.var2_cur_Cell = var2_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq429_if_cast closure;
			public Enumerator(seq429_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_cur_Cell)))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq430_map(closure.var1_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq430_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq430_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq430_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq430_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq167_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq431_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq431_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq431_if_cast closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq431_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = "Constant Volume";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))) {state = 7; return false; }
				current = "Variable Volume";
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq432_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq432_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq432_join closure;
			IEnumerator var2_filter;
			IEnumerator var3_filter;
			public Enumerator(seq432_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq38_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("LinkedSystemID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("AHU2"))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq433_if_cast(closure.var1_shared, ((com.altova.mapforce.IMFNode)(var3_filter.current()))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FanControlType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq435_if_cast(((com.altova.mapforce.IMFNode)(var3_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq433_if_cast implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IMFNode var2_cur_Cell;
	
		public seq433_if_cast(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IMFNode var2_cur_Cell)
		{
			this.var1_shared = var1_shared;
			this.var2_cur_Cell = var2_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq433_if_cast closure;
			public Enumerator(seq433_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_cur_Cell)))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq434_map(closure.var1_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq434_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq434_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq434_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq434_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq60_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq61_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq167_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq435_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq435_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq435_if_cast closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq435_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = "Constant Volume";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq60_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq61_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))) {state = 7; return false; }
				current = "Variable Volume";
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq436_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq436_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq436_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq436_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("Fan", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var6_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq415_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq437_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq437_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq437_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Row;
			IEnumerator var4_filter;
			com.altova.mapforce.IEnumerable var5_Cell;
			IEnumerator var6_filter;
			com.altova.mapforce.IEnumerable var7_filter;
			public Enumerator(seq437_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq337_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current()))));
				var6_filter = (var5_Cell).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				if (!(com.altova.functions.Core.equal("Motor", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 6; return false; }
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq339_filter(var3_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MotorSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq438_join(var7_filter, var5_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq438_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq438_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq438_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq438_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("Motor", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var6_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq439_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq439_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq439_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq439_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			com.altova.mapforce.IEnumerable var5_box;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			public Enumerator(seq439_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq347_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var3_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq348_join(closure.var1_shared, ((com.altova.mapforce.IMFNode)(var3_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq349_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 6; return false; }
				var5_box = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq440_seq_(var5_box)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var6_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var6_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq351_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 9; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq352_join(closure.var1_shared, ((com.altova.mapforce.IMFNode)(var6_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				var7_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var7_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq123_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq416_join(closure.var1_shared, ((com.altova.mapforce.IMFNode)(var7_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				var8_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var8_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq344_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq417_join(closure.var1_shared, ((com.altova.mapforce.IMFNode)(var8_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 0;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq440_seq_ implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq440_seq_(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq440_seq_ closure;
			public Enumerator(seq440_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var1_shared);
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var1_shared);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq441_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq441_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq441_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Row;
			IEnumerator var4_filter;
			com.altova.mapforce.IEnumerable var5_Cell;
			IEnumerator var6_filter;
			com.altova.mapforce.IEnumerable var7_filter;
			public Enumerator(seq441_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq337_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current()))));
				var6_filter = (var5_Cell).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				if (!(com.altova.functions.Core.equal("Heat Recovery", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 6; return false; }
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq339_filter(var3_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("HeatRecoverySystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq442_join(var7_filter, var5_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq442_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq442_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq442_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq442_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("HeatRecovery", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var6_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq415_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq443_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq443_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq443_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq443_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq141_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq444_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq444_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq444_join closure;
			IEnumerator var3_shared;
			com.altova.mapforce.IEnumerable var4_Row;
			IEnumerator var5_filter;
			IEnumerator var7_shared;
			com.altova.mapforce.IEnumerable var8_Row;
			IEnumerator var9_filter;
			IEnumerator var15_filter;
			IEnumerator var6_filter;
			IEnumerator var16_filter;
			IEnumerator var10_filter;
			IEnumerator var11_filter;
			IEnumerator var17_filter;
			IEnumerator var12_filter;
			IEnumerator var13_filter;
			IEnumerator var14_filter;
			public Enumerator(seq444_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box("AllWall1"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current()))));
				var5_filter = (var4_Row).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 10;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var7_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq236_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq237_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 5; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var6_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq445_if_cast(var4_Row, ((com.altova.mapforce.IMFNode)(var6_filter.current()))))))) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ExteriorWallConstruction", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq455_if_cast(((com.altova.mapforce.IMFNode)(var6_filter.current())), var4_Row)))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var7_shared.moveNext()) {state = 11; return false; }
				var8_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var7_shared.current()))));
				var9_filter = (var8_Row).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 25;				
				if( var7_shared != null ) { var7_shared.close(); var7_shared = null; }
				var15_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var9_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq236_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq237_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 12; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 16;				
				if (!var10_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 14; return false; }
				var11_filter = (var8_Row).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var11_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq30_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq31_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 16; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 14;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var12_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 18; return false; }
				var13_filter = (var8_Row).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 22;				
				if (!var13_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq41_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq42_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 20; return false; }
				var14_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var13_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 22;				
				if (!var14_filter.moveNext()) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq458_if_any(((com.altova.mapforce.IMFNode)(var12_filter.current())), var8_Row, ((com.altova.mapforce.IMFNode)(var14_filter.current())), ((com.altova.mapforce.IMFNode)(var10_filter.current()))))))) {state = 22; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ExteriorWallFinish", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq466_if_any(((com.altova.mapforce.IMFNode)(var12_filter.current())), var8_Row, ((com.altova.mapforce.IMFNode)(var10_filter.current())), ((com.altova.mapforce.IMFNode)(var14_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_23() throws Exception {
				state = 20;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 27;				
				if (!var15_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq23_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 25; return false; }
				var16_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var15_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 0;				
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 29;				
				if (!var16_filter.moveNext()) {state = 28; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq18_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 27; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq19_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 27; return false; }
				var17_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var16_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_28() throws Exception {
				state = 25;				
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				return false;
			}
			private boolean moveNext_29() throws Exception {
				state = 29;				
				if (!var17_filter.moveNext()) {state = 30; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 29; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("WallRValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var17_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_30() throws Exception {
				state = 27;				
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var7_shared != null ) { var7_shared.close(); var7_shared = null; }
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq445_if_cast implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IMFNode var2_cur_Cell;
	
		public seq445_if_cast(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IMFNode var2_cur_Cell)
		{
			this.var1_shared = var1_shared;
			this.var2_cur_Cell = var2_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq445_if_cast closure;
			public Enumerator(seq445_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_cur_Cell)))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq446_map(closure.var1_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq446_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq446_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq446_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq446_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq30_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq31_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq447_map(closure.var1_shared, ((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq447_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IMFNode var2_cur_Cell;
	
		public seq447_map(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IMFNode var2_cur_Cell)
		{
			this.var1_shared = var1_shared;
			this.var2_cur_Cell = var2_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq447_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq447_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var2_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq448_map(closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq448_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq448_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq448_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq448_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq34_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq35_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq449_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq449_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq449_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq449_map closure;
			IEnumerator var3_filter;
			boolean var4_cast;
			public Enumerator(seq449_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				var4_cast = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))));
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq450_seq_(var4_cast))))))) {state = 4; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 2;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq451_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq450_seq_ implements IEnumerable
	{
		boolean var1_shared;
	
		public seq450_seq_(boolean var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq450_seq_ closure;
			public Enumerator(seq450_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_shared;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = closure.var1_shared;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq451_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq451_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq451_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq451_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq41_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq42_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq452_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq452_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq452_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq452_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq452_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq453_map(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq453_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq453_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq453_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq453_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq53_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq54_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq454_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq454_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq454_map(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq454_map closure;
			IEnumerator var2_Cell;
			public Enumerator(seq454_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_Cell = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_Cell.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var2_Cell.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_Cell != null ) { var2_Cell.close(); var2_Cell = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_Cell != null ) { var2_Cell.close(); var2_Cell = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq455_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq455_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq455_if_cast closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			IEnumerator var9_filter;
			IEnumerator var10_filter;
			public Enumerator(seq455_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = "Masonry";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq30_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq31_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var5_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq34_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq35_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 9; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq456_seq_(((com.altova.mapforce.IMFNode)(var6_filter.current())), ((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 13; return false; }
				current = "Steel frame";
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 16;				
				var7_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var7_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq41_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq42_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 16; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 11;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var8_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 18; return false; }
				var9_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 22;				
				if (!var9_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq53_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq54_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 20; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 22;				
				if (!var10_filter.moveNext()) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq457_seq_(((com.altova.mapforce.IMFNode)(var8_filter.current())), ((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 24; return false; }
				current = "Wood frame";
				pos++;
				return true;
			}
			private boolean moveNext_23() throws Exception {
				state = 20;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 22;				
				current = "Other";
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq456_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq456_seq_(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq456_seq_ closure;
			public Enumerator(seq456_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq457_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_cur_n;
	
		public seq457_seq_(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_cur_n)
		{
			this.var1_current = var1_current;
			this.var2_cur_n = var2_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq457_seq_ closure;
			public Enumerator(seq457_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_cur_n));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq458_if_any implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IMFNode var3_cur_Cell;
		com.altova.mapforce.IMFNode var4_current;
	
		public seq458_if_any(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IMFNode var3_cur_Cell, com.altova.mapforce.IMFNode var4_current)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_cur_Cell = var3_cur_Cell;
			this.var4_current = var4_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq458_if_any closure;
			public Enumerator(seq458_if_any closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq459_seq_(closure.var1_current, closure.var3_cur_Cell, closure.var4_current))))))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq460_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq459_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_cur_Cell;
		com.altova.mapforce.IMFNode var3_current;
	
		public seq459_seq_(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_cur_Cell, com.altova.mapforce.IMFNode var3_current)
		{
			this.var1_current = var1_current;
			this.var2_cur_Cell = var2_cur_Cell;
			this.var3_current = var3_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq459_seq_ closure;
			public Enumerator(seq459_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var3_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_cur_Cell));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq460_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq460_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq460_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq460_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq26_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq27_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq461_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq461_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq461_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq461_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq461_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))) {state = 4; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 2;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq462_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq462_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq462_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq462_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq462_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq34_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq35_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq463_map(closure.var1_shared, ((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq463_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq463_map(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_shared = var1_shared;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq463_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq463_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var2_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq464_map(closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq464_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq464_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq464_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq464_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq53_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq54_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq465_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq465_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq465_map(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq465_map closure;
			IEnumerator var2_filter;
			boolean var3_cast;
			public Enumerator(seq465_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_cast = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq183_seq_(var3_cast)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq466_if_any implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IMFNode var3_current;
		com.altova.mapforce.IMFNode var4_cur_Cell;
	
		public seq466_if_any(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IMFNode var3_current, com.altova.mapforce.IMFNode var4_cur_Cell)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_current = var3_current;
			this.var4_cur_Cell = var4_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq466_if_any closure;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			IEnumerator var9_filter;
			IEnumerator var10_filter;
			public Enumerator(seq466_if_any closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq467_seq_(closure.var1_current, closure.var3_current, closure.var4_cur_Cell))))))) {state = 2; return false; }
				current = "Brick";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq26_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq27_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 5; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var6_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 7; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 9; return false; }
				current = "Metal panel";
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 12;				
				var7_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var7_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq34_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq35_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 12; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 7;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 16;				
				if (!var8_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 14; return false; }
				var9_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var9_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq53_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq54_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 16; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 14;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 18;				
				if (!var10_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq186_seq_(((com.altova.mapforce.IMFNode)(var10_filter.current())), ((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 18; return false; }
				current = "Metal";
				pos++;
				return true;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq467_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IMFNode var3_cur_Cell;
	
		public seq467_seq_(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IMFNode var3_cur_Cell)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
			this.var3_cur_Cell = var3_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq467_seq_ closure;
			public Enumerator(seq467_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var3_cur_Cell));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq468_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq468_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq468_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq468_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq23_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq469_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq469_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq469_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq469_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq141_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq470_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq470_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq470_join closure;
			IEnumerator var3_shared;
			com.altova.mapforce.IEnumerable var4_Row;
			IEnumerator var5_filter;
			IEnumerator var11_shared;
			IEnumerator var12_filter;
			IEnumerator var14_shared;
			IEnumerator var6_filter;
			com.altova.mapforce.IEnumerable var15_Row;
			IEnumerator var13_filter;
			IEnumerator var16_filter;
			IEnumerator var18_shared;
			IEnumerator var7_filter;
			IEnumerator var19_filter;
			IEnumerator var21_shared;
			IEnumerator var17_filter;
			IEnumerator var8_filter;
			IEnumerator var22_filter;
			IEnumerator var20_filter;
			IEnumerator var24_shared;
			IEnumerator var9_filter;
			IEnumerator var25_filter;
			IEnumerator var23_filter;
			IEnumerator var10_filter;
			IEnumerator var26_filter;
			public Enumerator(seq470_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 32:	if (moveNext_32()) return true; break;
					case 33:	if (moveNext_33()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
					case 35:	if (moveNext_35()) return true; break;
					case 36:	if (moveNext_36()) return true; break;
					case 37:	if (moveNext_37()) return true; break;
					case 39:	if (moveNext_39()) return true; break;
					case 40:	if (moveNext_40()) return true; break;
					case 41:	if (moveNext_41()) return true; break;
					case 42:	if (moveNext_42()) return true; break;
					case 43:	if (moveNext_43()) return true; break;
					case 44:	if (moveNext_44()) return true; break;
					case 46:	if (moveNext_46()) return true; break;
					case 47:	if (moveNext_47()) return true; break;
					case 48:	if (moveNext_48()) return true; break;
					case 49:	if (moveNext_49()) return true; break;
					case 50:	if (moveNext_50()) return true; break;
					case 51:	if (moveNext_51()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box("Roof1"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current()))));
				var5_filter = (var4_Row).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 18;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var11_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq18_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq19_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 5; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var6_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 7; return false; }
				var7_filter = (var4_Row).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var7_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq71_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 9; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var8_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 11; return false; }
				var9_filter = (var4_Row).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var9_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 13; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var10_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 15; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RoofConstruction", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq471_if_any(((com.altova.mapforce.IMFNode)(var6_filter.current())), ((com.altova.mapforce.IMFNode)(var8_filter.current())), ((com.altova.mapforce.IMFNode)(var10_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var11_shared.moveNext()) {state = 19; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var11_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 25;				
				if( var11_shared != null ) { var11_shared.close(); var11_shared = null; }
				var14_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 22;				
				if (!var12_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq11_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq12_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 20; return false; }
				var13_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var12_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 22;				
				if (!var13_filter.moveNext()) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 22; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RoofFinish", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq473_if_cast(((com.altova.mapforce.IMFNode)(var13_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_23() throws Exception {
				state = 20;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 27;				
				if (!var14_shared.moveNext()) {state = 26; return false; }
				var15_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var14_shared.current()))));
				var16_filter = (var15_Row).enumerator();
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 32;				
				if( var14_shared != null ) { var14_shared.close(); var14_shared = null; }
				var18_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 29;				
				if (!var16_filter.moveNext()) {state = 28; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq18_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 27; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq19_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 27; return false; }
				var17_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var16_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_28() throws Exception {
				state = 25;				
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				return false;
			}
			private boolean moveNext_29() throws Exception {
				state = 29;				
				if (!var17_filter.moveNext()) {state = 30; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 29; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq474_if_cast(((com.altova.mapforce.IMFNode)(var17_filter.current())), var15_Row))))) {state = 29; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("DeckType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq478_if_cast(var15_Row, ((com.altova.mapforce.IMFNode)(var17_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_30() throws Exception {
				state = 27;				
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				return false;
			}
			private boolean moveNext_32() throws Exception {
				state = 34;				
				if (!var18_shared.moveNext()) {state = 33; return false; }
				var19_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var18_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_33() throws Exception {
				state = 39;				
				if( var18_shared != null ) { var18_shared.close(); var18_shared = null; }
				var21_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_34() throws Exception {
				state = 36;				
				if (!var19_filter.moveNext()) {state = 35; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))))) {state = 34; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))))) {state = 34; return false; }
				var20_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var19_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_35() throws Exception {
				state = 32;				
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				return false;
			}
			private boolean moveNext_36() throws Exception {
				state = 36;				
				if (!var20_filter.moveNext()) {state = 37; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var20_filter.current()))))))))) {state = 36; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RoofRValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var20_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_37() throws Exception {
				state = 34;				
				if( var20_filter != null ) { var20_filter.close(); var20_filter = null; }
				return false;
			}
			private boolean moveNext_39() throws Exception {
				state = 41;				
				if (!var21_shared.moveNext()) {state = 40; return false; }
				var22_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var21_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_40() throws Exception {
				state = 46;				
				if( var21_shared != null ) { var21_shared.close(); var21_shared = null; }
				var24_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_41() throws Exception {
				state = 43;				
				if (!var22_filter.moveNext()) {state = 42; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq13_map(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))))) {state = 41; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq14_map(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))))) {state = 41; return false; }
				var23_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var22_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_42() throws Exception {
				state = 39;				
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				return false;
			}
			private boolean moveNext_43() throws Exception {
				state = 43;				
				if (!var23_filter.moveNext()) {state = 44; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var23_filter.current()))))))))) {state = 43; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RoofExteriorSolarAbsorptance", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.functions.Core.subtract(new java.math.BigDecimal("1"), com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var23_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_44() throws Exception {
				state = 41;				
				if( var23_filter != null ) { var23_filter.close(); var23_filter = null; }
				return false;
			}
			private boolean moveNext_46() throws Exception {
				state = 48;				
				if (!var24_shared.moveNext()) {state = 47; return false; }
				var25_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var24_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_47() throws Exception {
				state = 0;				
				if( var24_shared != null ) { var24_shared.close(); var24_shared = null; }
				return false;
			}
			private boolean moveNext_48() throws Exception {
				state = 50;				
				if (!var25_filter.moveNext()) {state = 49; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq11_map(((com.altova.mapforce.IMFNode)(var25_filter.current()))))))))) {state = 48; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq12_map(((com.altova.mapforce.IMFNode)(var25_filter.current()))))))))) {state = 48; return false; }
				var26_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var25_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_49() throws Exception {
				state = 46;				
				if( var25_filter != null ) { var25_filter.close(); var25_filter = null; }
				return false;
			}
			private boolean moveNext_50() throws Exception {
				state = 50;				
				if (!var26_filter.moveNext()) {state = 51; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var26_filter.current()))))))))) {state = 50; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq479_seq_(((com.altova.mapforce.IMFNode)(var26_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_51() throws Exception {
				state = 48;				
				if( var26_filter != null ) { var26_filter.close(); var26_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_shared != null ) { var11_shared.close(); var11_shared = null; }
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				if( var14_shared != null ) { var14_shared.close(); var14_shared = null; }
				if( var20_filter != null ) { var20_filter.close(); var20_filter = null; }
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				if( var18_shared != null ) { var18_shared.close(); var18_shared = null; }
				if( var23_filter != null ) { var23_filter.close(); var23_filter = null; }
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				if( var21_shared != null ) { var21_shared.close(); var21_shared = null; }
				if( var26_filter != null ) { var26_filter.close(); var26_filter = null; }
				if( var25_filter != null ) { var25_filter.close(); var25_filter = null; }
				if( var24_shared != null ) { var24_shared.close(); var24_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq471_if_any implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IMFNode var3_cur_n;
	
		public seq471_if_any(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IMFNode var3_cur_n)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
			this.var3_cur_n = var3_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq471_if_any closure;
			public Enumerator(seq471_if_any closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq472_seq_(closure.var1_current, closure.var2_current, closure.var3_cur_n))))))) {state = 2; return false; }
				current = "Built up";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = "Unknown";
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq472_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
		com.altova.mapforce.IMFNode var3_cur_n;
	
		public seq472_seq_(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current, com.altova.mapforce.IMFNode var3_cur_n)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
			this.var3_cur_n = var3_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq472_seq_ closure;
			public Enumerator(seq472_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_current));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var3_cur_n));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq473_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq473_if_cast(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq473_if_cast closure;
			public Enumerator(seq473_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_cur_n)))) {state = 2; return false; }
				current = "Metal";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = "Unknown";
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq474_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq474_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq474_if_cast closure;
			public Enumerator(seq474_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq475_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq475_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq475_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq475_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq475_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq71_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq476_map(closure.var1_shared, ((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq476_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq476_map(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_shared = var1_shared;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq476_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq476_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var2_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))) {state = 4; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 2;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq477_map(closure.var1_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq477_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq477_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq477_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq477_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq454_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq478_if_cast implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IMFNode var2_cur_Cell;
	
		public seq478_if_cast(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IMFNode var2_cur_Cell)
		{
			this.var1_shared = var1_shared;
			this.var2_cur_Cell = var2_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq478_if_cast closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq478_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_cur_Cell)))) {state = 2; return false; }
				current = "Concrete";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq71_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))) {state = 9; return false; }
				current = "Steel";
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 12;				
				var5_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var5_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 12; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 7;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 14;				
				if (!var6_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 14; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 16; return false; }
				current = "Wood";
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 14;				
				current = "Unknown";
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq479_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq479_seq_(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq479_seq_ closure;
			public Enumerator(seq479_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Roof condition"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_cur_Cell)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq480_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq480_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq480_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			IEnumerator var8_shared;
			com.altova.mapforce.IEnumerable var5_Row;
			IEnumerator var9_filter;
			IEnumerator var6_filter;
			IEnumerator var15_shared;
			com.altova.mapforce.IEnumerable var10_Row;
			IEnumerator var16_filter;
			IEnumerator var11_filter;
			IEnumerator var7_filter;
			com.altova.mapforce.IEnumerable var17_Row;
			IEnumerator var18_filter;
			IEnumerator var12_filter;
			IEnumerator var13_filter;
			IEnumerator var19_filter;
			IEnumerator var14_filter;
			public Enumerator(seq480_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 32:	if (moveNext_32()) return true; break;
					case 33:	if (moveNext_33()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), closure.var1_shared);
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FenestrationType", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq481_join(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_shared.moveNext()) {state = 5; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 13;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var8_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq141_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 6; return false; }
				var5_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current()))));
				var6_filter = (var5_Row).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var6_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq72_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq73_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 8; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 10;				
				if (!var7_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq486_if_cast(((com.altova.mapforce.IMFNode)(var7_filter.current())), var5_Row))))) {state = 10; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FenestrationFrameMaterial", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq490_if_cast(var5_Row, ((com.altova.mapforce.IMFNode)(var7_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var8_shared.moveNext()) {state = 14; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var8_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 26;				
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				var15_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 17;				
				if (!var9_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq141_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 15; return false; }
				var10_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current()))));
				var11_filter = (var10_Row).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 19;				
				if (!var11_filter.moveNext()) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq191_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq192_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 17; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 15;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 21;				
				if (!var12_filter.moveNext()) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 19; return false; }
				var13_filter = (var10_Row).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 17;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 23;				
				if (!var13_filter.moveNext()) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq198_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq199_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 21; return false; }
				var14_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var13_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 19;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 23;				
				if (!var14_filter.moveNext()) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq186_seq_(((com.altova.mapforce.IMFNode)(var14_filter.current())), ((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 23; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("GlassType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Low e"));
				pos++;
				return true;
			}
			private boolean moveNext_24() throws Exception {
				state = 21;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 28;				
				if (!var15_shared.moveNext()) {state = 27; return false; }
				var16_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var15_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 0;				
				if( var15_shared != null ) { var15_shared.close(); var15_shared = null; }
				return false;
			}
			private boolean moveNext_28() throws Exception {
				state = 30;				
				if (!var16_filter.moveNext()) {state = 29; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq141_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 28; return false; }
				var17_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var16_filter.current()))));
				var18_filter = (var17_Row).enumerator();
				return false;
			}
			private boolean moveNext_29() throws Exception {
				state = 26;				
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				return false;
			}
			private boolean moveNext_30() throws Exception {
				state = 32;				
				if (!var18_filter.moveNext()) {state = 31; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq321_map(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))))) {state = 30; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq322_map(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))))) {state = 30; return false; }
				var19_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var18_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_31() throws Exception {
				state = 28;				
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				return false;
			}
			private boolean moveNext_32() throws Exception {
				state = 32;				
				if (!var19_filter.moveNext()) {state = 33; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))))) {state = 32; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq491_if_cast(var17_Row, ((com.altova.mapforce.IMFNode)(var19_filter.current()))))))) {state = 32; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FenestrationGlassLayers", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq499_if_cast(((com.altova.mapforce.IMFNode)(var19_filter.current())), var17_Row)))));
				pos++;
				return true;
			}
			private boolean moveNext_33() throws Exception {
				state = 30;				
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				if( var15_shared != null ) { var15_shared.close(); var15_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq481_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq481_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq481_join closure;
			IEnumerator var2_shared;
			IEnumerator var3_filter;
			com.altova.mapforce.IEnumerable var4_Row;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq481_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var2_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq141_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				var4_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current()))));
				var5_filter = (var4_Row).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq72_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq73_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var6_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq482_if_cast(((com.altova.mapforce.IMFNode)(var6_filter.current())), var4_Row))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Window", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq187_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq482_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq482_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq482_if_cast closure;
			public Enumerator(seq482_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq483_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq483_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq483_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq483_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq483_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq74_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq75_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq484_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq484_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq484_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq484_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq484_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))) {state = 4; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 2;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq485_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq485_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq485_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq485_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq485_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq277_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq278_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq454_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq486_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq486_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq486_if_cast closure;
			public Enumerator(seq486_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq487_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq487_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq487_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq487_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq487_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq74_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq75_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq488_map(closure.var1_shared, ((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq488_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq488_map(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_shared = var1_shared;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq488_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq488_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var2_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))) {state = 4; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 2;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq489_map(closure.var1_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq489_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq489_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq489_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq489_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq277_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq278_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq454_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq490_if_cast implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IMFNode var2_cur_Cell;
	
		public seq490_if_cast(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IMFNode var2_cur_Cell)
		{
			this.var1_shared = var1_shared;
			this.var2_cur_Cell = var2_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq490_if_cast closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq490_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_cur_Cell)))) {state = 2; return false; }
				current = "Aluminum no thermal break";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq74_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq75_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))) {state = 9; return false; }
				current = "Aluminum thermal break";
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 12;				
				var5_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var5_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq277_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq278_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 12; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 7;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 14;				
				if (!var6_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 14; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 16; return false; }
				current = "Wood";
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 14;				
				current = "Unknown";
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq491_if_cast implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IMFNode var2_cur_Cell;
	
		public seq491_if_cast(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IMFNode var2_cur_Cell)
		{
			this.var1_shared = var1_shared;
			this.var2_cur_Cell = var2_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq491_if_cast closure;
			public Enumerator(seq491_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_cur_Cell)))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq492_map(closure.var1_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq492_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq492_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq492_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq492_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq325_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq326_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq493_map(closure.var1_shared, ((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq493_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IMFNode var2_cur_Cell;
	
		public seq493_map(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IMFNode var2_cur_Cell)
		{
			this.var1_shared = var1_shared;
			this.var2_cur_Cell = var2_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq493_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq493_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var2_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq494_map(closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq494_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq494_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq494_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq494_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq191_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq192_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq495_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq495_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq495_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq495_map closure;
			IEnumerator var3_filter;
			boolean var4_cast;
			public Enumerator(seq495_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				var4_cast = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))));
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq450_seq_(var4_cast))))))) {state = 4; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 2;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq496_map(closure.var2_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq496_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq496_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq496_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq496_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq193_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq194_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq497_map(((com.altova.mapforce.IMFNode)(var2_filter.current())), closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq497_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq497_map(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq497_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq497_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq498_map(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq498_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq498_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq498_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq498_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq198_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq199_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq454_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq499_if_cast implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq499_if_cast(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq499_if_cast closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			IEnumerator var9_filter;
			IEnumerator var10_filter;
			public Enumerator(seq499_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var1_current)))) {state = 2; return false; }
				current = "Single pane";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq325_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq326_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var5_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq191_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq192_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 9; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq456_seq_(((com.altova.mapforce.IMFNode)(var6_filter.current())), ((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 13; return false; }
				current = "Double pane";
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 16;				
				var7_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var7_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq193_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq194_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 16; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 11;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var8_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 18; return false; }
				var9_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 22;				
				if (!var9_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq198_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq199_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 20; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 22;				
				if (!var10_filter.moveNext()) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq457_seq_(((com.altova.mapforce.IMFNode)(var8_filter.current())), ((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 24; return false; }
				current = "Triple pane";
				pos++;
				return true;
			}
			private boolean moveNext_23() throws Exception {
				state = 20;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 22;				
				current = "Unknown";
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq500_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq500_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq500_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq500_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq141_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq501_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq501_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq501_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			IEnumerator var6_shared;
			IEnumerator var7_filter;
			IEnumerator var5_filter;
			IEnumerator var9_shared;
			IEnumerator var10_filter;
			IEnumerator var8_filter;
			IEnumerator var12_shared;
			IEnumerator var13_filter;
			IEnumerator var11_filter;
			IEnumerator var15_shared;
			IEnumerator var16_filter;
			IEnumerator var14_filter;
			IEnumerator var18_shared;
			com.altova.mapforce.IEnumerable var19_Row;
			IEnumerator var17_filter;
			IEnumerator var20_filter;
			IEnumerator var21_filter;
			public Enumerator(seq501_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 32:	if (moveNext_32()) return true; break;
					case 33:	if (moveNext_33()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
					case 35:	if (moveNext_35()) return true; break;
					case 36:	if (moveNext_36()) return true; break;
					case 38:	if (moveNext_38()) return true; break;
					case 39:	if (moveNext_39()) return true; break;
					case 40:	if (moveNext_40()) return true; break;
					case 41:	if (moveNext_41()) return true; break;
					case 42:	if (moveNext_42()) return true; break;
					case 43:	if (moveNext_43()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box("Foundation1"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 10;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var6_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq46_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq47_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("GroundCoupling", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Basement", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq502_join(closure.var2_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var6_shared.moveNext()) {state = 11; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 17;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				var9_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var7_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq133_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq134_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 12; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 14;				
				if (!var8_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 14; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_filter.current())))))) {state = 14; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("GroundCoupling", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("SlabOnGrade", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq187_seq_()))));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 19;				
				if (!var9_shared.moveNext()) {state = 18; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var9_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 24;				
				if( var9_shared != null ) { var9_shared.close(); var9_shared = null; }
				var12_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 21;				
				if (!var10_filter.moveNext()) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq136_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq137_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 19; return false; }
				var11_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var10_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 17;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 21;				
				if (!var11_filter.moveNext()) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 21; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var11_filter.current())))))) {state = 21; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("GroundCoupling", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Crawlspace", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq187_seq_()))));
				pos++;
				return true;
			}
			private boolean moveNext_22() throws Exception {
				state = 19;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 26;				
				if (!var12_shared.moveNext()) {state = 25; return false; }
				var13_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var12_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 31;				
				if( var12_shared != null ) { var12_shared.close(); var12_shared = null; }
				var15_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 28;				
				if (!var13_filter.moveNext()) {state = 27; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq508_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq509_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 26; return false; }
				var14_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var13_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 24;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_28() throws Exception {
				state = 28;				
				if (!var14_filter.moveNext()) {state = 29; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 28; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var14_filter.current())))))) {state = 28; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("GroundCoupling", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Other", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var14_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_29() throws Exception {
				state = 26;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}
			private boolean moveNext_31() throws Exception {
				state = 33;				
				if (!var15_shared.moveNext()) {state = 32; return false; }
				var16_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var15_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_32() throws Exception {
				state = 38;				
				if( var15_shared != null ) { var15_shared.close(); var15_shared = null; }
				var18_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_33() throws Exception {
				state = 35;				
				if (!var16_filter.moveNext()) {state = 34; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq209_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 33; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq210_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 33; return false; }
				var17_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var16_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_34() throws Exception {
				state = 31;				
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				return false;
			}
			private boolean moveNext_35() throws Exception {
				state = 35;				
				if (!var17_filter.moveNext()) {state = 36; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 35; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var17_filter.current())))))) {state = 35; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("GroundCoupling", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Unknown", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var17_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_36() throws Exception {
				state = 33;				
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				return false;
			}
			private boolean moveNext_38() throws Exception {
				state = 40;				
				if (!var18_shared.moveNext()) {state = 39; return false; }
				var19_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var18_shared.current()))));
				var20_filter = (var19_Row).enumerator();
				return false;
			}
			private boolean moveNext_39() throws Exception {
				state = 0;				
				if( var18_shared != null ) { var18_shared.close(); var18_shared = null; }
				return false;
			}
			private boolean moveNext_40() throws Exception {
				state = 42;				
				if (!var20_filter.moveNext()) {state = 41; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq43_map(((com.altova.mapforce.IMFNode)(var20_filter.current()))))))))) {state = 40; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq44_map(((com.altova.mapforce.IMFNode)(var20_filter.current()))))))))) {state = 40; return false; }
				var21_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var20_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_41() throws Exception {
				state = 38;				
				if( var20_filter != null ) { var20_filter.close(); var20_filter = null; }
				return false;
			}
			private boolean moveNext_42() throws Exception {
				state = 42;				
				if (!var21_filter.moveNext()) {state = 43; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var21_filter.current()))))))))) {state = 42; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq510_if_cast(var19_Row, ((com.altova.mapforce.IMFNode)(var21_filter.current()))))))) {state = 42; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FloorConstructionType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.last((new seq515_if_cast(var19_Row, ((com.altova.mapforce.IMFNode)(var21_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_43() throws Exception {
				state = 40;				
				if( var21_filter != null ) { var21_filter.close(); var21_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_shared != null ) { var9_shared.close(); var9_shared = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_shared != null ) { var12_shared.close(); var12_shared = null; }
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				if( var15_shared != null ) { var15_shared.close(); var15_shared = null; }
				if( var21_filter != null ) { var21_filter.close(); var21_filter = null; }
				if( var20_filter != null ) { var20_filter.close(); var20_filter = null; }
				if( var18_shared != null ) { var18_shared.close(); var18_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq502_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq502_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq502_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_filter;
			IEnumerator var4_shared;
			IEnumerator var5_filter;
			public Enumerator(seq502_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq23_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_filter = new com.altova.functions.Core.SequenceCache((new seq503_filter(((com.altova.mapforce.IMFNode)(var2_filter.current())))));
				var4_shared = (var3_filter).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_shared.moveNext()) {state = 5; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_shared != null ) { var4_shared.close(); var4_shared = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current()))), com.altova.CoreTypes.decimalToString(new java.math.BigDecimal("0.5"))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq505_map(var3_filter))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FoundationWallRValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal((java.lang.String)com.altova.functions.Core.last((new seq507_cond_join(var3_filter, ((com.altova.mapforce.IMFNode)(var5_filter.current())))))))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_shared != null ) { var4_shared.close(); var4_shared = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq503_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq503_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq503_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq503_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq504_filter(closure.var1_current))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq71_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq504_filter implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq504_filter(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq504_filter closure;
			IEnumerator var2_Row;
			public Enumerator(seq504_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_Row = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_Row.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var2_Row.current()))))))))) {state = 2; return false; }
				current = var2_Row.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_Row != null ) { var2_Row.close(); var2_Row = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_Row != null ) { var2_Row.close(); var2_Row = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq505_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq505_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq505_map closure;
			IEnumerator var2_shared;
			public Enumerator(seq505_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq506_map(((com.altova.mapforce.IMFNode)(var2_shared.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq506_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq506_map(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq506_map closure;
			IEnumerator var2_Cell;
			public Enumerator(seq506_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_Cell = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_Cell.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var2_Cell.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_Cell != null ) { var2_Cell.close(); var2_Cell = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_Cell != null ) { var2_Cell.close(); var2_Cell = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq507_cond_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq507_cond_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_shared = var1_shared;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq507_cond_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			public Enumerator(seq507_cond_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.greater(com.altova.CoreTypes.nodeToString(closure.var2_current), com.altova.CoreTypes.decimalToString(new java.math.BigDecimal("0.5"))))) {state = 0; return false; }
				var3_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq508_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq508_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq508_map closure;
			IEnumerator var2_r;
			public Enumerator(seq508_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrGreater(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(38L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq509_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq509_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq509_map closure;
			IEnumerator var2_r;
			public Enumerator(seq509_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_r = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_r.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equalOrLess(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_r.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(38L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_r != null ) { var2_r.close(); var2_r = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq510_if_cast implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IMFNode var2_cur_Cell;
	
		public seq510_if_cast(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IMFNode var2_cur_Cell)
		{
			this.var1_shared = var1_shared;
			this.var2_cur_Cell = var2_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq510_if_cast closure;
			public Enumerator(seq510_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_cur_Cell)))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq511_map(closure.var1_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq511_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq511_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq511_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq511_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq38_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq512_map(closure.var1_shared, ((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq512_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq512_map(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_shared = var1_shared;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq512_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq512_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var2_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))) {state = 4; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 2;				
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq513_map(closure.var1_shared)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq513_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq513_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq513_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq513_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq60_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq61_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq514_map(((com.altova.mapforce.IMFNode)(var2_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq514_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq514_map(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq514_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq514_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq515_if_cast implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IMFNode var2_cur_Cell;
	
		public seq515_if_cast(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IMFNode var2_cur_Cell)
		{
			this.var1_shared = var1_shared;
			this.var2_cur_Cell = var2_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq515_if_cast closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq515_if_cast closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(closure.var2_cur_Cell)))) {state = 2; return false; }
				current = "Concrete solid";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq38_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))) {state = 9; return false; }
				current = "Steel frame";
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 12;				
				var5_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var5_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq60_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq61_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 12; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 7;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 14;				
				if (!var6_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 14; return false; }
				if (!(com.altova.CoreTypes.parseBoolean(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 14; return false; }
				current = "Wood frame";
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq516_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq516_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq516_join closure;
			IEnumerator var3_filter;
			com.altova.mapforce.IEnumerable var4_Row;
			IEnumerator var5_filter;
			com.altova.mapforce.IEnumerable var6_Cell;
			IEnumerator var7_filter;
			com.altova.mapforce.IEnumerable var8_filter;
			public Enumerator(seq516_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 4;				
				if (!(com.altova.functions.Core.exists(closure.var2_shared))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CriticalITSystem", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ITSystemType", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq337_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				var4_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current()))));
				var5_filter = (var4_Row).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				var6_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current()))));
				var7_filter = (var6_Cell).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var7_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 9; return false; }
				if (!(com.altova.functions.Core.equal("Critical IT System", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var7_filter.current())))))) {state = 9; return false; }
				var8_filter = new com.altova.functions.Core.SequenceCache((new seq339_filter(var4_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CriticalITSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq517_join(var8_filter, var6_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq517_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq517_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq517_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq517_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("ITSystem", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq415_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				var6_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var6_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq518_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq518_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq518_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Row;
			IEnumerator var4_filter;
			com.altova.mapforce.IEnumerable var5_Cell;
			IEnumerator var6_filter;
			com.altova.mapforce.IEnumerable var7_filter;
			public Enumerator(seq518_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq337_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current()))));
				var6_filter = (var5_Cell).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				if (!(com.altova.functions.Core.equal("Plug Load", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 6; return false; }
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq339_filter(var3_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PlugLoad", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq519_join(var7_filter, var5_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq519_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq519_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq519_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq519_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("PlugLoad", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq415_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				var6_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var6_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq520_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq520_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq520_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Row;
			IEnumerator var4_filter;
			com.altova.mapforce.IEnumerable var5_Cell;
			IEnumerator var6_filter;
			com.altova.mapforce.IEnumerable var7_filter;
			public Enumerator(seq520_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq337_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current()))));
				var6_filter = (var5_Cell).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				if (!(com.altova.functions.Core.equal("Process Load", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 6; return false; }
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq339_filter(var3_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ProcessLoad", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq521_join(var7_filter, var5_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq521_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq521_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq521_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq521_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("ProcessLoad", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq415_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				var6_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var6_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq522_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq522_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq522_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Row;
			IEnumerator var4_filter;
			com.altova.mapforce.IEnumerable var5_Cell;
			IEnumerator var6_filter;
			com.altova.mapforce.IEnumerable var7_filter;
			public Enumerator(seq522_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq337_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current()))));
				var6_filter = (var5_Cell).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				if (!(com.altova.functions.Core.equal("Conveyance", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 6; return false; }
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq339_filter(var3_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ConveyanceSystem", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq523_join(var7_filter, var5_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq523_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq523_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq523_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq523_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("Conveyance", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var6_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq415_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq524_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq524_map(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq524_map closure;
			IEnumerator var2_Name;
			public Enumerator(seq524_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_Name = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_n)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_Name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_Name.current()))), "L0 - Annual Summary");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq525_if_equal implements IEnumerable
	{
		java.lang.String var1_shared;
	
		public seq525_if_equal(java.lang.String var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq525_if_equal closure;
			public Enumerator(seq525_if_equal closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Core.equal(closure.var1_shared, "PV"))) {state = 2; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PV", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq187_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Other", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("OtherEnergyGenerationTechnology", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(closure.var1_shared))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq526_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq526_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq526_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Row;
			IEnumerator var4_filter;
			com.altova.mapforce.IEnumerable var5_Cell;
			IEnumerator var6_filter;
			com.altova.mapforce.IEnumerable var7_filter;
			public Enumerator(seq526_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq337_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current()))));
				var6_filter = (var5_Cell).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				if (!(com.altova.functions.Core.equal("Pool", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 6; return false; }
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq339_filter(var3_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Pool", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq527_join(var7_filter, var5_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq527_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq527_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq527_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq527_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("Pool", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var6_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq415_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq528_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq528_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq528_join closure;
			IEnumerator var2_filter;
			com.altova.mapforce.IEnumerable var3_Row;
			IEnumerator var4_filter;
			com.altova.mapforce.IEnumerable var5_Cell;
			IEnumerator var6_filter;
			com.altova.mapforce.IEnumerable var7_filter;
			public Enumerator(seq528_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq337_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current()))));
				var4_filter = (var3_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq63_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current()))));
				var6_filter = (var5_Cell).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var6_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 6; return false; }
				if (!(com.altova.functions.Core.equal("Water Use", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))) {state = 6; return false; }
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq339_filter(var3_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("WaterUse", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq529_join(var7_filter, var5_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq529_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq529_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq529_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq529_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box(com.altova.functions.Core.concat("WaterUse", com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("YearInstalled", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.GYearToString(com.altova.CoreTypes.parseGYear(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Location", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq415_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				var6_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var6_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Quantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq530_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq530_map(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq530_map closure;
			IEnumerator var2_Name;
			public Enumerator(seq530_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_Name = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_n)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_Name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_Name.current()))), "L2 - EEM Summary");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq531_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq531_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq531_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq531_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq11_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq532_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq532_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq532_join closure;
			IEnumerator var3_filter;
			com.altova.mapforce.IEnumerable var4_Cell;
			IEnumerator var5_filter;
			public Enumerator(seq532_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq42_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				var4_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current()))));
				var5_filter = (var4_Cell).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var5_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Measure", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq533_join(((com.altova.mapforce.IMFNode)(var5_filter.current())), closure.var1_shared, var4_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq533_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq533_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq533_join closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			com.altova.mapforce.IEnumerable var9_filter;
			public Enumerator(seq533_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var4_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var4_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq534_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("SystemCategoryAffected", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("LongDescription", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_current)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				var5_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureSavingsAnalysis", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq535_join(closure.var2_shared, closure.var3_shared, ((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var6_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var6_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq344_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 9; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UsefulLife", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				var7_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var7_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeasureFirstCost", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.doubleToDecimal(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				var8_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var8_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq349_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 15; return false; }
				var9_filter = new com.altova.functions.Core.SequenceCache((new seq539_filter(closure.var2_shared)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq541_join(((com.altova.mapforce.IMFNode)(var8_filter.current())), var9_filter, closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 0;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq534_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_Cell;
	
		public seq534_map(com.altova.mapforce.IMFNode var1_cur_Cell)
		{
			this.var1_cur_Cell = var1_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq534_map closure;
			IEnumerator var2_n;
			public Enumerator(seq534_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_n = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("n", ""), closure.var1_cur_Cell)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_n.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_n.current())))))))), com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(12L)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_n != null ) { var2_n.close(); var2_n = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq535_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IMFNode var3_current;
	
		public seq535_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IMFNode var3_current)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_current = var3_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq535_join closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq535_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualSavingsCost", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.doubleToInteger(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(closure.var3_current))))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualSavingsByFuels", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq536_join(closure.var1_shared, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var4_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("SummerPeakElectricityReduction", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.doubleToDecimal(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq123_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FundingFromIncentives", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.doubleToDecimal(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var6_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 10;				
				if (!var6_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq351_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("SimplePayback", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.doubleToDecimal(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq536_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq536_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq536_join closure;
			IEnumerator var3_filter;
			IEnumerator var5_filter;
			double var4_cast;
			double var6_cast;
			java.lang.String var7_cast;
			public Enumerator(seq536_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				var4_cast = com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualSavingsByFuel", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq537_join(closure.var1_shared, var4_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var5_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 5; return false; }
				var6_cast = com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current()))));
				var7_cast = com.altova.CoreTypes.doubleToString(var6_cast);
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualSavingsByFuel", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq538_seq_(var7_cast, var6_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq537_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		double var2_shared;
	
		public seq537_join(com.altova.mapforce.IEnumerable var1_shared, double var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq537_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq537_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 7;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf24_inputtoresult.eval(com.altova.CoreTypes.doubleToString(closure.var2_shared))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EnergyResource", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf23_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualSavingsNativeUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.doubleToDecimal(closure.var2_shared))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq538_seq_ implements IEnumerable
	{
		java.lang.String var1_shared;
		double var2_shared;
	
		public seq538_seq_(java.lang.String var1_shared, double var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq538_seq_ closure;
			public Enumerator(seq538_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EnergyResource", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf25_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf26_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualSavingsNativeUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.doubleToDecimal(closure.var2_shared))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq539_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq539_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq539_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq539_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq540_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq540_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq540_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq540_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq540_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq541_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq541_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq541_join closure;
			IEnumerator var4_filter;
			public Enumerator(seq541_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq542_join(closure.var1_current, closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var4_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var4_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 3; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq543_join(closure.var2_shared, ((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq542_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq542_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq542_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			public Enumerator(seq542_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.doubleToString(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(closure.var1_current)))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq349_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq543_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq543_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_shared = var1_shared;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq543_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			public Enumerator(seq543_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.doubleToString(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(closure.var2_current)))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq544_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq544_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq544_join closure;
			IEnumerator var3_shared;
			com.altova.mapforce.IEnumerable var4_Worksheet;
			IEnumerator var5_filter;
			IEnumerator var15_shared;
			IEnumerator var16_filter;
			com.altova.mapforce.IEnumerable var6_Row;
			IEnumerator var7_filter;
			IEnumerator var17_filter;
			IEnumerator var8_filter;
			IEnumerator var18_filter;
			com.altova.mapforce.IEnumerable var9_filter;
			com.altova.mapforce.IEnumerable var10_filter;
			com.altova.mapforce.IEnumerable var11_filter;
			com.altova.mapforce.IEnumerable var12_filter;
			com.altova.mapforce.IEnumerable var13_filter;
			com.altova.mapforce.IEnumerable var14_filter;
			public Enumerator(seq544_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_Worksheet = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current()))));
				var5_filter = (var4_Worksheet).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 11;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var15_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq545_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 4; return false; }
				var6_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current()))));
				var7_filter = (var6_Row).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var7_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq18_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq19_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 6; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var8_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 8; return false; }
				var9_filter = new com.altova.functions.Core.SequenceCache((new seq546_filter(var4_Worksheet)));
				var10_filter = new com.altova.functions.Core.SequenceCache((new seq547_filter(var4_Worksheet)));
				var11_filter = new com.altova.functions.Core.SequenceCache((new seq549_filter(var4_Worksheet)));
				var12_filter = new com.altova.functions.Core.SequenceCache((new seq550_filter(var4_Worksheet)));
				var13_filter = new com.altova.functions.Core.SequenceCache((new seq551_filter(var6_Row)));
				var14_filter = new com.altova.functions.Core.SequenceCache((new seq553_filter(var6_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Scenarios", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq555_seq_(var13_filter, var9_filter, var10_filter, var12_filter, var11_filter, var14_filter, var6_Row, ((com.altova.mapforce.IMFNode)(var8_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var15_shared.moveNext()) {state = 12; return false; }
				var16_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var15_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 0;				
				if( var15_shared != null ) { var15_shared.close(); var15_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AuditorContactID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var16_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq524_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 13; return false; }
				var17_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var16_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 17;				
				if (!var17_filter.moveNext()) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq18_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq19_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 15; return false; }
				var18_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var17_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 17;				
				if (!var18_filter.moveNext()) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))))) {state = 17; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AuditDate", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.dateToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_18() throws Exception {
				state = 15;				
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				if( var15_shared != null ) { var15_shared.close(); var15_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq545_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq545_map(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq545_map closure;
			IEnumerator var2_Name;
			public Enumerator(seq545_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_Name = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_n)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_Name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_Name.current()))), "L0 - Metered Energy");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq546_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq546_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq546_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq546_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq6_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq547_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq547_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq547_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq547_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq548_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq548_map implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_cur_n;
	
		public seq548_map(com.altova.mapforce.IMFNode var1_cur_n)
		{
			this.var1_cur_n = var1_cur_n;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq548_map closure;
			IEnumerator var2_Name;
			public Enumerator(seq548_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_Name = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("Name", ""), closure.var1_cur_n)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_Name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Xlsx.equalignorecase(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_Name.current()))), "L0 - Delivered Energy");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_Name != null ) { var2_Name.close(); var2_Name = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq549_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq549_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq549_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq549_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq524_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq550_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq550_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq550_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq550_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq530_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq551_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq551_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq551_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq551_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq552_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq27_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq552_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq552_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq552_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq552_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq26_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq553_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq553_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq553_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq553_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq554_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq42_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq554_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq554_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq554_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq554_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq13_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq555_seq_ implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
		com.altova.mapforce.IEnumerable var5_shared;
		com.altova.mapforce.IEnumerable var6_shared;
		com.altova.mapforce.IEnumerable var7_shared;
		com.altova.mapforce.IMFNode var8_cur_Cell;
	
		public seq555_seq_(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared, com.altova.mapforce.IEnumerable var4_shared, com.altova.mapforce.IEnumerable var5_shared, com.altova.mapforce.IEnumerable var6_shared, com.altova.mapforce.IEnumerable var7_shared, com.altova.mapforce.IMFNode var8_cur_Cell)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
			this.var6_shared = var6_shared;
			this.var7_shared = var7_shared;
			this.var8_cur_Cell = var8_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq555_seq_ closure;
			public Enumerator(seq555_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Scenario", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq556_join(closure.var1_shared, closure.var2_shared, closure.var3_shared, closure.var5_shared, closure.var6_shared, closure.var7_shared, closure.var8_cur_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Scenario", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq611_join(closure.var4_shared)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq556_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
		com.altova.mapforce.IEnumerable var5_shared;
		com.altova.mapforce.IEnumerable var6_shared;
		com.altova.mapforce.IMFNode var7_cur_Cell;
	
		public seq556_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared, com.altova.mapforce.IEnumerable var4_shared, com.altova.mapforce.IEnumerable var5_shared, com.altova.mapforce.IEnumerable var6_shared, com.altova.mapforce.IMFNode var7_cur_Cell)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
			this.var6_shared = var6_shared;
			this.var7_cur_Cell = var7_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq556_join closure;
			IEnumerator var8_shared;
			IEnumerator var9_filter;
			IEnumerator var11_shared;
			IEnumerator var12_filter;
			IEnumerator var10_filter;
			IEnumerator var14_shared;
			IEnumerator var15_filter;
			IEnumerator var13_filter;
			IEnumerator var17_shared;
			IEnumerator var18_filter;
			IEnumerator var16_filter;
			IEnumerator var19_filter;
			public Enumerator(seq556_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 32:	if (moveNext_32()) return true; break;
					case 33:	if (moveNext_33()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TemporalStatus", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf27_inputtoresult.eval(com.altova.CoreTypes.nodeToString(closure.var7_cur_Cell))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("WeatherType", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq557_join(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUses", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq558_join(closure.var1_shared, closure.var2_shared, closure.var3_shared, closure.var4_shared, closure.var6_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeriesData", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq579_join(closure.var3_shared, closure.var5_shared, closure.var6_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AllResourceTotals", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq606_join(closure.var1_shared, closure.var4_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				var8_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var8_shared.moveNext()) {state = 8; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var8_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 14;				
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				var11_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var9_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq38_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 9; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var10_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualHeatingDegreeDays", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var10_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 16;				
				if (!var11_shared.moveNext()) {state = 15; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var11_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 21;				
				if( var11_shared != null ) { var11_shared.close(); var11_shared = null; }
				var14_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var12_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq60_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq61_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 16; return false; }
				var13_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var12_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 14;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 18;				
				if (!var13_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 18; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualCoolingDegreeDays", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var13_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 23;				
				if (!var14_shared.moveNext()) {state = 22; return false; }
				var15_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var14_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 28;				
				if( var14_shared != null ) { var14_shared.close(); var14_shared = null; }
				var17_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if (!var15_filter.moveNext()) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq37_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq38_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 23; return false; }
				var16_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var15_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 21;				
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 25;				
				if (!var16_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 25; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("HDDBaseTemperature", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var16_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				return false;
			}
			private boolean moveNext_28() throws Exception {
				state = 30;				
				if (!var17_shared.moveNext()) {state = 29; return false; }
				var18_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var17_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_29() throws Exception {
				state = 0;				
				if( var17_shared != null ) { var17_shared.close(); var17_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("LinkedPremises", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Facility", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("LinkedFacilityID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("Building1"))))))));
				pos++;
				return true;
			}
			private boolean moveNext_30() throws Exception {
				state = 32;				
				if (!var18_filter.moveNext()) {state = 31; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq60_map(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))))) {state = 30; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq61_map(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))))) {state = 30; return false; }
				var19_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var18_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_31() throws Exception {
				state = 28;				
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				return false;
			}
			private boolean moveNext_32() throws Exception {
				state = 32;				
				if (!var19_filter.moveNext()) {state = 33; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))))) {state = 32; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("CDDBaseTemperature", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var19_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_33() throws Exception {
				state = 30;				
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_shared != null ) { var11_shared.close(); var11_shared = null; }
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				if( var14_shared != null ) { var14_shared.close(); var14_shared = null; }
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				if( var17_shared != null ) { var17_shared.close(); var17_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq557_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq557_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq557_join closure;
			IEnumerator var2_shared;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq557_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq58_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq59_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Actual", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("WeatherDataSource", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf28_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq558_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
		com.altova.mapforce.IEnumerable var5_shared;
	
		public seq558_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared, com.altova.mapforce.IEnumerable var4_shared, com.altova.mapforce.IEnumerable var5_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq558_join closure;
			IEnumerator var6_shared;
			IEnumerator var7_filter;
			IEnumerator var11_shared;
			IEnumerator var12_filter;
			double var8_cast;
			IEnumerator var16_filter;
			com.altova.mapforce.IEnumerable var9_box;
			com.altova.mapforce.IEnumerable var10_filter;
			double var13_cast;
			IEnumerator var20_shared;
			com.altova.mapforce.IEnumerable var14_box;
			IEnumerator var17_filter;
			com.altova.mapforce.IEnumerable var15_filter;
			com.altova.mapforce.IEnumerable var21_Row;
			IEnumerator var22_filter;
			IEnumerator var25_shared;
			com.altova.mapforce.IEnumerable var18_vmf40_inputtoresult;
			com.altova.mapforce.IEnumerable var26_Row;
			com.altova.mapforce.IEnumerable var19_filter;
			IEnumerator var27_filter;
			IEnumerator var23_filter;
			com.altova.mapforce.IEnumerable var24_filter;
			IEnumerator var28_filter;
			java.lang.String var29_cast;
			com.altova.mapforce.IEnumerable var30_filter;
			public Enumerator(seq558_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var6_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var6_shared.moveNext()) {state = 3; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 7;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				var11_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var7_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 4; return false; }
				var8_cast = com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var7_filter.current()))));
				var9_box = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.mapforce.vmf.vmf32_inputtoresult.eval(var8_cast))));
				var10_filter = new com.altova.functions.Core.SequenceCache((new seq559_filter(closure.var5_shared)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUse", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq561_join(var10_filter, closure.var2_shared, var9_box, closure.var4_shared, var8_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var11_shared.moveNext()) {state = 8; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 12;				
				if( var11_shared != null ) { var11_shared.close(); var11_shared = null; }
				var16_filter = (closure.var5_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var12_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq344_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 9; return false; }
				var13_cast = com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var12_filter.current()))));
				var14_box = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.mapforce.vmf.vmf38_inputtoresult.eval(var13_cast))));
				var15_filter = new com.altova.functions.Core.SequenceCache((new seq559_filter(closure.var5_shared)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUse", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq564_join(var15_filter, closure.var2_shared, var14_box, closure.var4_shared, var13_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var16_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 12; return false; }
				var17_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var16_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 17;				
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				var20_shared = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 14;				
				if (!var17_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 14; return false; }
				if (!(com.altova.functions.Core.exists(com.mapforce.vmf.vmf40_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))) {state = 14; return false; }
				var18_vmf40_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf40_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var17_filter.current())))));
				var19_filter = new com.altova.functions.Core.SequenceCache((new seq567_filter(closure.var5_shared)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUse", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq569_join(closure.var1_shared, closure.var2_shared, closure.var4_shared, var19_filter, var18_vmf40_inputtoresult)));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 19;				
				if (!var20_shared.moveNext()) {state = 18; return false; }
				var21_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var20_shared.current()))));
				var22_filter = (var21_Row).enumerator();
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 24;				
				if( var20_shared != null ) { var20_shared.close(); var20_shared = null; }
				var25_shared = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 21;				
				if (!var22_filter.moveNext()) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq74_map(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))))) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq75_map(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))))) {state = 19; return false; }
				var23_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var22_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 17;				
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 21;				
				if (!var23_filter.moveNext()) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var23_filter.current()))))))))) {state = 21; return false; }
				var24_filter = new com.altova.functions.Core.SequenceCache((new seq567_filter(closure.var5_shared)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUse", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq572_join(closure.var2_shared, closure.var4_shared, var24_filter, var21_Row, ((com.altova.mapforce.IMFNode)(var23_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_22() throws Exception {
				state = 19;				
				if( var23_filter != null ) { var23_filter.close(); var23_filter = null; }
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 26;				
				if (!var25_shared.moveNext()) {state = 25; return false; }
				var26_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var25_shared.current()))));
				var27_filter = (var26_Row).enumerator();
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 0;				
				if( var25_shared != null ) { var25_shared.close(); var25_shared = null; }
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 28;				
				if (!var27_filter.moveNext()) {state = 27; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq74_map(((com.altova.mapforce.IMFNode)(var27_filter.current()))))))))) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq75_map(((com.altova.mapforce.IMFNode)(var27_filter.current()))))))))) {state = 26; return false; }
				var28_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var27_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 24;				
				if( var27_filter != null ) { var27_filter.close(); var27_filter = null; }
				return false;
			}
			private boolean moveNext_28() throws Exception {
				state = 28;				
				if (!var28_filter.moveNext()) {state = 29; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq344_map(((com.altova.mapforce.IMFNode)(var28_filter.current()))))))))) {state = 28; return false; }
				if (!(com.altova.functions.Core.exists(com.mapforce.vmf.vmf47_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var28_filter.current()))))))) {state = 28; return false; }
				var29_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var28_filter.current())));
				var30_filter = new com.altova.functions.Core.SequenceCache((new seq567_filter(closure.var5_shared)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUse", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq575_join(var26_Row, closure.var2_shared, closure.var4_shared, var29_cast, var30_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_29() throws Exception {
				state = 26;				
				if( var28_filter != null ) { var28_filter.close(); var28_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_shared != null ) { var11_shared.close(); var11_shared = null; }
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				if( var23_filter != null ) { var23_filter.close(); var23_filter = null; }
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				if( var20_shared != null ) { var20_shared.close(); var20_shared = null; }
				if( var28_filter != null ) { var28_filter.close(); var28_filter = null; }
				if( var27_filter != null ) { var27_filter.close(); var27_filter = null; }
				if( var25_shared != null ) { var25_shared.close(); var25_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq559_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq559_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq559_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq559_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq560_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq12_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq560_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq560_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq560_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq560_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq11_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq561_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
		double var5_shared;
	
		public seq561_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared, com.altova.mapforce.IEnumerable var4_shared, double var5_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq561_join closure;
			IEnumerator var6_shared;
			IEnumerator var7_filter;
			IEnumerator var8_shared;
			IEnumerator var9_filter;
			IEnumerator var11_shared;
			IEnumerator var12_filter;
			IEnumerator var10_filter;
			com.altova.mapforce.IEnumerable var13_Cell;
			IEnumerator var14_filter;
			public Enumerator(seq561_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box("Resource1"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var6_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var6_shared.moveNext()) {state = 4; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 8;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceBoundary", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf30_inputtoresult.eval(closure.var5_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var7_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EnergyResource", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf29_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var7_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf31_inputtoresult.eval(closure.var5_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PercentResource", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var3_shared);
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EndUse", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf33_inputtoresult.eval(closure.var5_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PercentEndUse", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var3_shared);
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualFuelUseNativeUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.doubleToDecimal(closure.var5_shared))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 14;				
				var8_shared = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 16;				
				if (!var8_shared.moveNext()) {state = 15; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var8_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 21;				
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				var11_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var9_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq15_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq16_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 16; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 14;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 18;				
				if (!var10_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 18; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualFuelUseConsistentUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.functions.Core.divide(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var10_filter.current())))), new java.math.BigDecimal("1000")))));
				pos++;
				return true;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 23;				
				if (!var11_shared.moveNext()) {state = 22; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var11_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 0;				
				if( var11_shared != null ) { var11_shared.close(); var11_shared = null; }
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if (!var12_filter.moveNext()) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq151_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq155_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 23; return false; }
				var13_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var12_filter.current()))));
				var14_filter = (var13_Cell).enumerator();
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 21;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 25;				
				if (!var14_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 25; return false; }
				if (!(com.altova.functions.Core.exists(com.mapforce.vmf.vmf34_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))) {state = 25; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq562_join(closure.var1_shared, var13_Cell))))))) {state = 25; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Utility", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq563_join(((com.altova.mapforce.IMFNode)(var14_filter.current())), closure.var1_shared, var13_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_shared != null ) { var11_shared.close(); var11_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq562_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq562_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq562_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			public Enumerator(seq562_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.equal(com.mapforce.vmf.vmf29_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))), com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current()))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq563_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq563_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq563_join closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			public Enumerator(seq563_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var4_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var4_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq562_join(closure.var2_shared, closure.var3_shared))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RateSchedule", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RateStructureName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeteringConfiguration", "http://nrel.gov/schemas/bedes-auc/2014"), com.mapforce.vmf.vmf34_inputtoresult.eval(com.altova.CoreTypes.nodeToString(closure.var1_current)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				var5_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq562_join(closure.var2_shared, closure.var3_shared))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UtilityAccountNumber", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 0;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq564_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
		double var5_shared;
	
		public seq564_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared, com.altova.mapforce.IEnumerable var4_shared, double var5_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq564_join closure;
			IEnumerator var6_shared;
			IEnumerator var7_filter;
			IEnumerator var8_shared;
			IEnumerator var9_filter;
			IEnumerator var11_shared;
			IEnumerator var12_filter;
			IEnumerator var10_filter;
			com.altova.mapforce.IEnumerable var13_Cell;
			IEnumerator var14_filter;
			public Enumerator(seq564_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box("Resource2"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var6_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var6_shared.moveNext()) {state = 4; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 8;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceBoundary", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf36_inputtoresult.eval(closure.var5_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var7_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq344_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EnergyResource", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf35_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var7_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf37_inputtoresult.eval(closure.var5_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PercentResource", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var3_shared);
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EndUse", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf39_inputtoresult.eval(closure.var5_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PercentEndUse", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var3_shared);
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualFuelUseNativeUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.doubleToDecimal(closure.var5_shared))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 14;				
				var8_shared = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 16;				
				if (!var8_shared.moveNext()) {state = 15; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var8_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 21;				
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				var11_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var9_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq15_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 16; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq16_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 16; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 14;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 18;				
				if (!var10_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 18; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualFuelUseConsistentUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.functions.Core.divide(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var10_filter.current())))), new java.math.BigDecimal("1000")))));
				pos++;
				return true;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 23;				
				if (!var11_shared.moveNext()) {state = 22; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var11_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 0;				
				if( var11_shared != null ) { var11_shared.close(); var11_shared = null; }
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if (!var12_filter.moveNext()) {state = 24; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq151_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq155_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 23; return false; }
				var13_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var12_filter.current()))));
				var14_filter = (var13_Cell).enumerator();
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 21;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 25;				
				if (!var14_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 25; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq565_join(closure.var1_shared, var13_Cell))))))) {state = 25; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Utility", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq566_join(((com.altova.mapforce.IMFNode)(var14_filter.current())), closure.var1_shared, var13_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_shared != null ) { var11_shared.close(); var11_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq565_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq565_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq565_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			public Enumerator(seq565_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq344_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.equal(com.mapforce.vmf.vmf35_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))), com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current()))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq566_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq566_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq566_join closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			public Enumerator(seq566_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var4_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var4_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq565_join(closure.var2_shared, closure.var3_shared))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RateSchedule", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RateStructureName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var5_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 5; return false; }
				if (!(com.altova.functions.Core.exists(com.mapforce.vmf.vmf34_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq565_join(closure.var2_shared, closure.var3_shared))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeteringConfiguration", "http://nrel.gov/schemas/bedes-auc/2014"), com.mapforce.vmf.vmf34_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UtilityAccountNumber", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_current)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq567_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq567_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq567_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq567_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq568_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq54_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq568_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq568_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq568_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq568_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq53_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq569_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
		com.altova.mapforce.IEnumerable var5_shared;
	
		public seq569_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared, com.altova.mapforce.IEnumerable var4_shared, com.altova.mapforce.IEnumerable var5_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq569_join closure;
			IEnumerator var6_shared;
			IEnumerator var7_filter;
			IEnumerator var8_shared;
			IEnumerator var9_filter;
			IEnumerator var10_shared;
			IEnumerator var11_filter;
			IEnumerator var12_shared;
			IEnumerator var13_filter;
			IEnumerator var14_shared;
			IEnumerator var15_filter;
			IEnumerator var16_shared;
			IEnumerator var17_filter;
			IEnumerator var18_shared;
			IEnumerator var19_filter;
			IEnumerator var21_shared;
			IEnumerator var22_filter;
			IEnumerator var20_filter;
			com.altova.mapforce.IEnumerable var23_Cell;
			IEnumerator var24_filter;
			public Enumerator(seq569_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 32:	if (moveNext_32()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
					case 35:	if (moveNext_35()) return true; break;
					case 36:	if (moveNext_36()) return true; break;
					case 37:	if (moveNext_37()) return true; break;
					case 38:	if (moveNext_38()) return true; break;
					case 39:	if (moveNext_39()) return true; break;
					case 41:	if (moveNext_41()) return true; break;
					case 42:	if (moveNext_42()) return true; break;
					case 43:	if (moveNext_43()) return true; break;
					case 44:	if (moveNext_44()) return true; break;
					case 45:	if (moveNext_45()) return true; break;
					case 46:	if (moveNext_46()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box("Resource3"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EnergyResource", "http://nrel.gov/schemas/bedes-auc/2014"), closure.var5_shared);
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var6_shared = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var6_shared.moveNext()) {state = 5; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 9;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				var8_shared = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var7_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceBoundary", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf41_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var7_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var8_shared.moveNext()) {state = 10; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var8_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 14;				
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				var10_shared = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var9_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var9_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 16;				
				if (!var10_shared.moveNext()) {state = 15; return false; }
				var11_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var10_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 19;				
				if( var10_shared != null ) { var10_shared.close(); var10_shared = null; }
				var12_shared = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 16;				
				if (!var11_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 16; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PercentResource", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.mapforce.vmf.vmf42_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var11_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_17() throws Exception {
				state = 14;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 21;				
				if (!var12_shared.moveNext()) {state = 20; return false; }
				var13_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var12_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 24;				
				if( var12_shared != null ) { var12_shared.close(); var12_shared = null; }
				var14_shared = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 21;				
				if (!var13_filter.moveNext()) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 21; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EndUse", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf43_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var13_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_22() throws Exception {
				state = 19;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 26;				
				if (!var14_shared.moveNext()) {state = 25; return false; }
				var15_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var14_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 29;				
				if( var14_shared != null ) { var14_shared.close(); var14_shared = null; }
				var16_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 26;				
				if (!var15_filter.moveNext()) {state = 27; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 26; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PercentEndUse", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.mapforce.vmf.vmf42_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var15_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_27() throws Exception {
				state = 24;				
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				return false;
			}
			private boolean moveNext_29() throws Exception {
				state = 31;				
				if (!var16_shared.moveNext()) {state = 30; return false; }
				var17_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var16_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_30() throws Exception {
				state = 34;				
				if( var16_shared != null ) { var16_shared.close(); var16_shared = null; }
				var18_shared = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_31() throws Exception {
				state = 31;				
				if (!var17_filter.moveNext()) {state = 32; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 31; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualFuelUseNativeUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var17_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_32() throws Exception {
				state = 29;				
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				return false;
			}
			private boolean moveNext_34() throws Exception {
				state = 36;				
				if (!var18_shared.moveNext()) {state = 35; return false; }
				var19_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var18_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_35() throws Exception {
				state = 41;				
				if( var18_shared != null ) { var18_shared.close(); var18_shared = null; }
				var21_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_36() throws Exception {
				state = 38;				
				if (!var19_filter.moveNext()) {state = 37; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq15_map(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))))) {state = 36; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq16_map(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))))) {state = 36; return false; }
				var20_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var19_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_37() throws Exception {
				state = 34;				
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				return false;
			}
			private boolean moveNext_38() throws Exception {
				state = 38;				
				if (!var20_filter.moveNext()) {state = 39; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var20_filter.current()))))))))) {state = 38; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualFuelUseConsistentUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.functions.Core.divide(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var20_filter.current())))), new java.math.BigDecimal("1000")))));
				pos++;
				return true;
			}
			private boolean moveNext_39() throws Exception {
				state = 36;				
				if( var20_filter != null ) { var20_filter.close(); var20_filter = null; }
				return false;
			}
			private boolean moveNext_41() throws Exception {
				state = 43;				
				if (!var21_shared.moveNext()) {state = 42; return false; }
				var22_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var21_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_42() throws Exception {
				state = 0;				
				if( var21_shared != null ) { var21_shared.close(); var21_shared = null; }
				return false;
			}
			private boolean moveNext_43() throws Exception {
				state = 45;				
				if (!var22_filter.moveNext()) {state = 44; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq151_map(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))))) {state = 43; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq155_map(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))))) {state = 43; return false; }
				var23_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var22_filter.current()))));
				var24_filter = (var23_Cell).enumerator();
				return false;
			}
			private boolean moveNext_44() throws Exception {
				state = 41;				
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				return false;
			}
			private boolean moveNext_45() throws Exception {
				state = 45;				
				if (!var24_filter.moveNext()) {state = 46; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var24_filter.current()))))))))) {state = 45; return false; }
				if (!(com.altova.functions.Core.exists(com.mapforce.vmf.vmf34_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var24_filter.current()))))))) {state = 45; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq570_map(closure.var5_shared, var23_Cell))))))) {state = 45; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Utility", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq571_join(((com.altova.mapforce.IMFNode)(var24_filter.current())), closure.var5_shared, var23_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_46() throws Exception {
				state = 43;				
				if( var24_filter != null ) { var24_filter.close(); var24_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var10_shared != null ) { var10_shared.close(); var10_shared = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_shared != null ) { var12_shared.close(); var12_shared = null; }
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				if( var14_shared != null ) { var14_shared.close(); var14_shared = null; }
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				if( var16_shared != null ) { var16_shared.close(); var16_shared = null; }
				if( var20_filter != null ) { var20_filter.close(); var20_filter = null; }
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				if( var18_shared != null ) { var18_shared.close(); var18_shared = null; }
				if( var24_filter != null ) { var24_filter.close(); var24_filter = null; }
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				if( var21_shared != null ) { var21_shared.close(); var21_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq570_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq570_map(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq570_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq570_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!(com.altova.functions.Core.exists(com.mapforce.vmf.vmf44_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))) {state = 2; return false; }
				current = com.altova.functions.Core.equal((java.lang.String)com.altova.functions.Core.first(com.mapforce.vmf.vmf44_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))), (java.lang.String)com.altova.functions.Core.first(closure.var1_shared));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq571_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq571_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq571_join closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			public Enumerator(seq571_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var4_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var4_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq570_map(closure.var2_shared, closure.var3_shared))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RateSchedule", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RateStructureName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeteringConfiguration", "http://nrel.gov/schemas/bedes-auc/2014"), com.mapforce.vmf.vmf34_inputtoresult.eval(com.altova.CoreTypes.nodeToString(closure.var1_current)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				var5_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq570_map(closure.var2_shared, closure.var3_shared))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UtilityAccountNumber", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 0;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq572_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
		com.altova.mapforce.IEnumerable var4_shared;
		com.altova.mapforce.IMFNode var5_cur_Cell;
	
		public seq572_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared, com.altova.mapforce.IEnumerable var4_shared, com.altova.mapforce.IMFNode var5_cur_Cell)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_cur_Cell = var5_cur_Cell;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq572_join closure;
			IEnumerator var6_shared;
			IEnumerator var7_filter;
			IEnumerator var8_shared;
			IEnumerator var9_filter;
			IEnumerator var10_shared;
			IEnumerator var11_filter;
			IEnumerator var12_shared;
			IEnumerator var13_filter;
			IEnumerator var14_filter;
			IEnumerator var16_shared;
			IEnumerator var15_filter;
			IEnumerator var17_filter;
			IEnumerator var19_shared;
			IEnumerator var20_filter;
			IEnumerator var18_filter;
			com.altova.mapforce.IEnumerable var21_Cell;
			IEnumerator var22_filter;
			public Enumerator(seq572_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 32:	if (moveNext_32()) return true; break;
					case 33:	if (moveNext_33()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
					case 35:	if (moveNext_35()) return true; break;
					case 37:	if (moveNext_37()) return true; break;
					case 38:	if (moveNext_38()) return true; break;
					case 39:	if (moveNext_39()) return true; break;
					case 40:	if (moveNext_40()) return true; break;
					case 41:	if (moveNext_41()) return true; break;
					case 42:	if (moveNext_42()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box("Resource4"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EnergyResource", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf45_inputtoresult.eval(com.altova.CoreTypes.nodeToString(closure.var5_cur_Cell))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var6_shared = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var6_shared.moveNext()) {state = 5; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 9;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Gallons"));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var7_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceBoundary", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf41_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var7_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				var8_shared = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var8_shared.moveNext()) {state = 11; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var8_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 15;				
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				var10_shared = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var9_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PercentResource", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.mapforce.vmf.vmf42_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var9_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 17;				
				if (!var10_shared.moveNext()) {state = 16; return false; }
				var11_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var10_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 20;				
				if( var10_shared != null ) { var10_shared.close(); var10_shared = null; }
				var12_shared = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 17;				
				if (!var11_filter.moveNext()) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 17; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EndUse", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf43_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var11_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_18() throws Exception {
				state = 15;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 22;				
				if (!var12_shared.moveNext()) {state = 21; return false; }
				var13_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var12_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 25;				
				if( var12_shared != null ) { var12_shared.close(); var12_shared = null; }
				var14_filter = (closure.var4_shared).enumerator();
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 22;				
				if (!var13_filter.moveNext()) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 22; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PercentEndUse", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.mapforce.vmf.vmf42_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var13_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_23() throws Exception {
				state = 20;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 27;				
				if (!var14_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq143_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 25; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq144_map(((com.altova.mapforce.IMFNode)(var14_filter.current()))))))))) {state = 25; return false; }
				var15_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var14_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 30;				
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				var16_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 27;				
				if (!var15_filter.moveNext()) {state = 28; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 27; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualFuelUseNativeUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var15_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_28() throws Exception {
				state = 25;				
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				return false;
			}
			private boolean moveNext_30() throws Exception {
				state = 32;				
				if (!var16_shared.moveNext()) {state = 31; return false; }
				var17_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var16_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_31() throws Exception {
				state = 37;				
				if( var16_shared != null ) { var16_shared.close(); var16_shared = null; }
				var19_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_32() throws Exception {
				state = 34;				
				if (!var17_filter.moveNext()) {state = 33; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq15_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 32; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq16_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 32; return false; }
				var18_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var17_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_33() throws Exception {
				state = 30;				
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				return false;
			}
			private boolean moveNext_34() throws Exception {
				state = 34;				
				if (!var18_filter.moveNext()) {state = 35; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))))) {state = 34; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualFuelUseConsistentUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.functions.Core.divide(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var18_filter.current())))), new java.math.BigDecimal("1000")))));
				pos++;
				return true;
			}
			private boolean moveNext_35() throws Exception {
				state = 32;				
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				return false;
			}
			private boolean moveNext_37() throws Exception {
				state = 39;				
				if (!var19_shared.moveNext()) {state = 38; return false; }
				var20_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var19_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_38() throws Exception {
				state = 0;				
				if( var19_shared != null ) { var19_shared.close(); var19_shared = null; }
				return false;
			}
			private boolean moveNext_39() throws Exception {
				state = 41;				
				if (!var20_filter.moveNext()) {state = 40; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq151_map(((com.altova.mapforce.IMFNode)(var20_filter.current()))))))))) {state = 39; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq155_map(((com.altova.mapforce.IMFNode)(var20_filter.current()))))))))) {state = 39; return false; }
				var21_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var20_filter.current()))));
				var22_filter = (var21_Cell).enumerator();
				return false;
			}
			private boolean moveNext_40() throws Exception {
				state = 37;				
				if( var20_filter != null ) { var20_filter.close(); var20_filter = null; }
				return false;
			}
			private boolean moveNext_41() throws Exception {
				state = 41;				
				if (!var22_filter.moveNext()) {state = 42; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))))) {state = 41; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq573_map(var21_Cell))))))) {state = 41; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Utility", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq574_join(((com.altova.mapforce.IMFNode)(var22_filter.current())), var21_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_42() throws Exception {
				state = 39;				
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var10_shared != null ) { var10_shared.close(); var10_shared = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_shared != null ) { var12_shared.close(); var12_shared = null; }
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				if( var14_filter != null ) { var14_filter.close(); var14_filter = null; }
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				if( var16_shared != null ) { var16_shared.close(); var16_shared = null; }
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				if( var20_filter != null ) { var20_filter.close(); var20_filter = null; }
				if( var19_shared != null ) { var19_shared.close(); var19_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq573_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq573_map(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq573_map closure;
			IEnumerator var2_filter;
			public Enumerator(seq573_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!(com.altova.functions.Core.exists(com.mapforce.vmf.vmf46_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))) {state = 2; return false; }
				current = com.altova.functions.Core.equal("Fuel oil", (java.lang.String)com.altova.functions.Core.first(com.mapforce.vmf.vmf46_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var2_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq574_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq574_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq574_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq574_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq573_map(closure.var2_shared))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RateSchedule", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RateStructureName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				if (!(com.altova.functions.Core.exists(com.mapforce.vmf.vmf34_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq573_map(closure.var2_shared))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeteringConfiguration", "http://nrel.gov/schemas/bedes-auc/2014"), com.mapforce.vmf.vmf34_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UtilityAccountNumber", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_current)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq575_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
		java.lang.String var4_shared;
		com.altova.mapforce.IEnumerable var5_shared;
	
		public seq575_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared, java.lang.String var4_shared, com.altova.mapforce.IEnumerable var5_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
			this.var5_shared = var5_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq575_join closure;
			IEnumerator var6_shared;
			IEnumerator var7_filter;
			IEnumerator var8_filter;
			IEnumerator var10_shared;
			IEnumerator var9_filter;
			IEnumerator var11_filter;
			IEnumerator var12_shared;
			IEnumerator var13_filter;
			IEnumerator var14_shared;
			IEnumerator var15_filter;
			IEnumerator var16_filter;
			IEnumerator var18_shared;
			IEnumerator var17_filter;
			IEnumerator var19_filter;
			IEnumerator var21_shared;
			IEnumerator var22_filter;
			IEnumerator var20_filter;
			com.altova.mapforce.IEnumerable var23_Cell;
			IEnumerator var24_filter;
			com.altova.mapforce.IEnumerable var25_vmf48_inputtoresult;
			public Enumerator(seq575_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 32:	if (moveNext_32()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
					case 35:	if (moveNext_35()) return true; break;
					case 36:	if (moveNext_36()) return true; break;
					case 37:	if (moveNext_37()) return true; break;
					case 38:	if (moveNext_38()) return true; break;
					case 39:	if (moveNext_39()) return true; break;
					case 41:	if (moveNext_41()) return true; break;
					case 42:	if (moveNext_42()) return true; break;
					case 43:	if (moveNext_43()) return true; break;
					case 44:	if (moveNext_44()) return true; break;
					case 45:	if (moveNext_45()) return true; break;
					case 46:	if (moveNext_46()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), com.altova.functions.Core.box("Resource5"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EnergyResource", "http://nrel.gov/schemas/bedes-auc/2014"), com.mapforce.vmf.vmf47_inputtoresult.eval(closure.var4_shared));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var6_shared = (closure.var5_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var6_shared.moveNext()) {state = 5; return false; }
				var7_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 9;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				var8_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var7_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceBoundary", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf41_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var7_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var8_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq277_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq278_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 9; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var8_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 14;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				var10_shared = (closure.var5_shared).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var9_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq344_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var9_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 16;				
				if (!var10_shared.moveNext()) {state = 15; return false; }
				var11_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var10_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 19;				
				if( var10_shared != null ) { var10_shared.close(); var10_shared = null; }
				var12_shared = (closure.var5_shared).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 16;				
				if (!var11_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 16; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PercentResource", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.mapforce.vmf.vmf42_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var11_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_17() throws Exception {
				state = 14;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 21;				
				if (!var12_shared.moveNext()) {state = 20; return false; }
				var13_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var12_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 24;				
				if( var12_shared != null ) { var12_shared.close(); var12_shared = null; }
				var14_shared = (closure.var5_shared).enumerator();
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 21;				
				if (!var13_filter.moveNext()) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 21; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EndUse", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf43_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var13_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_22() throws Exception {
				state = 19;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 26;				
				if (!var14_shared.moveNext()) {state = 25; return false; }
				var15_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var14_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 29;				
				if( var14_shared != null ) { var14_shared.close(); var14_shared = null; }
				var16_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 26;				
				if (!var15_filter.moveNext()) {state = 27; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 26; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PercentEndUse", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.mapforce.vmf.vmf42_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var15_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_27() throws Exception {
				state = 24;				
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				return false;
			}
			private boolean moveNext_29() throws Exception {
				state = 31;				
				if (!var16_filter.moveNext()) {state = 30; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq143_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 29; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq144_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 29; return false; }
				var17_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var16_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_30() throws Exception {
				state = 34;				
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				var18_shared = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_31() throws Exception {
				state = 31;				
				if (!var17_filter.moveNext()) {state = 32; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq123_map(((com.altova.mapforce.IMFNode)(var17_filter.current()))))))))) {state = 31; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualFuelUseNativeUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var17_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_32() throws Exception {
				state = 29;				
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				return false;
			}
			private boolean moveNext_34() throws Exception {
				state = 36;				
				if (!var18_shared.moveNext()) {state = 35; return false; }
				var19_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var18_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_35() throws Exception {
				state = 41;				
				if( var18_shared != null ) { var18_shared.close(); var18_shared = null; }
				var21_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_36() throws Exception {
				state = 38;				
				if (!var19_filter.moveNext()) {state = 37; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq15_map(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))))) {state = 36; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq16_map(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))))) {state = 36; return false; }
				var20_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var19_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_37() throws Exception {
				state = 34;				
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				return false;
			}
			private boolean moveNext_38() throws Exception {
				state = 38;				
				if (!var20_filter.moveNext()) {state = 39; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var20_filter.current()))))))))) {state = 38; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualFuelUseConsistentUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.functions.Core.divide(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var20_filter.current())))), new java.math.BigDecimal("1000")))));
				pos++;
				return true;
			}
			private boolean moveNext_39() throws Exception {
				state = 36;				
				if( var20_filter != null ) { var20_filter.close(); var20_filter = null; }
				return false;
			}
			private boolean moveNext_41() throws Exception {
				state = 43;				
				if (!var21_shared.moveNext()) {state = 42; return false; }
				var22_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var21_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_42() throws Exception {
				state = 0;				
				if( var21_shared != null ) { var21_shared.close(); var21_shared = null; }
				return false;
			}
			private boolean moveNext_43() throws Exception {
				state = 45;				
				if (!var22_filter.moveNext()) {state = 44; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq151_map(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))))) {state = 43; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq155_map(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))))) {state = 43; return false; }
				var23_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var22_filter.current()))));
				var24_filter = (var23_Cell).enumerator();
				return false;
			}
			private boolean moveNext_44() throws Exception {
				state = 41;				
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				return false;
			}
			private boolean moveNext_45() throws Exception {
				state = 45;				
				if (!var24_filter.moveNext()) {state = 46; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var24_filter.current()))))))))) {state = 45; return false; }
				var25_vmf48_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf48_inputtoresult.eval(closure.var4_shared));
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq576_cond_map(var25_vmf48_inputtoresult, var23_Cell))))))) {state = 45; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Utility", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq577_join(((com.altova.mapforce.IMFNode)(var24_filter.current())), closure.var4_shared, var23_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_46() throws Exception {
				state = 43;				
				if( var24_filter != null ) { var24_filter.close(); var24_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var10_shared != null ) { var10_shared.close(); var10_shared = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_shared != null ) { var12_shared.close(); var12_shared = null; }
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				if( var14_shared != null ) { var14_shared.close(); var14_shared = null; }
				if( var17_filter != null ) { var17_filter.close(); var17_filter = null; }
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				if( var20_filter != null ) { var20_filter.close(); var20_filter = null; }
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				if( var18_shared != null ) { var18_shared.close(); var18_shared = null; }
				if( var24_filter != null ) { var24_filter.close(); var24_filter = null; }
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				if( var21_shared != null ) { var21_shared.close(); var21_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq576_cond_map implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq576_cond_map(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq576_cond_map closure;
			IEnumerator var3_filter;
			public Enumerator(seq576_cond_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.exists(closure.var1_shared))) {state = 0; return false; }
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var3_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 3; return false; }
				if (!(com.altova.functions.Core.exists(com.mapforce.vmf.vmf49_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))) {state = 3; return false; }
				current = com.altova.functions.Core.equal((java.lang.String)com.altova.functions.Core.first(closure.var1_shared), (java.lang.String)com.altova.functions.Core.first(com.mapforce.vmf.vmf49_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq577_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		java.lang.String var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq577_join(com.altova.mapforce.IMFNode var1_current, java.lang.String var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq577_join closure;
			IEnumerator var4_filter;
			com.altova.mapforce.IEnumerable var5_vmf48_inputtoresult;
			public Enumerator(seq577_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RateSchedule", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq578_map(closure.var2_shared, closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var4_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var4_filter.moveNext()) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 3; return false; }
				if (!(com.altova.functions.Core.exists(com.mapforce.vmf.vmf50_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))) {state = 3; return false; }
				var5_vmf48_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf48_inputtoresult.eval(closure.var2_shared));
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq576_cond_map(var5_vmf48_inputtoresult, closure.var3_shared))))))) {state = 3; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("MeteringConfiguration", "http://nrel.gov/schemas/bedes-auc/2014"), com.mapforce.vmf.vmf50_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UtilityAccountNumber", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var1_current)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq578_map implements IEnumerable
	{
		java.lang.String var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq578_map(java.lang.String var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq578_map closure;
			IEnumerator var3_filter;
			com.altova.mapforce.IEnumerable var4_vmf48_inputtoresult;
			public Enumerator(seq578_map closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				var4_vmf48_inputtoresult = new com.altova.functions.Core.SequenceCache(com.mapforce.vmf.vmf48_inputtoresult.eval(closure.var1_shared));
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq576_cond_map(var4_vmf48_inputtoresult, closure.var2_shared))))))) {state = 2; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("RateStructureName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq579_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq579_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq579_join closure;
			IEnumerator var4_shared;
			com.altova.mapforce.IEnumerable var5_Cell;
			com.altova.mapforce.IEnumerable var6_r;
			IEnumerator var8_shared;
			com.altova.mapforce.IEnumerable var7_filter;
			com.altova.mapforce.IEnumerable var9_Cell;
			IEnumerator var10_filter;
			IEnumerator var13_shared;
			com.altova.mapforce.IEnumerable var14_Cell;
			IEnumerator var15_filter;
			IEnumerator var17_shared;
			double var11_cast;
			com.altova.mapforce.IEnumerable var12_r;
			com.altova.mapforce.IEnumerable var18_Cell;
			IEnumerator var19_filter;
			IEnumerator var21_shared;
			double var16_cast;
			com.altova.mapforce.IEnumerable var22_Cell;
			IEnumerator var23_filter;
			IEnumerator var25_shared;
			double var20_cast;
			com.altova.mapforce.IEnumerable var26_Cell;
			IEnumerator var27_filter;
			IEnumerator var29_shared;
			double var24_cast;
			com.altova.mapforce.IEnumerable var30_Cell;
			IEnumerator var31_filter;
			IEnumerator var33_shared;
			double var28_cast;
			com.altova.mapforce.IEnumerable var34_Cell;
			IEnumerator var35_filter;
			IEnumerator var37_shared;
			double var32_cast;
			com.altova.mapforce.IEnumerable var38_Cell;
			IEnumerator var39_filter;
			IEnumerator var41_shared;
			double var36_cast;
			IEnumerator var42_filter;
			IEnumerator var47_shared;
			double var40_cast;
			IEnumerator var48_filter;
			com.altova.mapforce.IEnumerable var43_Cell;
			IEnumerator var53_shared;
			IEnumerator var44_filter;
			IEnumerator var54_filter;
			com.altova.mapforce.IEnumerable var49_Cell;
			IEnumerator var59_shared;
			java.lang.String var45_cast;
			IEnumerator var50_filter;
			double var46_cast;
			IEnumerator var60_filter;
			com.altova.mapforce.IEnumerable var55_Cell;
			java.lang.String var51_cast;
			IEnumerator var56_filter;
			double var52_cast;
			com.altova.mapforce.IEnumerable var61_Cell;
			java.lang.String var57_cast;
			IEnumerator var62_filter;
			double var58_cast;
			java.lang.String var63_cast;
			double var64_cast;
			public Enumerator(seq579_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 32:	if (moveNext_32()) return true; break;
					case 33:	if (moveNext_33()) return true; break;
					case 35:	if (moveNext_35()) return true; break;
					case 36:	if (moveNext_36()) return true; break;
					case 37:	if (moveNext_37()) return true; break;
					case 38:	if (moveNext_38()) return true; break;
					case 40:	if (moveNext_40()) return true; break;
					case 41:	if (moveNext_41()) return true; break;
					case 42:	if (moveNext_42()) return true; break;
					case 43:	if (moveNext_43()) return true; break;
					case 45:	if (moveNext_45()) return true; break;
					case 46:	if (moveNext_46()) return true; break;
					case 47:	if (moveNext_47()) return true; break;
					case 48:	if (moveNext_48()) return true; break;
					case 49:	if (moveNext_49()) return true; break;
					case 50:	if (moveNext_50()) return true; break;
					case 52:	if (moveNext_52()) return true; break;
					case 53:	if (moveNext_53()) return true; break;
					case 54:	if (moveNext_54()) return true; break;
					case 55:	if (moveNext_55()) return true; break;
					case 56:	if (moveNext_56()) return true; break;
					case 57:	if (moveNext_57()) return true; break;
					case 59:	if (moveNext_59()) return true; break;
					case 60:	if (moveNext_60()) return true; break;
					case 61:	if (moveNext_61()) return true; break;
					case 62:	if (moveNext_62()) return true; break;
					case 63:	if (moveNext_63()) return true; break;
					case 64:	if (moveNext_64()) return true; break;
					case 66:	if (moveNext_66()) return true; break;
					case 67:	if (moveNext_67()) return true; break;
					case 68:	if (moveNext_68()) return true; break;
					case 69:	if (moveNext_69()) return true; break;
					case 70:	if (moveNext_70()) return true; break;
					case 71:	if (moveNext_71()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var4_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var4_shared.moveNext()) {state = 3; return false; }
				var5_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_shared.current()))));
				var6_r = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), ((com.altova.mapforce.IMFNode)(var4_shared.current()))));
				var7_filter = new com.altova.functions.Core.SequenceCache((new seq580_filter(var5_Cell)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeries", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq582_join(var7_filter, var6_r, var5_Cell)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if( var4_shared != null ) { var4_shared.close(); var4_shared = null; }
				var8_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var8_shared.moveNext()) {state = 6; return false; }
				var9_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var8_shared.current()))));
				var10_filter = (var9_Cell).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 10;				
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				var13_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var10_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 7; return false; }
				var11_cast = com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var10_filter.current()))));
				var12_r = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("r", ""), ((com.altova.mapforce.IMFNode)(var8_shared.current()))));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeries", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq584_join(var9_Cell, var11_cast, var12_r)));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var13_shared.moveNext()) {state = 11; return false; }
				var14_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var13_shared.current()))));
				var15_filter = (var14_Cell).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 15;				
				if( var13_shared != null ) { var13_shared.close(); var13_shared = null; }
				var17_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var15_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 12; return false; }
				var16_cast = com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var15_filter.current()))));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeries", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq586_join(var14_Cell, var16_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 17;				
				if (!var17_shared.moveNext()) {state = 16; return false; }
				var18_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var17_shared.current()))));
				var19_filter = (var18_Cell).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 20;				
				if( var17_shared != null ) { var17_shared.close(); var17_shared = null; }
				var21_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 17;				
				if (!var19_filter.moveNext()) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq123_map(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))))) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))))) {state = 17; return false; }
				var20_cast = com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var19_filter.current()))));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeries", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq588_join(var18_Cell, var20_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_18() throws Exception {
				state = 15;				
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 22;				
				if (!var21_shared.moveNext()) {state = 21; return false; }
				var22_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var21_shared.current()))));
				var23_filter = (var22_Cell).enumerator();
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 25;				
				if( var21_shared != null ) { var21_shared.close(); var21_shared = null; }
				var25_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 22;				
				if (!var23_filter.moveNext()) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq344_map(((com.altova.mapforce.IMFNode)(var23_filter.current()))))))))) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var23_filter.current()))))))))) {state = 22; return false; }
				var24_cast = com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var23_filter.current()))));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeries", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq590_join(var22_Cell, var24_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_23() throws Exception {
				state = 20;				
				if( var23_filter != null ) { var23_filter.close(); var23_filter = null; }
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 27;				
				if (!var25_shared.moveNext()) {state = 26; return false; }
				var26_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var25_shared.current()))));
				var27_filter = (var26_Cell).enumerator();
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 30;				
				if( var25_shared != null ) { var25_shared.close(); var25_shared = null; }
				var29_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 27;				
				if (!var27_filter.moveNext()) {state = 28; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq349_map(((com.altova.mapforce.IMFNode)(var27_filter.current()))))))))) {state = 27; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var27_filter.current()))))))))) {state = 27; return false; }
				var28_cast = com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var27_filter.current()))));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeries", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq592_join(var26_Cell, var28_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_28() throws Exception {
				state = 25;				
				if( var27_filter != null ) { var27_filter.close(); var27_filter = null; }
				return false;
			}
			private boolean moveNext_30() throws Exception {
				state = 32;				
				if (!var29_shared.moveNext()) {state = 31; return false; }
				var30_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var29_shared.current()))));
				var31_filter = (var30_Cell).enumerator();
				return false;
			}
			private boolean moveNext_31() throws Exception {
				state = 35;				
				if( var29_shared != null ) { var29_shared.close(); var29_shared = null; }
				var33_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_32() throws Exception {
				state = 32;				
				if (!var31_filter.moveNext()) {state = 33; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var31_filter.current()))))))))) {state = 32; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var31_filter.current()))))))))) {state = 32; return false; }
				var32_cast = com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var31_filter.current()))));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeries", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq594_join(var30_Cell, var32_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_33() throws Exception {
				state = 30;				
				if( var31_filter != null ) { var31_filter.close(); var31_filter = null; }
				return false;
			}
			private boolean moveNext_35() throws Exception {
				state = 37;				
				if (!var33_shared.moveNext()) {state = 36; return false; }
				var34_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var33_shared.current()))));
				var35_filter = (var34_Cell).enumerator();
				return false;
			}
			private boolean moveNext_36() throws Exception {
				state = 40;				
				if( var33_shared != null ) { var33_shared.close(); var33_shared = null; }
				var37_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_37() throws Exception {
				state = 37;				
				if (!var35_filter.moveNext()) {state = 38; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq351_map(((com.altova.mapforce.IMFNode)(var35_filter.current()))))))))) {state = 37; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var35_filter.current()))))))))) {state = 37; return false; }
				var36_cast = com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var35_filter.current()))));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeries", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq596_join(var34_Cell, var36_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_38() throws Exception {
				state = 35;				
				if( var35_filter != null ) { var35_filter.close(); var35_filter = null; }
				return false;
			}
			private boolean moveNext_40() throws Exception {
				state = 42;				
				if (!var37_shared.moveNext()) {state = 41; return false; }
				var38_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var37_shared.current()))));
				var39_filter = (var38_Cell).enumerator();
				return false;
			}
			private boolean moveNext_41() throws Exception {
				state = 45;				
				if( var37_shared != null ) { var37_shared.close(); var37_shared = null; }
				var41_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_42() throws Exception {
				state = 42;				
				if (!var39_filter.moveNext()) {state = 43; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq534_map(((com.altova.mapforce.IMFNode)(var39_filter.current()))))))))) {state = 42; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var39_filter.current()))))))))) {state = 42; return false; }
				var40_cast = com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var39_filter.current()))));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeries", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq598_join(closure.var3_shared, var38_Cell, var40_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_43() throws Exception {
				state = 40;				
				if( var39_filter != null ) { var39_filter.close(); var39_filter = null; }
				return false;
			}
			private boolean moveNext_45() throws Exception {
				state = 47;				
				if (!var41_shared.moveNext()) {state = 46; return false; }
				var42_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var41_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_46() throws Exception {
				state = 52;				
				if( var41_shared != null ) { var41_shared.close(); var41_shared = null; }
				var47_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_47() throws Exception {
				state = 49;				
				if (!var42_filter.moveNext()) {state = 48; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var42_filter.current()))))))))) {state = 47; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq54_map(((com.altova.mapforce.IMFNode)(var42_filter.current()))))))))) {state = 47; return false; }
				var43_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var42_filter.current()))));
				var44_filter = (var43_Cell).enumerator();
				return false;
			}
			private boolean moveNext_48() throws Exception {
				state = 45;				
				if( var42_filter != null ) { var42_filter.close(); var42_filter = null; }
				return false;
			}
			private boolean moveNext_49() throws Exception {
				state = 49;				
				if (!var44_filter.moveNext()) {state = 50; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var44_filter.current()))))))))) {state = 49; return false; }
				var45_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var44_filter.current())));
				var46_cast = com.altova.CoreTypes.parseDouble(var45_cast);
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeries", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq602_join(var43_Cell, var46_cast, var45_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_50() throws Exception {
				state = 47;				
				if( var44_filter != null ) { var44_filter.close(); var44_filter = null; }
				return false;
			}
			private boolean moveNext_52() throws Exception {
				state = 54;				
				if (!var47_shared.moveNext()) {state = 53; return false; }
				var48_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var47_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_53() throws Exception {
				state = 59;				
				if( var47_shared != null ) { var47_shared.close(); var47_shared = null; }
				var53_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_54() throws Exception {
				state = 56;				
				if (!var48_filter.moveNext()) {state = 55; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var48_filter.current()))))))))) {state = 54; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq54_map(((com.altova.mapforce.IMFNode)(var48_filter.current()))))))))) {state = 54; return false; }
				var49_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var48_filter.current()))));
				var50_filter = (var49_Cell).enumerator();
				return false;
			}
			private boolean moveNext_55() throws Exception {
				state = 52;				
				if( var48_filter != null ) { var48_filter.close(); var48_filter = null; }
				return false;
			}
			private boolean moveNext_56() throws Exception {
				state = 56;				
				if (!var50_filter.moveNext()) {state = 57; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var50_filter.current()))))))))) {state = 56; return false; }
				var51_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var50_filter.current())));
				var52_cast = com.altova.CoreTypes.parseDouble(var51_cast);
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeries", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq603_join(var49_Cell, var52_cast, var51_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_57() throws Exception {
				state = 54;				
				if( var50_filter != null ) { var50_filter.close(); var50_filter = null; }
				return false;
			}
			private boolean moveNext_59() throws Exception {
				state = 61;				
				if (!var53_shared.moveNext()) {state = 60; return false; }
				var54_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var53_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_60() throws Exception {
				state = 66;				
				if( var53_shared != null ) { var53_shared.close(); var53_shared = null; }
				var59_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_61() throws Exception {
				state = 63;				
				if (!var54_filter.moveNext()) {state = 62; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var54_filter.current()))))))))) {state = 61; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq54_map(((com.altova.mapforce.IMFNode)(var54_filter.current()))))))))) {state = 61; return false; }
				var55_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var54_filter.current()))));
				var56_filter = (var55_Cell).enumerator();
				return false;
			}
			private boolean moveNext_62() throws Exception {
				state = 59;				
				if( var54_filter != null ) { var54_filter.close(); var54_filter = null; }
				return false;
			}
			private boolean moveNext_63() throws Exception {
				state = 63;				
				if (!var56_filter.moveNext()) {state = 64; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq123_map(((com.altova.mapforce.IMFNode)(var56_filter.current()))))))))) {state = 63; return false; }
				var57_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var56_filter.current())));
				var58_cast = com.altova.CoreTypes.parseDouble(var57_cast);
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeries", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq604_join(var55_Cell, var58_cast, var57_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_64() throws Exception {
				state = 61;				
				if( var56_filter != null ) { var56_filter.close(); var56_filter = null; }
				return false;
			}
			private boolean moveNext_66() throws Exception {
				state = 68;				
				if (!var59_shared.moveNext()) {state = 67; return false; }
				var60_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var59_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_67() throws Exception {
				state = 0;				
				if( var59_shared != null ) { var59_shared.close(); var59_shared = null; }
				return false;
			}
			private boolean moveNext_68() throws Exception {
				state = 70;				
				if (!var60_filter.moveNext()) {state = 69; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var60_filter.current()))))))))) {state = 68; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq54_map(((com.altova.mapforce.IMFNode)(var60_filter.current()))))))))) {state = 68; return false; }
				var61_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var60_filter.current()))));
				var62_filter = (var61_Cell).enumerator();
				return false;
			}
			private boolean moveNext_69() throws Exception {
				state = 66;				
				if( var60_filter != null ) { var60_filter.close(); var60_filter = null; }
				return false;
			}
			private boolean moveNext_70() throws Exception {
				state = 70;				
				if (!var62_filter.moveNext()) {state = 71; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq344_map(((com.altova.mapforce.IMFNode)(var62_filter.current()))))))))) {state = 70; return false; }
				var63_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var62_filter.current())));
				var64_cast = com.altova.CoreTypes.parseDouble(var63_cast);
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeries", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq605_join(var61_Cell, var64_cast, var63_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_71() throws Exception {
				state = 68;				
				if( var62_filter != null ) { var62_filter.close(); var62_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_shared != null ) { var4_shared.close(); var4_shared = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				if( var13_shared != null ) { var13_shared.close(); var13_shared = null; }
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				if( var17_shared != null ) { var17_shared.close(); var17_shared = null; }
				if( var23_filter != null ) { var23_filter.close(); var23_filter = null; }
				if( var21_shared != null ) { var21_shared.close(); var21_shared = null; }
				if( var27_filter != null ) { var27_filter.close(); var27_filter = null; }
				if( var25_shared != null ) { var25_shared.close(); var25_shared = null; }
				if( var31_filter != null ) { var31_filter.close(); var31_filter = null; }
				if( var29_shared != null ) { var29_shared.close(); var29_shared = null; }
				if( var35_filter != null ) { var35_filter.close(); var35_filter = null; }
				if( var33_shared != null ) { var33_shared.close(); var33_shared = null; }
				if( var39_filter != null ) { var39_filter.close(); var39_filter = null; }
				if( var37_shared != null ) { var37_shared.close(); var37_shared = null; }
				if( var44_filter != null ) { var44_filter.close(); var44_filter = null; }
				if( var42_filter != null ) { var42_filter.close(); var42_filter = null; }
				if( var41_shared != null ) { var41_shared.close(); var41_shared = null; }
				if( var50_filter != null ) { var50_filter.close(); var50_filter = null; }
				if( var48_filter != null ) { var48_filter.close(); var48_filter = null; }
				if( var47_shared != null ) { var47_shared.close(); var47_shared = null; }
				if( var56_filter != null ) { var56_filter.close(); var56_filter = null; }
				if( var54_filter != null ) { var54_filter.close(); var54_filter = null; }
				if( var53_shared != null ) { var53_shared.close(); var53_shared = null; }
				if( var62_filter != null ) { var62_filter.close(); var62_filter = null; }
				if( var60_filter != null ) { var60_filter.close(); var60_filter = null; }
				if( var59_shared != null ) { var59_shared.close(); var59_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq580_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq580_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq580_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq580_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq581_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq581_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq581_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq581_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq581_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq582_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq582_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq582_join closure;
			IEnumerator var4_shared;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			IEnumerator var7_filter;
			IEnumerator var8_shared;
			double var9_cast;
			public Enumerator(seq582_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 4;				
				if (!(com.altova.functions.Core.exists(closure.var2_shared))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ReadingType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf51_inputtoresult.eval(com.altova.CoreTypes.integerToDouble(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var2_shared))))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				var4_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_shared.moveNext()) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeriesReadingQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf52_inputtoresult.eval(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_shared.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if( var4_shared != null ) { var4_shared.close(); var4_shared = null; }
				var5_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("StartTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var6_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var6_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 11; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EndTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				var7_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 14;				
				if (!var7_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 14; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalFrequency", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf53_inputtoresult.eval(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var7_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 17;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				var8_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 17;				
				if (!var8_shared.moveNext()) {state = 18; return false; }
				var9_cast = com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_shared.current()))));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalReading", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq583_seq_(var9_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_18() throws Exception {
				state = 0;				
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUseID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("Resource1"))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var4_shared != null ) { var4_shared.close(); var4_shared = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var8_shared != null ) { var8_shared.close(); var8_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq583_seq_ implements IEnumerable
	{
		double var1_shared;
	
		public seq583_seq_(double var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq583_seq_ closure;
			public Enumerator(seq583_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Source", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf54_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.doubleToDecimal(closure.var1_shared));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq584_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		double var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
	
		public seq584_join(com.altova.mapforce.IEnumerable var1_shared, double var2_shared, com.altova.mapforce.IEnumerable var3_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq584_join closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			public Enumerator(seq584_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 4;				
				if (!(com.altova.functions.Core.exists(closure.var3_shared))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ReadingType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf55_inputtoresult.eval(com.altova.CoreTypes.integerToDouble(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var3_shared))))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeriesReadingQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf56_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("StartTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var5_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 9; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EndTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				var6_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var6_filter.moveNext()) {state = 13; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 12; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalFrequency", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf57_inputtoresult.eval(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalReading", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq585_seq_(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUseID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("Resource1"))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq585_seq_ implements IEnumerable
	{
		double var1_shared;
	
		public seq585_seq_(double var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq585_seq_ closure;
			public Enumerator(seq585_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Source", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf58_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.doubleToDecimal(closure.var1_shared));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq586_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		double var2_shared;
	
		public seq586_join(com.altova.mapforce.IEnumerable var1_shared, double var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq586_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq586_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ReadingType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf60_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeriesReadingQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf61_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("StartTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EndTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalFrequency", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf59_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalReading", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq587_seq_(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUseID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("Resource1"))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq587_seq_ implements IEnumerable
	{
		double var1_shared;
	
		public seq587_seq_(double var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq587_seq_ closure;
			public Enumerator(seq587_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Source", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf62_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.doubleToDecimal(closure.var1_shared));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq588_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		double var2_shared;
	
		public seq588_join(com.altova.mapforce.IEnumerable var1_shared, double var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq588_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq588_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ReadingType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf64_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeriesReadingQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf65_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("StartTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EndTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalFrequency", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf63_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalReading", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq589_seq_(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUseID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("Resource1"))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq589_seq_ implements IEnumerable
	{
		double var1_shared;
	
		public seq589_seq_(double var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq589_seq_ closure;
			public Enumerator(seq589_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Source", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf66_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.doubleToDecimal(closure.var1_shared));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq590_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		double var2_shared;
	
		public seq590_join(com.altova.mapforce.IEnumerable var1_shared, double var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq590_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq590_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ReadingType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf68_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeriesReadingQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf69_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("StartTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EndTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalFrequency", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf67_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalReading", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq591_seq_(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUseID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("Resource2"))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq591_seq_ implements IEnumerable
	{
		double var1_shared;
	
		public seq591_seq_(double var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq591_seq_ closure;
			public Enumerator(seq591_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Source", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf70_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.doubleToDecimal(closure.var1_shared));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq592_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		double var2_shared;
	
		public seq592_join(com.altova.mapforce.IEnumerable var1_shared, double var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq592_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq592_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ReadingType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf72_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeriesReadingQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf73_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("StartTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EndTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalFrequency", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf71_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalReading", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq593_seq_(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUseID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("Resource2"))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq593_seq_ implements IEnumerable
	{
		double var1_shared;
	
		public seq593_seq_(double var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq593_seq_ closure;
			public Enumerator(seq593_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Source", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf74_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.doubleToDecimal(closure.var1_shared));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq594_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		double var2_shared;
	
		public seq594_join(com.altova.mapforce.IEnumerable var1_shared, double var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq594_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq594_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ReadingType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf76_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeriesReadingQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf77_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("StartTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EndTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalFrequency", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf75_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalReading", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq595_seq_(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUseID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("Resource3"))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq595_seq_ implements IEnumerable
	{
		double var1_shared;
	
		public seq595_seq_(double var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq595_seq_ closure;
			public Enumerator(seq595_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Source", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf78_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.doubleToDecimal(closure.var1_shared));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq596_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		double var2_shared;
	
		public seq596_join(com.altova.mapforce.IEnumerable var1_shared, double var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq596_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq596_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ReadingType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf80_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeriesReadingQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf81_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("StartTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EndTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalFrequency", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf79_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalReading", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq597_seq_(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUseID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("Resource3"))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq597_seq_ implements IEnumerable
	{
		double var1_shared;
	
		public seq597_seq_(double var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq597_seq_ closure;
			public Enumerator(seq597_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Source", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf82_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.doubleToDecimal(closure.var1_shared));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq598_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		double var3_shared;
	
		public seq598_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, double var3_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq598_join closure;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			public Enumerator(seq598_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ReadingType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf84_inputtoresult.eval(closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeriesReadingQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf85_inputtoresult.eval(closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var4_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq342_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("StartTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				var5_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var5_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EndTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalFrequency", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf83_inputtoresult.eval(closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalReading", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq599_seq_(closure.var3_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq600_join(closure.var1_shared)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq599_seq_ implements IEnumerable
	{
		double var1_shared;
	
		public seq599_seq_(double var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq599_seq_ closure;
			public Enumerator(seq599_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("Source", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf86_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.doubleToDecimal(closure.var1_shared));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq600_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq600_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq600_join closure;
			IEnumerator var2_filter;
			IEnumerator var3_filter;
			public Enumerator(seq600_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq11_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq12_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var2_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq534_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq601_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq601_seq_ implements IEnumerable
	{
	
		public seq601_seq_()
		{
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq601_seq_ closure;
			public Enumerator(seq601_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Time Series Description"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("Total Metered Energy Cost"));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq602_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		double var2_shared;
		java.lang.String var3_shared;
	
		public seq602_join(com.altova.mapforce.IEnumerable var1_shared, double var2_shared, java.lang.String var3_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq602_join closure;
			IEnumerator var4_filter;
			public Enumerator(seq602_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ReadingType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf87_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeriesReadingQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf88_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("StartTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalFrequency", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf89_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalReading", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(closure.var3_shared))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUseID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("Resource4"))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq603_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		double var2_shared;
		java.lang.String var3_shared;
	
		public seq603_join(com.altova.mapforce.IEnumerable var1_shared, double var2_shared, java.lang.String var3_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq603_join closure;
			IEnumerator var4_filter;
			public Enumerator(seq603_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ReadingType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf90_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeriesReadingQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf91_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("StartTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalFrequency", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf92_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalReading", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(closure.var3_shared))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUseID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("Resource4"))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq604_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		double var2_shared;
		java.lang.String var3_shared;
	
		public seq604_join(com.altova.mapforce.IEnumerable var1_shared, double var2_shared, java.lang.String var3_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq604_join closure;
			IEnumerator var4_filter;
			public Enumerator(seq604_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ReadingType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf93_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeriesReadingQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf94_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("StartTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalFrequency", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf95_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalReading", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(closure.var3_shared))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUseID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("Resource5"))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq605_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		double var2_shared;
		java.lang.String var3_shared;
	
		public seq605_join(com.altova.mapforce.IEnumerable var1_shared, double var2_shared, java.lang.String var3_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq605_join closure;
			IEnumerator var4_filter;
			public Enumerator(seq605_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ReadingType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf96_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TimeSeriesReadingQuantity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf97_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var4_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq86_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("StartTimeStamp", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.DateTimeToString(com.altova.functions.Xlsx.XLSXToDate(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalFrequency", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf98_inputtoresult.eval(closure.var2_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("IntervalReading", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(closure.var3_shared))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUseID", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("IDref", ""), com.altova.functions.Core.box("Resource5"))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq606_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq606_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq606_join closure;
			IEnumerator var3_shared;
			com.altova.mapforce.IEnumerable var4_Row;
			IEnumerator var5_filter;
			IEnumerator var9_shared;
			com.altova.mapforce.IEnumerable var10_Row;
			com.altova.mapforce.IEnumerable var11_filter;
			com.altova.mapforce.IEnumerable var6_Cell;
			IEnumerator var12_shared;
			IEnumerator var7_filter;
			IEnumerator var13_filter;
			java.lang.String var8_cast;
			java.lang.String var14_cast;
			public Enumerator(seq606_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current()))));
				var5_filter = (var4_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 9;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var9_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq15_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq16_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 4; return false; }
				var6_Cell = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current()))));
				var7_filter = (var6_Cell).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var7_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq123_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 6; return false; }
				var8_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var7_filter.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AllResourceTotal", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq607_join(closure.var1_shared, var4_Row, var6_Cell, var8_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var9_shared.moveNext()) {state = 10; return false; }
				var10_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var9_shared.current()))));
				var11_filter = new com.altova.functions.Core.SequenceCache((new seq608_filter(var10_Row)));
				var12_shared = (var11_filter).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var9_shared != null ) { var9_shared.close(); var9_shared = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var12_shared.moveNext()) {state = 12; return false; }
				var13_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var12_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var12_shared != null ) { var12_shared.close(); var12_shared = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var13_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq123_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 13; return false; }
				var14_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var13_filter.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AllResourceTotal", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq610_join(closure.var1_shared, var10_Row, var11_filter, var14_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_shared != null ) { var12_shared.close(); var12_shared = null; }
				if( var9_shared != null ) { var9_shared.close(); var9_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq607_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
		java.lang.String var4_shared;
	
		public seq607_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared, java.lang.String var4_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq607_join closure;
			IEnumerator var5_shared;
			IEnumerator var6_filter;
			IEnumerator var7_shared;
			IEnumerator var8_filter;
			IEnumerator var9_filter;
			IEnumerator var10_shared;
			IEnumerator var11_filter;
			IEnumerator var12_filter;
			IEnumerator var13_filter;
			public Enumerator(seq607_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var5_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var5_shared.moveNext()) {state = 3; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 7;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				var7_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var6_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq534_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EndUse", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf100_inputtoresult.eval(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var7_shared.moveNext()) {state = 8; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 12;				
				if( var7_shared != null ) { var7_shared.close(); var7_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceBoundary", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf99_inputtoresult.eval(com.altova.CoreTypes.parseDouble(closure.var4_shared))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var8_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq534_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 9; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TemporalStatus", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf101_inputtoresult.eval(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("SiteEnergyUse", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.functions.Core.divide(com.altova.CoreTypes.parseDecimal(closure.var4_shared), new java.math.BigDecimal("1000")))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 14;				
				var9_filter = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 14;				
				if (!var9_filter.moveNext()) {state = 15; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq344_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 14; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("SiteEnergyUseIntensity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var9_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 17;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				var10_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 19;				
				if (!var10_shared.moveNext()) {state = 18; return false; }
				var11_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var10_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 22;				
				if( var10_shared != null ) { var10_shared.close(); var10_shared = null; }
				var12_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 19;				
				if (!var11_filter.moveNext()) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq534_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 19; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EnergyCost", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var11_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_20() throws Exception {
				state = 17;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 24;				
				if (!var12_filter.moveNext()) {state = 23; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq60_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq61_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 22; return false; }
				var13_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var12_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 0;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 24;				
				if (!var13_filter.moveNext()) {state = 25; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var13_filter.current()))))))))) {state = 24; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ElectricitySourcedFromOnsiteRenewableSystems", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.functions.Core.divide(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var13_filter.current())))), new java.math.BigDecimal("3.412")))));
				pos++;
				return true;
			}
			private boolean moveNext_25() throws Exception {
				state = 22;				
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_shared != null ) { var7_shared.close(); var7_shared = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var10_shared != null ) { var10_shared.close(); var10_shared = null; }
				if( var13_filter != null ) { var13_filter.close(); var13_filter = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq608_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq608_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq608_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq608_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq609_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq61_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq609_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq609_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq609_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq609_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq60_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq610_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
		com.altova.mapforce.IEnumerable var3_shared;
		java.lang.String var4_shared;
	
		public seq610_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared, com.altova.mapforce.IEnumerable var3_shared, java.lang.String var4_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
			this.var3_shared = var3_shared;
			this.var4_shared = var4_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq610_join closure;
			IEnumerator var5_shared;
			IEnumerator var6_filter;
			IEnumerator var7_shared;
			IEnumerator var8_filter;
			IEnumerator var9_shared;
			IEnumerator var10_filter;
			IEnumerator var11_filter;
			IEnumerator var12_filter;
			public Enumerator(seq610_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 22:	if (moveNext_22()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var5_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var5_shared.moveNext()) {state = 3; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 7;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				var7_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var6_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq534_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EndUse", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf100_inputtoresult.eval(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var7_shared.moveNext()) {state = 8; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 12;				
				if( var7_shared != null ) { var7_shared.close(); var7_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceBoundary", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf102_inputtoresult.eval(com.altova.CoreTypes.parseDouble(closure.var4_shared))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var8_filter.moveNext()) {state = 10; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq534_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 9; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TemporalStatus", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf101_inputtoresult.eval(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var8_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("SiteEnergyUse", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.functions.Core.divide(com.altova.CoreTypes.parseDecimal(closure.var4_shared), new java.math.BigDecimal("1000")))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 14;				
				var9_shared = (closure.var3_shared).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 16;				
				if (!var9_shared.moveNext()) {state = 15; return false; }
				var10_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var9_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 19;				
				if( var9_shared != null ) { var9_shared.close(); var9_shared = null; }
				var11_filter = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 16;				
				if (!var10_filter.moveNext()) {state = 17; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq344_map(((com.altova.mapforce.IMFNode)(var10_filter.current()))))))))) {state = 16; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("SiteEnergyUseIntensity", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var10_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_17() throws Exception {
				state = 14;				
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 21;				
				if (!var11_filter.moveNext()) {state = 20; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq56_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq57_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 19; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 0;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 21;				
				if (!var12_filter.moveNext()) {state = 22; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq123_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 21; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EnergyCost", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var12_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_22() throws Exception {
				state = 19;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_shared != null ) { var7_shared.close(); var7_shared = null; }
				if( var10_filter != null ) { var10_filter.close(); var10_filter = null; }
				if( var9_shared != null ) { var9_shared.close(); var9_shared = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq611_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq611_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq611_join closure;
			IEnumerator var2_shared;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq611_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ScenarioName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box("RecommendedPackage1"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var2_shared.moveNext()) {state = 4; return false; }
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 10;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ScenarioType", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PackageOfMeasures", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq612_join(closure.var1_shared)))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq26_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq27_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 5; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var4_filter.moveNext()) {state = 8; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 7; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("TemporalStatus", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf103_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedFields", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq617_join(closure.var1_shared)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq612_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq612_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq612_join closure;
			IEnumerator var2_shared;
			IEnumerator var3_filter;
			IEnumerator var5_shared;
			com.altova.mapforce.IEnumerable var6_Row;
			IEnumerator var4_filter;
			IEnumerator var7_filter;
			IEnumerator var10_shared;
			IEnumerator var11_filter;
			IEnumerator var14_shared;
			IEnumerator var8_filter;
			IEnumerator var15_filter;
			IEnumerator var12_filter;
			IEnumerator var17_shared;
			com.altova.mapforce.IEnumerable var9_filter;
			IEnumerator var18_filter;
			java.lang.String var13_cast;
			IEnumerator var16_filter;
			IEnumerator var20_shared;
			IEnumerator var21_filter;
			IEnumerator var19_filter;
			IEnumerator var23_shared;
			IEnumerator var24_filter;
			IEnumerator var22_filter;
			IEnumerator var25_filter;
			public Enumerator(seq612_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
					case 23:	if (moveNext_23()) return true; break;
					case 24:	if (moveNext_24()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 32:	if (moveNext_32()) return true; break;
					case 33:	if (moveNext_33()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
					case 35:	if (moveNext_35()) return true; break;
					case 37:	if (moveNext_37()) return true; break;
					case 38:	if (moveNext_38()) return true; break;
					case 39:	if (moveNext_39()) return true; break;
					case 40:	if (moveNext_40()) return true; break;
					case 41:	if (moveNext_41()) return true; break;
					case 42:	if (moveNext_42()) return true; break;
					case 44:	if (moveNext_44()) return true; break;
					case 45:	if (moveNext_45()) return true; break;
					case 46:	if (moveNext_46()) return true; break;
					case 47:	if (moveNext_47()) return true; break;
					case 48:	if (moveNext_48()) return true; break;
					case 49:	if (moveNext_49()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				var3_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 9;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				var5_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq26_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq27_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualSavingsCost", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.parseInteger(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var5_shared.moveNext()) {state = 10; return false; }
				var6_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current()))));
				var7_filter = (var6_Row).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 16;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				var10_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var7_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var7_filter.current()))))))))) {state = 11; return false; }
				var8_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var7_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var8_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 13; return false; }
				var9_filter = new com.altova.functions.Core.SequenceCache((new seq613_filter(var6_Row)));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualSavingsByFuel", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq615_join(((com.altova.mapforce.IMFNode)(var8_filter.current())), var9_filter)));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var10_shared.moveNext()) {state = 17; return false; }
				var11_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var10_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 23;				
				if( var10_shared != null ) { var10_shared.close(); var10_shared = null; }
				var14_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var11_filter.moveNext()) {state = 19; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq26_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 18; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq27_map(((com.altova.mapforce.IMFNode)(var11_filter.current()))))))))) {state = 18; return false; }
				var12_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var11_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 20;				
				if (!var12_filter.moveNext()) {state = 21; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq112_map(((com.altova.mapforce.IMFNode)(var12_filter.current()))))))))) {state = 20; return false; }
				var13_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var12_filter.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualSavingsByFuel", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq616_seq_(var13_cast)));
				pos++;
				return true;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 25;				
				if (!var14_shared.moveNext()) {state = 24; return false; }
				var15_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var14_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 30;				
				if( var14_shared != null ) { var14_shared.close(); var14_shared = null; }
				var17_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 27;				
				if (!var15_filter.moveNext()) {state = 26; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq26_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 25; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq27_map(((com.altova.mapforce.IMFNode)(var15_filter.current()))))))))) {state = 25; return false; }
				var16_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var15_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 23;				
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 27;				
				if (!var16_filter.moveNext()) {state = 28; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq95_map(((com.altova.mapforce.IMFNode)(var16_filter.current()))))))))) {state = 27; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("SummerPeakElectricityReduction", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var16_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_28() throws Exception {
				state = 25;				
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				return false;
			}
			private boolean moveNext_30() throws Exception {
				state = 32;				
				if (!var17_shared.moveNext()) {state = 31; return false; }
				var18_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var17_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_31() throws Exception {
				state = 37;				
				if( var17_shared != null ) { var17_shared.close(); var17_shared = null; }
				var20_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_32() throws Exception {
				state = 34;				
				if (!var18_filter.moveNext()) {state = 33; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq26_map(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))))) {state = 32; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq27_map(((com.altova.mapforce.IMFNode)(var18_filter.current()))))))))) {state = 32; return false; }
				var19_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var18_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_33() throws Exception {
				state = 30;				
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				return false;
			}
			private boolean moveNext_34() throws Exception {
				state = 34;				
				if (!var19_filter.moveNext()) {state = 35; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq39_map(((com.altova.mapforce.IMFNode)(var19_filter.current()))))))))) {state = 34; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("PackageFirstCost", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var19_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_35() throws Exception {
				state = 32;				
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				return false;
			}
			private boolean moveNext_37() throws Exception {
				state = 39;				
				if (!var20_shared.moveNext()) {state = 38; return false; }
				var21_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var20_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_38() throws Exception {
				state = 44;				
				if( var20_shared != null ) { var20_shared.close(); var20_shared = null; }
				var23_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_39() throws Exception {
				state = 41;				
				if (!var21_filter.moveNext()) {state = 40; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq26_map(((com.altova.mapforce.IMFNode)(var21_filter.current()))))))))) {state = 39; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq27_map(((com.altova.mapforce.IMFNode)(var21_filter.current()))))))))) {state = 39; return false; }
				var22_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var21_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_40() throws Exception {
				state = 37;				
				if( var21_filter != null ) { var21_filter.close(); var21_filter = null; }
				return false;
			}
			private boolean moveNext_41() throws Exception {
				state = 41;				
				if (!var22_filter.moveNext()) {state = 42; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq123_map(((com.altova.mapforce.IMFNode)(var22_filter.current()))))))))) {state = 41; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FundingFromIncentives", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var22_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_42() throws Exception {
				state = 39;				
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				return false;
			}
			private boolean moveNext_44() throws Exception {
				state = 46;				
				if (!var23_shared.moveNext()) {state = 45; return false; }
				var24_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var23_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_45() throws Exception {
				state = 0;				
				if( var23_shared != null ) { var23_shared.close(); var23_shared = null; }
				return false;
			}
			private boolean moveNext_46() throws Exception {
				state = 48;				
				if (!var24_filter.moveNext()) {state = 47; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq26_map(((com.altova.mapforce.IMFNode)(var24_filter.current()))))))))) {state = 46; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq27_map(((com.altova.mapforce.IMFNode)(var24_filter.current()))))))))) {state = 46; return false; }
				var25_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var24_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_47() throws Exception {
				state = 44;				
				if( var24_filter != null ) { var24_filter.close(); var24_filter = null; }
				return false;
			}
			private boolean moveNext_48() throws Exception {
				state = 48;				
				if (!var25_filter.moveNext()) {state = 49; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq351_map(((com.altova.mapforce.IMFNode)(var25_filter.current()))))))))) {state = 48; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("SimplePayback", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var25_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_49() throws Exception {
				state = 46;				
				if( var25_filter != null ) { var25_filter.close(); var25_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				if( var12_filter != null ) { var12_filter.close(); var12_filter = null; }
				if( var11_filter != null ) { var11_filter.close(); var11_filter = null; }
				if( var10_shared != null ) { var10_shared.close(); var10_shared = null; }
				if( var16_filter != null ) { var16_filter.close(); var16_filter = null; }
				if( var15_filter != null ) { var15_filter.close(); var15_filter = null; }
				if( var14_shared != null ) { var14_shared.close(); var14_shared = null; }
				if( var19_filter != null ) { var19_filter.close(); var19_filter = null; }
				if( var18_filter != null ) { var18_filter.close(); var18_filter = null; }
				if( var17_shared != null ) { var17_shared.close(); var17_shared = null; }
				if( var22_filter != null ) { var22_filter.close(); var22_filter = null; }
				if( var21_filter != null ) { var21_filter.close(); var21_filter = null; }
				if( var20_shared != null ) { var20_shared.close(); var20_shared = null; }
				if( var25_filter != null ) { var25_filter.close(); var25_filter = null; }
				if( var24_filter != null ) { var24_filter.close(); var24_filter = null; }
				if( var23_shared != null ) { var23_shared.close(); var23_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq613_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq613_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq613_filter closure;
			IEnumerator var2_filter;
			public Enumerator(seq613_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_filter = ((new seq614_filter(closure.var1_shared))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq27_map(((com.altova.mapforce.IMFNode)(var2_filter.current()))))))))) {state = 2; return false; }
				current = var2_filter.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_filter != null ) { var2_filter.close(); var2_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq614_filter implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq614_filter(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq614_filter closure;
			IEnumerator var2_shared;
			public Enumerator(seq614_filter closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq26_map(((com.altova.mapforce.IMFNode)(var2_shared.current()))))))))) {state = 2; return false; }
				current = var2_shared.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq615_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq615_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_current = var1_current;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq615_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			IEnumerator var5_shared;
			IEnumerator var6_filter;
			public Enumerator(seq615_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EnergyResource", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf104_inputtoresult.eval(com.altova.CoreTypes.nodeToString(closure.var1_current))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_shared.moveNext()) {state = 4; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 8;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				var5_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_filter.moveNext()) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf105_inputtoresult.eval(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current()))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var5_shared.moveNext()) {state = 9; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 0;				
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 10;				
				if (!var6_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq105_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 10; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualSavingsNativeUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_shared != null ) { var5_shared.close(); var5_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq616_seq_ implements IEnumerable
	{
		java.lang.String var1_shared;
	
		public seq616_seq_(java.lang.String var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq616_seq_ closure;
			public Enumerator(seq616_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("EnergyResource", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf106_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ResourceUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf107_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("AnnualSavingsNativeUnits", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.decimalToString(com.altova.CoreTypes.parseDecimal(closure.var1_shared))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq617_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
	
		public seq617_join(com.altova.mapforce.IEnumerable var1_shared)
		{
			this.var1_shared = var1_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq617_join closure;
			IEnumerator var2_shared;
			com.altova.mapforce.IEnumerable var3_Row;
			IEnumerator var4_filter;
			IEnumerator var6_shared;
			com.altova.mapforce.IEnumerable var7_Row;
			IEnumerator var8_filter;
			IEnumerator var5_filter;
			IEnumerator var9_filter;
			public Enumerator(seq617_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_shared.moveNext()) {state = 3; return false; }
				var3_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var2_shared.current()))));
				var4_filter = (var3_Row).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 9;				
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				var6_shared = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq26_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq27_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq349_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq618_join(var3_Row, ((com.altova.mapforce.IMFNode)(var5_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var6_shared.moveNext()) {state = 10; return false; }
				var7_Row = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var6_shared.current()))));
				var8_filter = (var7_Row).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var8_filter.moveNext()) {state = 12; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq26_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq27_map(((com.altova.mapforce.IMFNode)(var8_filter.current()))))))))) {state = 11; return false; }
				var9_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var8_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var9_filter.moveNext()) {state = 14; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var9_filter.current()))))))))) {state = 13; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("UserDefinedField", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq619_join(var7_Row, ((com.altova.mapforce.IMFNode)(var9_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var2_shared != null ) { var2_shared.close(); var2_shared = null; }
				if( var9_filter != null ) { var9_filter.close(); var9_filter = null; }
				if( var8_filter != null ) { var8_filter.close(); var8_filter = null; }
				if( var6_shared != null ) { var6_shared.close(); var6_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq618_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq618_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_shared = var1_shared;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq618_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq618_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var2_current)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq349_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq619_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq619_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_shared = var1_shared;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq619_join closure;
			IEnumerator var3_filter;
			IEnumerator var4_filter;
			public Enumerator(seq619_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_filter = (closure.var1_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_filter.moveNext()) {state = 3; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq8_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq9_map(((com.altova.mapforce.IMFNode)(var3_filter.current()))))))))) {state = 2; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldValue", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(closure.var2_current)));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq345_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("FieldName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var4_filter.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq620_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq620_join(com.altova.mapforce.IEnumerable var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq620_join closure;
			IEnumerator var3_shared;
			IEnumerator var4_filter;
			IEnumerator var5_filter;
			IEnumerator var6_filter;
			java.lang.String var7_cast;
			public Enumerator(seq620_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_shared = (closure.var2_shared).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_shared.moveNext()) {state = 3; return false; }
				var4_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Worksheet", ""), ((com.altova.mapforce.IMFNode)(var3_shared.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq6_map(((com.altova.mapforce.IMFNode)(var4_filter.current()))))))))) {state = 4; return false; }
				var5_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Row", ""), ((com.altova.mapforce.IMFNode)(var4_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var5_filter.moveNext()) {state = 7; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq70_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq71_map(((com.altova.mapforce.IMFNode)(var5_filter.current()))))))))) {state = 6; return false; }
				var6_filter = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Cell", ""), ((com.altova.mapforce.IMFNode)(var5_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var6_filter.moveNext()) {state = 9; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq7_CoreAny((new seq10_map(((com.altova.mapforce.IMFNode)(var6_filter.current()))))))))) {state = 8; return false; }
				var7_cast = com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var6_filter.current())));
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("Contact", "http://nrel.gov/schemas/bedes-auc/2014"), (new seq621_seq_(var7_cast, closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var6_filter != null ) { var6_filter.close(); var6_filter = null; }
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				if( var4_filter != null ) { var4_filter.close(); var4_filter = null; }
				if( var3_shared != null ) { var3_shared.close(); var3_shared = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq621_seq_ implements IEnumerable
	{
		java.lang.String var1_shared;
		com.altova.mapforce.IEnumerable var2_shared;
	
		public seq621_seq_(java.lang.String var1_shared, com.altova.mapforce.IEnumerable var2_shared)
		{
			this.var1_shared = var1_shared;
			this.var2_shared = var2_shared;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq621_seq_ closure;
			public Enumerator(seq621_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("ID", ""), closure.var2_shared);
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ContactRole", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(com.mapforce.vmf.vmf108_inputtoresult.eval(closure.var1_shared)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ContactName", "http://nrel.gov/schemas/bedes-auc/2014"), com.altova.functions.Core.box(closure.var1_shared));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class Outer implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_ASHRAE_211_Form_Instance;
	
		public Outer(com.altova.mapforce.IMFNode var1_ASHRAE_211_Form_Instance)
		{
			this.var1_ASHRAE_211_Form_Instance = var1_ASHRAE_211_Form_Instance;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			Outer closure;
			IEnumerator var2_box;
			public Enumerator(Outer closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_box = ((new main(closure.var1_ASHRAE_211_Form_Instance))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_box.moveNext()) {state = 3; return false; }
				current = var2_box.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_box != null ) { var2_box.close(); var2_box = null; }
				return false;
			}

			
			public void close()
			{
				try
				{
				if( var2_box != null ) { var2_box.close(); var2_box = null; }
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}



	// instances
	protected org.w3c.dom.Node varASHRAE_211_FormInstance;

	public void run(String ASHRAE_211_FormSourceFilename, String BuildingSync2TargetFilename) throws Exception {
		// open source streams
		writeTrace("Loading " + ASHRAE_211_FormSourceFilename + "...\n");
		com.altova.io.FileInput ASHRAE_211_FormSource = new com.altova.io.FileInput(ASHRAE_211_FormSourceFilename);
		// open target stream
		com.altova.io.FileOutput BuildingSync2Target = new com.altova.io.FileOutput(BuildingSync2TargetFilename);

		// run
	
		run(ASHRAE_211_FormSource, BuildingSync2Target);

		// close source streams
		ASHRAE_211_FormSource.close();
		// close target stream
		writeTrace("Saving " + BuildingSync2TargetFilename + "...\n");
		BuildingSync2Target.close();
	}


	// main entry point

	public void run(com.altova.io.Input ASHRAE_211_FormSource, com.altova.io.Output BuildingSync2Target) throws Exception {
		// Open the source(s)
		com.altova.xml.XLSXFileReader xlsxReader_ASHRAE_211_Form = new com.altova.xml.XLSXFileReader(ASHRAE_211_FormSource);
		org.w3c.dom.Document doc_ASHRAE_211_Form = xlsxReader_ASHRAE_211_Form.run();
		varASHRAE_211_FormInstance = doc_ASHRAE_211_Form;
		if (runDoesCloseAll)
			ASHRAE_211_FormSource.close();

		// Create the target
		org.w3c.dom.Document BuildingSync2Doc = (BuildingSync2Target.getType() == com.altova.io.Output.IO_DOM) ? BuildingSync2Target.getDocument() : XmlTreeOperations.createDocument();

		// Execute mapping

		main mapping = new main(new com.altova.xml.DOMDocumentAsMFNodeAdapter(varASHRAE_211_FormInstance, ASHRAE_211_FormSource.getFilename()));

		com.altova.xml.MFDOMWriter.write(mapping, BuildingSync2Doc);
		// Close the target
		XmlTreeOperations.saveDocument(BuildingSync2Doc, BuildingSync2Target, "UTF-8", false, false, true, false);

		
		if (runDoesCloseAll)
		{
			ASHRAE_211_FormSource.close();
			BuildingSync2Target.close();
		}
	}



}
